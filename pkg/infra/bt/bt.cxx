/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: C:\MMD\mlib_go\pkg\infra\bt\bullet.i


extern
#ifdef __cplusplus
  "C"
#endif
  void cgo_panic__bt_e001408c92acdfd7(const char*);
static void _swig_gopanic(const char *p) {
  cgo_panic__bt_e001408c92acdfd7(p);
}



#define SWIG_VERSION 0x040200
#define SWIGGO
#define SWIGMODULE bt
#define SWIG_DIRECTORS
/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 


/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif



#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef ptrdiff_t intgo;
typedef size_t uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Go proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#include <exception>
#include <map>

namespace Swig {

  class DirectorException : public std::exception {
  };
}

/* Handle memory management for directors.  */

namespace {
  struct GCItem {
    virtual ~GCItem() {}
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem* operator->() {
      return _item;
    }

    private:
      GCItem *_item;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };
}

class Swig_memory {
public:
  template <typename Type>
  void swig_acquire_pointer(Type* vptr) {
    if (vptr) {
      swig_owner[vptr] = new GCItem_T<Type>(vptr);
    }
  }
private:
  typedef std::map<void *, GCItem_var> swig_ownership_map;
  swig_ownership_map swig_owner;
};

template <typename Type>
static void swig_acquire_pointer(Swig_memory** pmem, Type* ptr) {
  if (!pmem) {
    *pmem = new Swig_memory;
  }
  (*pmem)->swig_acquire_pointer(ptr);
}

#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "LinearMath/btScalar.h"


#include "LinearMath/btMinMax.h"


#include "LinearMath/btAlignedAllocator.h"


#include "LinearMath/btAlignedAllocator.cpp"


#include "LinearMath/btVector3.h"


#include "LinearMath/btQuadWord.h"


#include "LinearMath/btQuaternion.h"


#include "LinearMath/btMatrix3x3.h"


#include "LinearMath/btTransform.h"


#include "LinearMath/btMotionState.h"


#include "LinearMath/btDefaultMotionState.h"


#include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.h"


#include <string.h>


#include "BulletCollision/CollisionShapes/btCollisionShape.h"


#include "BulletCollision/CollisionShapes/btCollisionShape.cpp"


#include "BulletCollision/CollisionShapes/btCollisionMargin.h"


#include "BulletCollision/CollisionShapes/btConvexShape.h"


#include "BulletCollision/CollisionShapes/btConvexShape.cpp"


#include "LinearMath/btAabbUtil2.h"


#include "BulletCollision/CollisionShapes/btConvexInternalShape.h"


#include "BulletCollision/CollisionShapes/btConvexInternalShape.cpp"


#include "BulletCollision/CollisionShapes/btSphereShape.h"


#include "BulletCollision/CollisionShapes/btSphereShape.cpp"


#include "BulletCollision/CollisionShapes/btPolyhedralConvexShape.h"


#include "LinearMath/btAlignedObjectArray.h"


#include "BulletCollision/CollisionShapes/btConvexPolyhedron.h"


#include "BulletCollision/CollisionShapes/btConvexPolyhedron.cpp"


#include "LinearMath/btConvexHullComputer.h"


#include "LinearMath/btConvexHullComputer.cpp"


#include "LinearMath/btGeometryUtil.h"


#include "LinearMath/btGeometryUtil.cpp"


#include "LinearMath/btGrahamScan2dConvexHull.h"


#include "BulletCollision/CollisionShapes/btPolyhedralConvexShape.cpp"


#include "BulletCollision/CollisionShapes/btBoxShape.h"


#include "BulletCollision/CollisionShapes/btBoxShape.cpp"


#include "BulletCollision/CollisionShapes/btCapsuleShape.h"


#include "BulletCollision/CollisionShapes/btCapsuleShape.cpp"


#include "BulletCollision/CollisionDispatch/btCollisionObject.h"


#include "BulletCollision/CollisionDispatch/btCollisionObject.cpp"


#include "BulletDynamics/Dynamics/btRigidBody.h"


#include "LinearMath/btTransformUtil.h"


#include "BulletDynamics/ConstraintSolver/btJacobianEntry.h"


#include "BulletDynamics/ConstraintSolver/btSolverBody.h"


#include "BulletDynamics/ConstraintSolver/btSolverConstraint.h"


#include "BulletDynamics/ConstraintSolver/btTypedConstraint.h"


#include "BulletDynamics/ConstraintSolver/btTypedConstraint.cpp"


#include "LinearMath/btHashMap.h"


#include "LinearMath/btSerializer.h"


#include "LinearMath/btSerializer.cpp"


#include "LinearMath/btSerializer64.cpp"


#include "BulletDynamics/Dynamics/btRigidBody.cpp"


#include "BulletCollision/BroadphaseCollision/btDbvt.h"


#include "BulletCollision/BroadphaseCollision/btDbvt.cpp"


#include "BulletCollision/BroadphaseCollision/btBroadphaseInterface.h"


#include "BulletCollision/BroadphaseCollision/btOverlappingPairCallback.h"


#include "BulletCollision/BroadphaseCollision/btOverlappingPairCache.h"


#include "BulletCollision/BroadphaseCollision/btOverlappingPairCache.cpp"


#include "BulletCollision/BroadphaseCollision/btDbvtBroadphase.h"


#include "LinearMath/btThreads.h"


#include "LinearMath/btThreads.cpp"


#include "BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp"


#include "BulletCollision/BroadphaseCollision/btDispatcher.h"


#include "BulletCollision/BroadphaseCollision/btDispatcher.cpp"


#include "BulletCollision/NarrowPhaseCollision/btManifoldPoint.h"


#include "BulletCollision/NarrowPhaseCollision/btPersistentManifold.h"


#include "BulletCollision/NarrowPhaseCollision/btPersistentManifold.cpp"


#include "BulletCollision/NarrowPhaseCollision/btDiscreteCollisionDetectorInterface.h"


#include "BulletCollision/CollisionDispatch/btCollisionObjectWrapper.h"


#include "BulletCollision/CollisionDispatch/btManifoldResult.h"


#include "BulletCollision/CollisionDispatch/btManifoldResult.cpp"


#include "BulletCollision/CollisionDispatch/btCollisionCreateFunc.h"


#include "BulletCollision/CollisionDispatch/btCollisionDispatcher.h"


#include "BulletCollision/CollisionDispatch/btCollisionDispatcher.cpp"


#include "BulletCollision/CollisionDispatch/btCollisionWorld.h"


#include "BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h"


#include "BulletCollision/NarrowPhaseCollision/btSimplexSolverInterface.h"


#include "BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.h"


#include "BulletCollision/CollisionShapes/btTriangleCallback.h"


#include "BulletCollision/CollisionShapes/btConcaveShape.h"


#include "BulletCollision/CollisionShapes/btStridingMeshInterface.h"


#include "BulletCollision/CollisionShapes/btTriangleMeshShape.h"


#include "BulletCollision/BroadphaseCollision/btQuantizedBvh.h"


#include "BulletCollision/CollisionShapes/btOptimizedBvh.h"


#include "BulletCollision/CollisionShapes/btTriangleInfoMap.h"


#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.h"


#include "BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h"


#include "BulletCollision/NarrowPhaseCollision/btRaycastCallback.h"


#include "LinearMath/btIDebugDraw.h"


#include "BulletCollision/NarrowPhaseCollision/btConvexCast.h"


#include "BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.h"


#include "BulletCollision/NarrowPhaseCollision/btGjkConvexCast.h"


#include "BulletCollision/NarrowPhaseCollision/btGjkConvexCast.cpp"


#include "BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.h"


#include "BulletCollision/CollisionDispatch/btCollisionWorld.cpp"


#include "BulletDynamics/ConstraintSolver/btContactSolverInfo.h"


#include "BulletDynamics/Dynamics/btDynamicsWorld.h"


#include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.h"


#include "BulletCollision/CollisionDispatch/btUnionFind.h"


#include "BulletCollision/CollisionDispatch/btSimulationIslandManager.h"


#include "BulletDynamics/ConstraintSolver/btConstraintSolver.h"


#include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.h"


#include "BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp"


#include "BulletDynamics/ConstraintSolver/btConeTwistConstraint.h"


#include "BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h"


#include "BulletDynamics/Dynamics/btDiscreteDynamicsWorld.cpp"


#include "BulletCollision/CollisionShapes/btTriangleCallback.cpp"


#include "BulletCollision/NarrowPhaseCollision/btRaycastCallback.cpp"


#include "BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.cpp"


#include "BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp"


#include "BulletCollision/CollisionDispatch/btUnionFind.cpp"


#include "BulletCollision/CollisionDispatch/btSimulationIslandManager.cpp"


#include "BulletCollision/NarrowPhaseCollision/btConvexCast.cpp"


#include "BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.cpp"


#include "BulletCollision/NarrowPhaseCollision/btGjkPairDetector.h"


#include "BulletCollision/NarrowPhaseCollision/btContinuousConvexCollision.cpp"


#include "BulletCollision/CollisionShapes/btConcaveShape.cpp"


#include "BulletCollision/CollisionShapes/btTriangleMeshShape.cpp"


#include "BulletCollision/BroadphaseCollision/btQuantizedBvh.cpp"


#include "BulletCollision/CollisionShapes/btOptimizedBvh.cpp"


#include "BulletCollision/CollisionShapes/btBvhTriangleMeshShape.cpp"


#include "BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp"


#include "BulletCollision/NarrowPhaseCollision/btSubSimplexConvexCast.cpp"


#include "BulletCollision/CollisionShapes/btStridingMeshInterface.cpp"


#include "BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp"


#include "BulletCollision/NarrowPhaseCollision/btGjkEpa2.h"


#include "BulletCollision/NarrowPhaseCollision/btGjkEpaPenetrationDepthSolver.cpp"


#include "BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp"


#include "BulletCollision/BroadphaseCollision/btBroadphaseProxy.cpp"


#include "BulletCollision/CollisionDispatch/btCollisionConfiguration.h"


#include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.h"


#include "BulletCollision/BroadphaseCollision/btCollisionAlgorithm.h"


#include "BulletCollision/BroadphaseCollision/btCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btActivatingCollisionAlgorithm.cpp"


#include "BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.h"


#include "BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp"


#include "BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btConvexConvexAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btEmptyCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btConvexConcaveCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btCompoundCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btHashedSimplePairCache.h"


#include "BulletCollision/CollisionDispatch/btHashedSimplePairCache.cpp"


#include "BulletCollision/CollisionDispatch/btCompoundCompoundCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btCompoundCompoundCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btConvexPlaneCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btSphereBoxCollisionAlgorithm.cpp"


#include "BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h"


#include "BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.cpp"


#include "BulletCollision/NarrowPhaseCollision/btConvexPenetrationDepthSolver.h"


#include "BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.h"


#include "BulletCollision/NarrowPhaseCollision/btMinkowskiPenetrationDepthSolver.cpp"


#include "LinearMath/btPoolAllocator.h"


#include "BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp"


#include "BulletCollision/CollisionShapes/btMiniSDF.h"


#include "BulletCollision/CollisionShapes/btMiniSDF.cpp"


#include "BulletCollision/CollisionDispatch/btBoxBoxDetector.h"


#include "BulletCollision/CollisionDispatch/btBoxBoxDetector.cpp"


#include "BulletCollision/CollisionShapes/btSdfCollisionShape.h"


#include "BulletCollision/CollisionShapes/btSdfCollisionShape.cpp"


#include "BulletCollision/CollisionDispatch/SphereTriangleDetector.h"


#include "BulletCollision/CollisionDispatch/SphereTriangleDetector.cpp"


#include "BulletCollision/CollisionShapes/btStaticPlaneShape.h"


#include "BulletCollision/CollisionShapes/btStaticPlaneShape.cpp"


#include "BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.h"


#include "BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp"


#include "LinearMath/btMDebugDraw.h"


#include "LinearMath/btMDebugDraw.cpp"


// C++ director class methods.
#include "bt.h"

SwigDirector_btMDebugDrawLiner::SwigDirector_btMDebugDrawLiner(int swig_p)
    : btMDebugDrawLiner(),
      go_val(swig_p), swig_mem(0)
{ }

extern "C" void Swiggo_DeleteDirector_btMDebugDrawLiner_bt_e001408c92acdfd7(intgo);
SwigDirector_btMDebugDrawLiner::~SwigDirector_btMDebugDrawLiner()
{
  Swiggo_DeleteDirector_btMDebugDrawLiner_bt_e001408c92acdfd7(go_val);
  delete swig_mem;
}

extern "C" void Swig_DirectorBtMDebugDrawLiner_callback_drawLine_bt_e001408c92acdfd7(int, btVector3 *from, btVector3 *to, btVector3 *color);
void SwigDirector_btMDebugDrawLiner::drawLine(btVector3 const &from,btVector3 const &to,btVector3 const &color) {
  btVector3 *swig_from;
  btVector3 *swig_to;
  btVector3 *swig_color;
  
  swig_from = (btVector3 *)&from; 
  swig_to = (btVector3 *)&to; 
  swig_color = (btVector3 *)&color; 
  Swig_DirectorBtMDebugDrawLiner_callback_drawLine_bt_e001408c92acdfd7(go_val, swig_from, swig_to, swig_color);
}

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_bt_e001408c92acdfd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_btGetVersion_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)btGetVersion();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btIsDoublePrecision_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)btIsDoublePrecision();
  _swig_go_result = result; 
  return _swig_go_result;
}


btInfMaskConverter *_wrap_new_btInfMaskConverter__SWIG_0_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  btInfMaskConverter *result = 0 ;
  btInfMaskConverter *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (btInfMaskConverter *)new btInfMaskConverter(arg1);
  *(btInfMaskConverter **)&_swig_go_result = (btInfMaskConverter *)result; 
  return _swig_go_result;
}


btInfMaskConverter *_wrap_new_btInfMaskConverter__SWIG_1_bt_e001408c92acdfd7() {
  btInfMaskConverter *result = 0 ;
  btInfMaskConverter *_swig_go_result;
  
  
  result = (btInfMaskConverter *)new btInfMaskConverter();
  *(btInfMaskConverter **)&_swig_go_result = (btInfMaskConverter *)result; 
  return _swig_go_result;
}


void _wrap_delete_btInfMaskConverter_bt_e001408c92acdfd7(btInfMaskConverter *_swig_go_0) {
  btInfMaskConverter *arg1 = (btInfMaskConverter *) 0 ;
  
  arg1 = *(btInfMaskConverter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btInfinityMask_set_bt_e001408c92acdfd7(btInfMaskConverter *_swig_go_0) {
  btInfMaskConverter *arg1 = (btInfMaskConverter *) 0 ;
  
  arg1 = *(btInfMaskConverter **)&_swig_go_0; 
  
  btInfinityMask = *arg1;
  
}


btInfMaskConverter *_wrap_btInfinityMask_get_bt_e001408c92acdfd7() {
  btInfMaskConverter *result = 0 ;
  btInfMaskConverter *_swig_go_result;
  
  
  result = (btInfMaskConverter *)&btInfinityMask;
  *(btInfMaskConverter **)&_swig_go_result = (btInfMaskConverter *)result; 
  return _swig_go_result;
}


intgo _wrap_btGetInfinityMask_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)btGetInfinityMask();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSqrt_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btSqrt(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btFabs_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btFabs(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCos_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btCos(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSin_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btSin(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btTan_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btTan(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAcos_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btAcos(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAsin_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btAsin(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAtan_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btAtan(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAtan2_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btScalar)btAtan2(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btExp_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btExp(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btLog_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btLog(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPow_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btScalar)btPow(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btFmod_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btScalar)btFmod(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAtan2Fast_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btScalar)btAtan2Fast(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btFuzzyZero_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (bool)btFuzzyZero(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btEqual_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (bool)btEqual(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGreaterEqual_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (bool)btGreaterEqual(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btIsNegative_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (int)btIsNegative(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRadians_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btRadians(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btDegrees_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btDegrees(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btFsel_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (btScalar)btFsel(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btMachineIsLittleEndian_bt_e001408c92acdfd7() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)btMachineIsLittleEndian();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSelect__SWIG_0_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (unsigned int)btSelect(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSelect__SWIG_1_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  unsigned int arg1 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)btSelect(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSelect__SWIG_2_bt_e001408c92acdfd7(intgo _swig_go_0, float _swig_go_1, float _swig_go_2) {
  unsigned int arg1 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)btSelect(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSwapEndian__SWIG_0_bt_e001408c92acdfd7(intgo _swig_go_0) {
  unsigned int arg1 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (unsigned int)btSwapEndian(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_btSwapEndian__SWIG_1_bt_e001408c92acdfd7(short _swig_go_0) {
  unsigned short arg1 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = (unsigned short)_swig_go_0; 
  
  result = (unsigned short)btSwapEndian(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSwapEndian__SWIG_2_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (unsigned int)btSwapEndian(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


short _wrap_btSwapEndian__SWIG_3_bt_e001408c92acdfd7(short _swig_go_0) {
  short arg1 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = (short)_swig_go_0; 
  
  result = (unsigned short)btSwapEndian(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSwapEndianFloat_bt_e001408c92acdfd7(float _swig_go_0) {
  float arg1 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  
  result = (unsigned int)btSwapEndianFloat(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btUnswapEndianFloat_bt_e001408c92acdfd7(intgo _swig_go_0) {
  unsigned int arg1 ;
  float result;
  float _swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (float)btUnswapEndianFloat(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSwapEndianDouble_bt_e001408c92acdfd7(double _swig_go_0, char *_swig_go_1) {
  double arg1 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  btSwapEndianDouble(arg1,arg2);
  
}


double _wrap_btUnswapEndianDouble_bt_e001408c92acdfd7(char *_swig_go_0) {
  unsigned char *arg1 = (unsigned char *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(unsigned char **)&_swig_go_0; 
  
  result = (double)btUnswapEndianDouble((unsigned char const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btLargeDot_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  btScalar *arg1 = (btScalar *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btScalar)btLargeDot((float const *)arg1,(float const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btNormalizeAngle_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btScalar)btNormalizeAngle(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


btTypedObject *_wrap_new_btTypedObject_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  btTypedObject *result = 0 ;
  btTypedObject *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (btTypedObject *)new btTypedObject(arg1);
  *(btTypedObject **)&_swig_go_result = (btTypedObject *)result; 
  return _swig_go_result;
}


void _wrap_btTypedObject_m_objectType_set_bt_e001408c92acdfd7(btTypedObject *_swig_go_0, intgo _swig_go_1) {
  btTypedObject *arg1 = (btTypedObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btTypedObject_m_objectType_get_bt_e001408c92acdfd7(btTypedObject *_swig_go_0) {
  btTypedObject *arg1 = (btTypedObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedObject **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedObject_getObjectType_bt_e001408c92acdfd7(btTypedObject *_swig_go_0) {
  btTypedObject *arg1 = (btTypedObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedObject **)&_swig_go_0; 
  
  result = (int)((btTypedObject const *)arg1)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTypedObject_bt_e001408c92acdfd7(btTypedObject *_swig_go_0) {
  btTypedObject *arg1 = (btTypedObject *) 0 ;
  
  arg1 = *(btTypedObject **)&_swig_go_0; 
  
  delete arg1;
  
}


void *_wrap_btAlignedAllocInternal_bt_e001408c92acdfd7(long long _swig_go_0, intgo _swig_go_1) {
  size_t arg1 ;
  int arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (void *)btAlignedAllocInternal(SWIG_STD_MOVE(arg1),arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btAlignedFreeInternal_bt_e001408c92acdfd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  btAlignedFreeInternal(arg1);
  
}


void _wrap_btAlignedAllocSetCustom_bt_e001408c92acdfd7(void* _swig_go_0, void* _swig_go_1) {
  btAllocFunc *arg1 = (btAllocFunc *) 0 ;
  btFreeFunc *arg2 = (btFreeFunc *) 0 ;
  
  arg1 = *(btAllocFunc **)&_swig_go_0; 
  arg2 = *(btFreeFunc **)&_swig_go_1; 
  
  btAlignedAllocSetCustom(arg1,arg2);
  
}


void _wrap_btAlignedAllocSetCustomAligned_bt_e001408c92acdfd7(void* _swig_go_0, void* _swig_go_1) {
  btAlignedAllocFunc *arg1 = (btAlignedAllocFunc *) 0 ;
  btAlignedFreeFunc *arg2 = (btAlignedFreeFunc *) 0 ;
  
  arg1 = *(btAlignedAllocFunc **)&_swig_go_0; 
  arg2 = *(btAlignedFreeFunc **)&_swig_go_1; 
  
  btAlignedAllocSetCustomAligned(arg1,arg2);
  
}


void *_wrap_btAllocDefault_bt_e001408c92acdfd7(long long _swig_go_0) {
  size_t arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (void *)btAllocDefault(SWIG_STD_MOVE(arg1));
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btFreeDefault_bt_e001408c92acdfd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  btFreeDefault(arg1);
  
}


void _wrap_sAllocFunc_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btAllocFunc *arg1 = (btAllocFunc *) 0 ;
  
  arg1 = *(btAllocFunc **)&_swig_go_0; 
  
  sAllocFunc = arg1;
  
}


void* _wrap_sAllocFunc_get_bt_e001408c92acdfd7() {
  btAllocFunc *result = 0 ;
  void* _swig_go_result;
  
  
  result = (btAllocFunc *)sAllocFunc;
  *(btAllocFunc **)&_swig_go_result = (btAllocFunc *)result; 
  return _swig_go_result;
}


void _wrap_sFreeFunc_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btFreeFunc *arg1 = (btFreeFunc *) 0 ;
  
  arg1 = *(btFreeFunc **)&_swig_go_0; 
  
  sFreeFunc = arg1;
  
}


void* _wrap_sFreeFunc_get_bt_e001408c92acdfd7() {
  btFreeFunc *result = 0 ;
  void* _swig_go_result;
  
  
  result = (btFreeFunc *)sFreeFunc;
  *(btFreeFunc **)&_swig_go_result = (btFreeFunc *)result; 
  return _swig_go_result;
}


void *_wrap_btAlignedAllocDefault_bt_e001408c92acdfd7(long long _swig_go_0, intgo _swig_go_1) {
  size_t arg1 ;
  int arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (void *)btAlignedAllocDefault(SWIG_STD_MOVE(arg1),arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btAlignedFreeDefault_bt_e001408c92acdfd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  btAlignedFreeDefault(arg1);
  
}


void _wrap_sAlignedAllocFunc_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btAlignedAllocFunc *arg1 = (btAlignedAllocFunc *) 0 ;
  
  arg1 = *(btAlignedAllocFunc **)&_swig_go_0; 
  
  sAlignedAllocFunc = arg1;
  
}


void* _wrap_sAlignedAllocFunc_get_bt_e001408c92acdfd7() {
  btAlignedAllocFunc *result = 0 ;
  void* _swig_go_result;
  
  
  result = (btAlignedAllocFunc *)sAlignedAllocFunc;
  *(btAlignedAllocFunc **)&_swig_go_result = (btAlignedAllocFunc *)result; 
  return _swig_go_result;
}


void _wrap_sAlignedFreeFunc_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btAlignedFreeFunc *arg1 = (btAlignedFreeFunc *) 0 ;
  
  arg1 = *(btAlignedFreeFunc **)&_swig_go_0; 
  
  sAlignedFreeFunc = arg1;
  
}


void* _wrap_sAlignedFreeFunc_get_bt_e001408c92acdfd7() {
  btAlignedFreeFunc *result = 0 ;
  void* _swig_go_result;
  
  
  result = (btAlignedFreeFunc *)sAlignedFreeFunc;
  *(btAlignedFreeFunc **)&_swig_go_result = (btAlignedFreeFunc *)result; 
  return _swig_go_result;
}


void _wrap_btVector3_m_floats_set_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  {
    size_t ii;
    btScalar *b = (btScalar *) arg1->m_floats;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btScalar *) arg2 + ii);
  }
  
}


float *_wrap_btVector3_m_floats_get_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *)(btScalar *) ((arg1)->m_floats);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_new_btVector3__SWIG_0_bt_e001408c92acdfd7() {
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  
  result = (btVector3 *)new btVector3();
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_new_btVector3__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = (btVector3 *)new btVector3((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


float _wrap_btVector3_dot_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btVector3 const *)arg1)->dot((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_length2_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar)((btVector3 const *)arg1)->length2();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_length_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar)((btVector3 const *)arg1)->length();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_norm_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar)((btVector3 const *)arg1)->norm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_safeNorm_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar)((btVector3 const *)arg1)->safeNorm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_distance2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btVector3 const *)arg1)->distance2((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector3_distance_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btVector3 const *)arg1)->distance((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_safeNormalize_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->safeNormalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_normalize_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->normalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_normalized_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = ((btVector3 const *)arg1)->normalized();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_rotate_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = ((btVector3 const *)arg1)->rotate((btVector3 const &)*arg2,arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector3_angle_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btVector3 const *)arg1)->angle((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_absolute_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = ((btVector3 const *)arg1)->absolute();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_cross_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btVector3 const *)arg1)->cross((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector3_triple_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (btScalar)((btVector3 const *)arg1)->triple((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector3_minAxis_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (int)((btVector3 const *)arg1)->minAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector3_maxAxis_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (int)((btVector3 const *)arg1)->maxAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector3_furthestAxis_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (int)((btVector3 const *)arg1)->furthestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector3_closestAxis_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (int)((btVector3 const *)arg1)->closestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVector3_setInterpolate3_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setInterpolate3((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_btVector3_lerp_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = ((btVector3 const *)arg1)->lerp((btVector3 const &)*arg2,(btScalar const &)*arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector3_getX_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->getX();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector3_getY_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->getY();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector3_getZ_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->getZ();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btVector3_setX_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setX(arg2);
  
}


void _wrap_btVector3_setY_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setY(arg2);
  
}


void _wrap_btVector3_setZ_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setZ(arg2);
  
}


void _wrap_btVector3_setW_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setW(arg2);
  
}


float _wrap_btVector3_x_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->x();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector3_y_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->y();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector3_z_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->z();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector3_w_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btScalar *) &((btVector3 const *)arg1)->w();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btVector3_setMax_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setMax((btVector3 const &)*arg2);
  
}


void _wrap_btVector3_setMin_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setMin((btVector3 const &)*arg2);
  
}


void _wrap_btVector3_setValue_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  (arg1)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btVector3_getSkewSymmetricMatrix_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  btVector3 *arg4 = (btVector3 *) 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btVector3 const *)arg1)->getSkewSymmetricMatrix(arg2,arg3,arg4);
  
}


void _wrap_btVector3_setZero_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  (arg1)->setZero();
  
}


bool _wrap_btVector3_isZero_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (bool)((btVector3 const *)arg1)->isZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVector3_fuzzyZero_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (bool)((btVector3 const *)arg1)->fuzzyZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVector3_serialize_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  ((btVector3 const *)arg1)->serialize(*arg2);
  
}


void _wrap_btVector3_deSerialize__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btVector3DoubleData const &)*arg2);
  
}


void _wrap_btVector3_deSerialize__SWIG_1_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btVector3FloatData const &)*arg2);
  
}


void _wrap_btVector3_serializeFloat_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  ((btVector3 const *)arg1)->serializeFloat(*arg2);
  
}


void _wrap_btVector3_deSerializeFloat_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat((btVector3FloatData const &)*arg2);
  
}


void _wrap_btVector3_serializeDouble_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  ((btVector3 const *)arg1)->serializeDouble(*arg2);
  
}


void _wrap_btVector3_deSerializeDouble_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  (arg1)->deSerializeDouble((btVector3DoubleData const &)*arg2);
  
}


long long _wrap_btVector3_maxDot_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  result = (long)((btVector3 const *)arg1)->maxDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_btVector3_minDot_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  result = (long)((btVector3 const *)arg1)->minDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector3_dot3_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = ((btVector3 const *)arg1)->dot3((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_delete_btVector3_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_btDot_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)btDot((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btDistance2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)btDistance2((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btDistance_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)btDistance((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngle__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)btAngle((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCross_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = btCross((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btTriple_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (btScalar)btTriple((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_lerp_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = lerp((btVector3 const &)*arg1,(btVector3 const &)*arg2,(float const &)*arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector4 *_wrap_new_btVector4__SWIG_0_bt_e001408c92acdfd7() {
  btVector4 *result = 0 ;
  btVector4 *_swig_go_result;
  
  
  result = (btVector4 *)new btVector4();
  *(btVector4 **)&_swig_go_result = (btVector4 *)result; 
  return _swig_go_result;
}


btVector4 *_wrap_new_btVector4__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btVector4 *result = 0 ;
  btVector4 *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  result = (btVector4 *)new btVector4((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  *(btVector4 **)&_swig_go_result = (btVector4 *)result; 
  return _swig_go_result;
}


btVector4 *_wrap_btVector4_absolute4_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector4 result;
  btVector4 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  result = ((btVector4 const *)arg1)->absolute4();
  *(btVector4 **)&_swig_go_result = new btVector4(result); 
  return _swig_go_result;
}


float _wrap_btVector4_getW_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  result = (btScalar)((btVector4 const *)arg1)->getW();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_maxAxis4_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  result = (int)((btVector4 const *)arg1)->maxAxis4();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_minAxis4_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  result = (int)((btVector4 const *)arg1)->minAxis4();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_closestAxis4_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  result = (int)((btVector4 const *)arg1)->closestAxis4();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVector4_setValue_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  arg5 = (btScalar *)&_swig_go_4; 
  
  (arg1)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4,(btScalar const &)*arg5);
  
}


void _wrap_delete_btVector4_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtVector4_M_floats_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ;
  
}


float *_wrap_GetbtVector4_M_floats_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *)(btScalar *) ((swig_b0)->m_floats);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_dot_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->dot((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_length2_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->length2();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_length_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->length();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_norm_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->norm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_safeNorm_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->safeNorm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_distance2_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->distance2((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVector4_distance_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->distance((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_safeNormalize_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btVector3 *) &(swig_b0)->safeNormalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_normalize_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btVector3 *) &(swig_b0)->normalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_normalized_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->normalized();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_rotate_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->rotate((btVector3 const &)*arg2,arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector4_angle_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->angle((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_absolute_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->absolute();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_cross_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->cross((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector4_triple_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->triple((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_minAxis_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->minAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_maxAxis_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->maxAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_furthestAxis_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->furthestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVector4_closestAxis_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->closestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVector4_setInterpolate3_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setInterpolate3((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_btVector4_lerp_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->lerp((btVector3 const &)*arg2,(btScalar const &)*arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btVector4_getX_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getX();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector4_getY_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getY();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector4_getZ_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getZ();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btVector4_setX_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float _swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setX(arg2);
  
}


void _wrap_btVector4_setY_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float _swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setY(arg2);
  
}


void _wrap_btVector4_setZ_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float _swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setZ(arg2);
  
}


void _wrap_btVector4_setW_bt_e001408c92acdfd7(btVector4 *_swig_go_0, float _swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setW(arg2);
  
}


float _wrap_btVector4_x_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->x();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector4_y_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->y();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector4_z_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->z();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btVector4_w_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->w();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btVector4_setMax_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setMax((btVector3 const &)*arg2);
  
}


void _wrap_btVector4_setMin_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setMin((btVector3 const &)*arg2);
  
}


void _wrap_btVector4_getSkewSymmetricMatrix_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  btVector3 *arg4 = (btVector3 *) 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->getSkewSymmetricMatrix(arg2,arg3,arg4);
  
}


void _wrap_btVector4_setZero_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setZero();
  
}


bool _wrap_btVector4_isZero_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (bool)((btVector3 const *)swig_b0)->isZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVector4_fuzzyZero_bt_e001408c92acdfd7(btVector4 *_swig_go_0) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (bool)((btVector3 const *)swig_b0)->fuzzyZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVector4_serialize_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serialize(*arg2);
  
}


void _wrap_btVector4_deSerialize__SWIG_0_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerialize((btVector3DoubleData const &)*arg2);
  
}


void _wrap_btVector4_deSerialize__SWIG_1_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerialize((btVector3FloatData const &)*arg2);
  
}


void _wrap_btVector4_serializeFloat_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serializeFloat(*arg2);
  
}


void _wrap_btVector4_deSerializeFloat_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerializeFloat((btVector3FloatData const &)*arg2);
  
}


void _wrap_btVector4_serializeDouble_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serializeDouble(*arg2);
  
}


void _wrap_btVector4_deSerializeDouble_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerializeDouble((btVector3DoubleData const &)*arg2);
  
}


long long _wrap_btVector4_maxDot_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (long)((btVector3 const *)swig_b0)->maxDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_btVector4_minDot_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (long)((btVector3 const *)swig_b0)->minDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btVector4_dot3_bt_e001408c92acdfd7(btVector4 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector4 *arg1 = (btVector4 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector4 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->dot3((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btSwapScalarEndian_bt_e001408c92acdfd7(float _swig_go_0, float *_swig_go_1) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  btSwapScalarEndian((float const &)*arg1,*arg2);
  
}


void _wrap_btSwapVector3Endian_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btSwapVector3Endian((btVector3 const &)*arg1,*arg2);
  
}


void _wrap_btUnSwapVector3Endian_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  btUnSwapVector3Endian(*arg1);
  
}


void _wrap_btVector3FloatData_m_floats_set_bt_e001408c92acdfd7(btVector3FloatData *_swig_go_0, float *_swig_go_1) {
  btVector3FloatData *arg1 = (btVector3FloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btVector3FloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_floats;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btVector3FloatData_m_floats_get_bt_e001408c92acdfd7(btVector3FloatData *_swig_go_0) {
  btVector3FloatData *arg1 = (btVector3FloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btVector3FloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_floats);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3FloatData *_wrap_new_btVector3FloatData_bt_e001408c92acdfd7() {
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  
  result = (btVector3FloatData *)new btVector3FloatData();
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btVector3FloatData_bt_e001408c92acdfd7(btVector3FloatData *_swig_go_0) {
  btVector3FloatData *arg1 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btVector3FloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btVector3DoubleData_m_floats_set_bt_e001408c92acdfd7(btVector3DoubleData *_swig_go_0, double *_swig_go_1) {
  btVector3DoubleData *arg1 = (btVector3DoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btVector3DoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_floats;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btVector3DoubleData_m_floats_get_bt_e001408c92acdfd7(btVector3DoubleData *_swig_go_0) {
  btVector3DoubleData *arg1 = (btVector3DoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btVector3DoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_floats);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3DoubleData *_wrap_new_btVector3DoubleData_bt_e001408c92acdfd7() {
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  
  result = (btVector3DoubleData *)new btVector3DoubleData();
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btVector3DoubleData_bt_e001408c92acdfd7(btVector3DoubleData *_swig_go_0) {
  btVector3DoubleData *arg1 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btVector3DoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_btQuadWord_getX_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->getX();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuadWord_getY_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->getY();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuadWord_getZ_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->getZ();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btQuadWord_setX_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setX(arg2);
  
}


void _wrap_btQuadWord_setY_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setY(arg2);
  
}


void _wrap_btQuadWord_setZ_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setZ(arg2);
  
}


void _wrap_btQuadWord_setW_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setW(arg2);
  
}


float _wrap_btQuadWord_x_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->x();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuadWord_y_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->y();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuadWord_z_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->z();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuadWord_w_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuadWord const *)arg1)->w();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btQuadWord_setValue__SWIG_0_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  (arg1)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btQuadWord_setValue__SWIG_1_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  arg5 = (btScalar *)&_swig_go_4; 
  
  (arg1)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4,(btScalar const &)*arg5);
  
}


btQuadWord *_wrap_new_btQuadWord__SWIG_0_bt_e001408c92acdfd7() {
  btQuadWord *result = 0 ;
  btQuadWord *_swig_go_result;
  
  
  result = (btQuadWord *)new btQuadWord();
  *(btQuadWord **)&_swig_go_result = (btQuadWord *)result; 
  return _swig_go_result;
}


btQuadWord *_wrap_new_btQuadWord__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btQuadWord *result = 0 ;
  btQuadWord *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = (btQuadWord *)new btQuadWord((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3);
  *(btQuadWord **)&_swig_go_result = (btQuadWord *)result; 
  return _swig_go_result;
}


btQuadWord *_wrap_new_btQuadWord__SWIG_2_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btQuadWord *result = 0 ;
  btQuadWord *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  result = (btQuadWord *)new btQuadWord((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  *(btQuadWord **)&_swig_go_result = (btQuadWord *)result; 
  return _swig_go_result;
}


void _wrap_btQuadWord_setMax_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, btQuadWord *_swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btQuadWord *arg2 = 0 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = *(btQuadWord **)&_swig_go_1; 
  
  (arg1)->setMax((btQuadWord const &)*arg2);
  
}


void _wrap_btQuadWord_setMin_bt_e001408c92acdfd7(btQuadWord *_swig_go_0, btQuadWord *_swig_go_1) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  btQuadWord *arg2 = 0 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  arg2 = *(btQuadWord **)&_swig_go_1; 
  
  (arg1)->setMin((btQuadWord const &)*arg2);
  
}


void _wrap_delete_btQuadWord_bt_e001408c92acdfd7(btQuadWord *_swig_go_0) {
  btQuadWord *arg1 = (btQuadWord *) 0 ;
  
  arg1 = *(btQuadWord **)&_swig_go_0; 
  
  delete arg1;
  
}


btQuaternion *_wrap_new_btQuaternion__SWIG_0_bt_e001408c92acdfd7() {
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  
  result = (btQuaternion *)new btQuaternion();
  *(btQuaternion **)&_swig_go_result = (btQuaternion *)result; 
  return _swig_go_result;
}


btQuaternion *_wrap_new_btQuaternion__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  result = (btQuaternion *)new btQuaternion((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  *(btQuaternion **)&_swig_go_result = (btQuaternion *)result; 
  return _swig_go_result;
}


btQuaternion *_wrap_new_btQuaternion__SWIG_2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  
  result = (btQuaternion *)new btQuaternion((btVector3 const &)*arg1,(btScalar const &)*arg2);
  *(btQuaternion **)&_swig_go_result = (btQuaternion *)result; 
  return _swig_go_result;
}


btQuaternion *_wrap_new_btQuaternion__SWIG_3_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = (btQuaternion *)new btQuaternion((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3);
  *(btQuaternion **)&_swig_go_result = (btQuaternion *)result; 
  return _swig_go_result;
}


void _wrap_btQuaternion_setRotation_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  (arg1)->setRotation((btVector3 const &)*arg2,(btScalar const &)*arg3);
  
}


void _wrap_btQuaternion_setEuler_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  (arg1)->setEuler((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btQuaternion_setEulerZYX_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  (arg1)->setEulerZYX((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btQuaternion_getEulerZYX_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float *_swig_go_1, float *_swig_go_2, float *_swig_go_3) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  ((btQuaternion const *)arg1)->getEulerZYX(*arg2,*arg3,*arg4);
  
}


float _wrap_btQuaternion_dot_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = (btScalar)((btQuaternion const *)arg1)->dot((btQuaternion const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_length2_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar)((btQuaternion const *)arg1)->length2();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_length_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar)((btQuaternion const *)arg1)->length();
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_safeNormalize_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btQuaternion *) &(arg1)->safeNormalize();
  *(btQuaternion **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_normalize_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btQuaternion *) &(arg1)->normalize();
  *(btQuaternion **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_normalized_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = ((btQuaternion const *)arg1)->normalized();
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


float _wrap_btQuaternion_angle_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = (btScalar)((btQuaternion const *)arg1)->angle((btQuaternion const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_angleShortestPath_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = (btScalar)((btQuaternion const *)arg1)->angleShortestPath((btQuaternion const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_getAngle_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar)((btQuaternion const *)arg1)->getAngle();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_getAngleShortestPath_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar)((btQuaternion const *)arg1)->getAngleShortestPath();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btQuaternion_getAxis_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = ((btQuaternion const *)arg1)->getAxis();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_inverse_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = ((btQuaternion const *)arg1)->inverse();
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_farthest_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = ((btQuaternion const *)arg1)->farthest((btQuaternion const &)*arg2);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_nearest_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = ((btQuaternion const *)arg1)->nearest((btQuaternion const &)*arg2);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_slerp_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1, float _swig_go_2) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = ((btQuaternion const *)arg1)->slerp((btQuaternion const &)*arg2,(btScalar const &)*arg3);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_btQuaternion_getIdentity_bt_e001408c92acdfd7() {
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  
  result = (btQuaternion *) &btQuaternion::getIdentity();
  *(btQuaternion **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_getW_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar *) &((btQuaternion const *)arg1)->getW();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btQuaternion_serialize_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionFloatData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionFloatData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionFloatData **)&_swig_go_1; 
  
  ((btQuaternion const *)arg1)->serialize(*arg2);
  
}


void _wrap_btQuaternion_deSerialize__SWIG_0_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionFloatData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionFloatData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionFloatData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btQuaternionFloatData const &)*arg2);
  
}


void _wrap_btQuaternion_deSerialize__SWIG_1_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionDoubleData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionDoubleData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionDoubleData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btQuaternionDoubleData const &)*arg2);
  
}


void _wrap_btQuaternion_serializeFloat_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionFloatData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionFloatData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionFloatData **)&_swig_go_1; 
  
  ((btQuaternion const *)arg1)->serializeFloat(*arg2);
  
}


void _wrap_btQuaternion_deSerializeFloat_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionFloatData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionFloatData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionFloatData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat((btQuaternionFloatData const &)*arg2);
  
}


void _wrap_btQuaternion_serializeDouble_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionDoubleData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionDoubleData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionDoubleData **)&_swig_go_1; 
  
  ((btQuaternion const *)arg1)->serializeDouble(*arg2);
  
}


void _wrap_btQuaternion_deSerializeDouble_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternionDoubleData *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuaternionDoubleData *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternionDoubleData **)&_swig_go_1; 
  
  (arg1)->deSerializeDouble((btQuaternionDoubleData const &)*arg2);
  
}


void _wrap_delete_btQuaternion_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_btQuaternion_getX_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->getX();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_getY_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->getY();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_getZ_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->getZ();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btQuaternion_setX_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setX(arg2);
  
}


void _wrap_btQuaternion_setY_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setY(arg2);
  
}


void _wrap_btQuaternion_setZ_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setZ(arg2);
  
}


void _wrap_btQuaternion_setW_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setW(arg2);
  
}


float _wrap_btQuaternion_x_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->x();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_y_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->y();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_z_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->z();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_btQuaternion_w_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  result = (btScalar *) &((btQuadWord const *)swig_b0)->w();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_btQuaternion_setValue__SWIG_0_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btQuaternion_setValue__SWIG_1_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  arg5 = (btScalar *)&_swig_go_4; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4,(btScalar const &)*arg5);
  
}


void _wrap_btQuaternion_setMax_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuadWord *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuadWord *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuadWord **)&_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setMax((btQuadWord const &)*arg2);
  
}


void _wrap_btQuaternion_setMin_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuadWord *_swig_go_1) {
  btQuaternion *arg1 = (btQuaternion *) 0 ;
  btQuadWord *arg2 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuadWord **)&_swig_go_1; 
  
  btQuadWord *swig_b0 = (btQuadWord *)arg1;
  (swig_b0)->setMin((btQuadWord const &)*arg2);
  
}


float _wrap_dot_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = (btScalar)dot((btQuaternion const &)*arg1,(btQuaternion const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_length_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btScalar)length((btQuaternion const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngle__SWIG_1_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1) {
  btQuaternion *arg1 = 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  result = (btScalar)btAngle((btQuaternion const &)*arg1,(btQuaternion const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_inverse_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = inverse((btQuaternion const &)*arg1);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_slerp_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1, float _swig_go_2) {
  btQuaternion *arg1 = 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  result = slerp((btQuaternion const &)*arg1,(btQuaternion const &)*arg2,(float const &)*arg3);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btVector3 *_wrap_quatRotate_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btVector3 *_swig_go_1) {
  btQuaternion *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = quatRotate((btQuaternion const &)*arg1,(btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_shortestArcQuat_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = shortestArcQuat((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btQuaternion *_wrap_shortestArcQuatNormalize2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = shortestArcQuatNormalize2(*arg1,*arg2);
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


void _wrap_btQuaternionFloatData_m_floats_set_bt_e001408c92acdfd7(btQuaternionFloatData *_swig_go_0, float *_swig_go_1) {
  btQuaternionFloatData *arg1 = (btQuaternionFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btQuaternionFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_floats;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btQuaternionFloatData_m_floats_get_bt_e001408c92acdfd7(btQuaternionFloatData *_swig_go_0) {
  btQuaternionFloatData *arg1 = (btQuaternionFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btQuaternionFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_floats);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternionFloatData *_wrap_new_btQuaternionFloatData_bt_e001408c92acdfd7() {
  btQuaternionFloatData *result = 0 ;
  btQuaternionFloatData *_swig_go_result;
  
  
  result = (btQuaternionFloatData *)new btQuaternionFloatData();
  *(btQuaternionFloatData **)&_swig_go_result = (btQuaternionFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuaternionFloatData_bt_e001408c92acdfd7(btQuaternionFloatData *_swig_go_0) {
  btQuaternionFloatData *arg1 = (btQuaternionFloatData *) 0 ;
  
  arg1 = *(btQuaternionFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btQuaternionDoubleData_m_floats_set_bt_e001408c92acdfd7(btQuaternionDoubleData *_swig_go_0, double *_swig_go_1) {
  btQuaternionDoubleData *arg1 = (btQuaternionDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btQuaternionDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_floats;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btQuaternionDoubleData_m_floats_get_bt_e001408c92acdfd7(btQuaternionDoubleData *_swig_go_0) {
  btQuaternionDoubleData *arg1 = (btQuaternionDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btQuaternionDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_floats);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternionDoubleData *_wrap_new_btQuaternionDoubleData_bt_e001408c92acdfd7() {
  btQuaternionDoubleData *result = 0 ;
  btQuaternionDoubleData *_swig_go_result;
  
  
  result = (btQuaternionDoubleData *)new btQuaternionDoubleData();
  *(btQuaternionDoubleData **)&_swig_go_result = (btQuaternionDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuaternionDoubleData_bt_e001408c92acdfd7(btQuaternionDoubleData *_swig_go_0) {
  btQuaternionDoubleData *arg1 = (btQuaternionDoubleData *) 0 ;
  
  arg1 = *(btQuaternionDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


btMatrix3x3 *_wrap_new_btMatrix3x3__SWIG_0_bt_e001408c92acdfd7() {
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  
  result = (btMatrix3x3 *)new btMatrix3x3();
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_new_btMatrix3x3__SWIG_1_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btMatrix3x3 *)new btMatrix3x3((btQuaternion const &)*arg1);
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_new_btMatrix3x3__SWIG_2_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8) {
  btScalar *arg1 = 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btScalar *arg6 = 0 ;
  btScalar *arg7 = 0 ;
  btScalar *arg8 = 0 ;
  btScalar *arg9 = 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = (btScalar *)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  arg5 = (btScalar *)&_swig_go_4; 
  arg6 = (btScalar *)&_swig_go_5; 
  arg7 = (btScalar *)&_swig_go_6; 
  arg8 = (btScalar *)&_swig_go_7; 
  arg9 = (btScalar *)&_swig_go_8; 
  
  result = (btMatrix3x3 *)new btMatrix3x3((btScalar const &)*arg1,(btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4,(btScalar const &)*arg5,(btScalar const &)*arg6,(btScalar const &)*arg7,(btScalar const &)*arg8,(btScalar const &)*arg9);
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_new_btMatrix3x3__SWIG_3_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = (btMatrix3x3 *)new btMatrix3x3((btMatrix3x3 const &)*arg1);
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_new_btMatrix3x3__SWIG_4_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (btMatrix3x3 *)new btMatrix3x3((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btMatrix3x3_getColumn_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, intgo _swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  int arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((btMatrix3x3 const *)arg1)->getColumn(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btMatrix3x3_getRow_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, intgo _swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  int arg2 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btVector3 *) &((btMatrix3x3 const *)arg1)->getRow(arg2);
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMatrix3x3_setFromOpenGLSubMatrix_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  (arg1)->setFromOpenGLSubMatrix((btScalar const *)arg2);
  
}


void _wrap_btMatrix3x3_setValue_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, float _swig_go_9) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btScalar *arg6 = 0 ;
  btScalar *arg7 = 0 ;
  btScalar *arg8 = 0 ;
  btScalar *arg9 = 0 ;
  btScalar *arg10 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  arg5 = (btScalar *)&_swig_go_4; 
  arg6 = (btScalar *)&_swig_go_5; 
  arg7 = (btScalar *)&_swig_go_6; 
  arg8 = (btScalar *)&_swig_go_7; 
  arg9 = (btScalar *)&_swig_go_8; 
  arg10 = (btScalar *)&_swig_go_9; 
  
  (arg1)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4,(btScalar const &)*arg5,(btScalar const &)*arg6,(btScalar const &)*arg7,(btScalar const &)*arg8,(btScalar const &)*arg9,(btScalar const &)*arg10);
  
}


void _wrap_btMatrix3x3_setRotation_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btQuaternion *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  (arg1)->setRotation((btQuaternion const &)*arg2);
  
}


void _wrap_btMatrix3x3_setEulerYPR_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  (arg1)->setEulerYPR((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_btMatrix3x3_setEulerZYX_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setEulerZYX(arg2,arg3,arg4);
  
}


void _wrap_btMatrix3x3_setIdentity_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  (arg1)->setIdentity();
  
}


void _wrap_btMatrix3x3_setZero_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  (arg1)->setZero();
  
}


btMatrix3x3 *_wrap_btMatrix3x3_getIdentity_bt_e001408c92acdfd7() {
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  
  result = (btMatrix3x3 *) &btMatrix3x3::getIdentity();
  *(btMatrix3x3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMatrix3x3_getOpenGLSubMatrix_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  ((btMatrix3x3 const *)arg1)->getOpenGLSubMatrix(arg2);
  
}


void _wrap_btMatrix3x3_getRotation_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btQuaternion *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  ((btMatrix3x3 const *)arg1)->getRotation(*arg2);
  
}


void _wrap_btMatrix3x3_getEulerYPR_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float *_swig_go_1, float *_swig_go_2, float *_swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  ((btMatrix3x3 const *)arg1)->getEulerYPR(*arg2,*arg3,*arg4);
  
}


void _wrap_btMatrix3x3_getEulerZYX__SWIG_0_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float *_swig_go_1, float *_swig_go_2, float *_swig_go_3, intgo _swig_go_4) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  unsigned int arg5 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = (unsigned int)_swig_go_4; 
  
  ((btMatrix3x3 const *)arg1)->getEulerZYX(*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_btMatrix3x3_getEulerZYX__SWIG_1_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, float *_swig_go_1, float *_swig_go_2, float *_swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  ((btMatrix3x3 const *)arg1)->getEulerZYX(*arg2,*arg3,*arg4);
  
}


btMatrix3x3 *_wrap_btMatrix3x3_scaled_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btMatrix3x3 const *)arg1)->scaled((btVector3 const &)*arg2);
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


float _wrap_btMatrix3x3_determinant_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = (btScalar)((btMatrix3x3 const *)arg1)->determinant();
  _swig_go_result = result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_adjoint_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = ((btMatrix3x3 const *)arg1)->adjoint();
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_absolute_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = ((btMatrix3x3 const *)arg1)->absolute();
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_transpose_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = ((btMatrix3x3 const *)arg1)->transpose();
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_inverse_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = ((btMatrix3x3 const *)arg1)->inverse();
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btMatrix3x3_solve33_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btMatrix3x3 const *)arg1)->solve33((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_transposeTimes_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 *arg2 = 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  
  result = ((btMatrix3x3 const *)arg1)->transposeTimes((btMatrix3x3 const &)*arg2);
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btMatrix3x3_timesTranspose_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 *arg2 = 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  
  result = ((btMatrix3x3 const *)arg1)->timesTranspose((btMatrix3x3 const &)*arg2);
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


float _wrap_btMatrix3x3_tdotx_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btMatrix3x3 const *)arg1)->tdotx((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btMatrix3x3_tdoty_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btMatrix3x3 const *)arg1)->tdoty((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btMatrix3x3_tdotz_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btMatrix3x3 const *)arg1)->tdotz((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMatrix3x3_extractRotation__SWIG_0_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btQuaternion *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->extractRotation(*arg2,arg3,arg4);
  
}


void _wrap_btMatrix3x3_extractRotation__SWIG_1_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btQuaternion *_swig_go_1, float _swig_go_2) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btQuaternion *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->extractRotation(*arg2,arg3);
  
}


void _wrap_btMatrix3x3_extractRotation__SWIG_2_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btQuaternion *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  (arg1)->extractRotation(*arg2);
  
}


void _wrap_btMatrix3x3_diagonalize_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3 *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3 *arg2 = 0 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->diagonalize(*arg2,arg3,arg4);
  
}


float _wrap_btMatrix3x3_cofac_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (btScalar)((btMatrix3x3 const *)arg1)->cofac(arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMatrix3x3_serialize_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3FloatData *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  ((btMatrix3x3 const *)arg1)->serialize(*arg2);
  
}


void _wrap_btMatrix3x3_serializeFloat_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3FloatData *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  ((btMatrix3x3 const *)arg1)->serializeFloat(*arg2);
  
}


void _wrap_btMatrix3x3_deSerialize_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3FloatData *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btMatrix3x3FloatData const &)*arg2);
  
}


void _wrap_btMatrix3x3_deSerializeFloat_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3FloatData *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat((btMatrix3x3FloatData const &)*arg2);
  
}


void _wrap_btMatrix3x3_deSerializeDouble_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3DoubleData *_swig_go_1) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  btMatrix3x3DoubleData *arg2 = 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3DoubleData **)&_swig_go_1; 
  
  (arg1)->deSerializeDouble((btMatrix3x3DoubleData const &)*arg2);
  
}


void _wrap_delete_btMatrix3x3_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = (btMatrix3x3 *) 0 ;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMatrix3x3FloatData_m_el_set_bt_e001408c92acdfd7(btMatrix3x3FloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[3]) {
  btMatrix3x3FloatData *arg1 = (btMatrix3x3FloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btMatrix3x3FloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_el;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btMatrix3x3FloatData_m_el_get_bt_e001408c92acdfd7(btMatrix3x3FloatData *_swig_go_0))[3] {
  btMatrix3x3FloatData *arg1 = (btMatrix3x3FloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[3];
  
  arg1 = *(btMatrix3x3FloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_el);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


btMatrix3x3FloatData *_wrap_new_btMatrix3x3FloatData_bt_e001408c92acdfd7() {
  btMatrix3x3FloatData *result = 0 ;
  btMatrix3x3FloatData *_swig_go_result;
  
  
  result = (btMatrix3x3FloatData *)new btMatrix3x3FloatData();
  *(btMatrix3x3FloatData **)&_swig_go_result = (btMatrix3x3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMatrix3x3FloatData_bt_e001408c92acdfd7(btMatrix3x3FloatData *_swig_go_0) {
  btMatrix3x3FloatData *arg1 = (btMatrix3x3FloatData *) 0 ;
  
  arg1 = *(btMatrix3x3FloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMatrix3x3DoubleData_m_el_set_bt_e001408c92acdfd7(btMatrix3x3DoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[3]) {
  btMatrix3x3DoubleData *arg1 = (btMatrix3x3DoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btMatrix3x3DoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_el;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btMatrix3x3DoubleData_m_el_get_bt_e001408c92acdfd7(btMatrix3x3DoubleData *_swig_go_0))[3] {
  btMatrix3x3DoubleData *arg1 = (btMatrix3x3DoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[3];
  
  arg1 = *(btMatrix3x3DoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_el);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


btMatrix3x3DoubleData *_wrap_new_btMatrix3x3DoubleData_bt_e001408c92acdfd7() {
  btMatrix3x3DoubleData *result = 0 ;
  btMatrix3x3DoubleData *_swig_go_result;
  
  
  result = (btMatrix3x3DoubleData *)new btMatrix3x3DoubleData();
  *(btMatrix3x3DoubleData **)&_swig_go_result = (btMatrix3x3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMatrix3x3DoubleData_bt_e001408c92acdfd7(btMatrix3x3DoubleData *_swig_go_0) {
  btMatrix3x3DoubleData *arg1 = (btMatrix3x3DoubleData *) 0 ;
  
  arg1 = *(btMatrix3x3DoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


btTransform *_wrap_new_btTransform__SWIG_0_bt_e001408c92acdfd7() {
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  
  result = (btTransform *)new btTransform();
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


btTransform *_wrap_new_btTransform__SWIG_1_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btVector3 *_swig_go_1) {
  btQuaternion *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btTransform *)new btTransform((btQuaternion const &)*arg1,(btVector3 const &)*arg2);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


btTransform *_wrap_new_btTransform__SWIG_2_bt_e001408c92acdfd7(btQuaternion *_swig_go_0) {
  btQuaternion *arg1 = 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  
  result = (btTransform *)new btTransform((btQuaternion const &)*arg1);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


btTransform *_wrap_new_btTransform__SWIG_3_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1) {
  btMatrix3x3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btTransform *)new btTransform((btMatrix3x3 const &)*arg1,(btVector3 const &)*arg2);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


btTransform *_wrap_new_btTransform__SWIG_4_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0) {
  btMatrix3x3 *arg1 = 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  
  result = (btTransform *)new btTransform((btMatrix3x3 const &)*arg1);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


btTransform *_wrap_new_btTransform__SWIG_5_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btTransform *)new btTransform((btTransform const &)*arg1);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btTransform_mult_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->mult((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


btMatrix3x3 *_wrap_btTransform_getBasis__SWIG_0_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btMatrix3x3 *) &(arg1)->getBasis();
  *(btMatrix3x3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btTransform_getBasis__SWIG_1_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btMatrix3x3 *) &((btTransform const *)arg1)->getBasis();
  *(btMatrix3x3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btTransform_getOrigin__SWIG_0_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->getOrigin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btTransform_getOrigin__SWIG_1_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btVector3 *) &((btTransform const *)arg1)->getOrigin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_btTransform_getRotation_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = ((btTransform const *)arg1)->getRotation();
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


void _wrap_btTransform_setFromOpenGLMatrix_bt_e001408c92acdfd7(btTransform *_swig_go_0, float *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  (arg1)->setFromOpenGLMatrix((btScalar const *)arg2);
  
}


void _wrap_btTransform_getOpenGLMatrix_bt_e001408c92acdfd7(btTransform *_swig_go_0, float *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  ((btTransform const *)arg1)->getOpenGLMatrix(arg2);
  
}


void _wrap_btTransform_setOrigin_bt_e001408c92acdfd7(btTransform *_swig_go_0, btVector3 *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setOrigin((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btTransform_invXform_bt_e001408c92acdfd7(btTransform *_swig_go_0, btVector3 *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btTransform const *)arg1)->invXform((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btTransform_setBasis_bt_e001408c92acdfd7(btTransform *_swig_go_0, btMatrix3x3 *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btMatrix3x3 *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  
  (arg1)->setBasis((btMatrix3x3 const &)*arg2);
  
}


void _wrap_btTransform_setRotation_bt_e001408c92acdfd7(btTransform *_swig_go_0, btQuaternion *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  (arg1)->setRotation((btQuaternion const &)*arg2);
  
}


void _wrap_btTransform_setIdentity_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  (arg1)->setIdentity();
  
}


btTransform *_wrap_btTransform_inverse_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransform result;
  btTransform *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = ((btTransform const *)arg1)->inverse();
  *(btTransform **)&_swig_go_result = new btTransform(result); 
  return _swig_go_result;
}


btTransform *_wrap_btTransform_inverseTimes_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform result;
  btTransform *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  result = ((btTransform const *)arg1)->inverseTimes((btTransform const &)*arg2);
  *(btTransform **)&_swig_go_result = new btTransform(result); 
  return _swig_go_result;
}


btTransform *_wrap_btTransform_getIdentity_bt_e001408c92acdfd7() {
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  
  result = (btTransform *) &btTransform::getIdentity();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTransform_serialize_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransformFloatData *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  ((btTransform const *)arg1)->serialize(*arg2);
  
}


void _wrap_btTransform_serializeFloat_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransformFloatData *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  ((btTransform const *)arg1)->serializeFloat(*arg2);
  
}


void _wrap_btTransform_deSerialize_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransformFloatData *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btTransformFloatData const &)*arg2);
  
}


void _wrap_btTransform_deSerializeDouble_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransformDoubleData *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  (arg1)->deSerializeDouble((btTransformDoubleData const &)*arg2);
  
}


void _wrap_btTransform_deSerializeFloat_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btTransform *arg1 = (btTransform *) 0 ;
  btTransformFloatData *arg2 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat((btTransformFloatData const &)*arg2);
  
}


void _wrap_delete_btTransform_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = (btTransform *) 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTransformFloatData_m_basis_set_bt_e001408c92acdfd7(btTransformFloatData *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btTransformFloatData *arg1 = (btTransformFloatData *) 0 ;
  btMatrix3x3FloatData *arg2 = (btMatrix3x3FloatData *) 0 ;
  
  arg1 = *(btTransformFloatData **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_basis = *arg2;
  
}


btMatrix3x3FloatData *_wrap_btTransformFloatData_m_basis_get_bt_e001408c92acdfd7(btTransformFloatData *_swig_go_0) {
  btTransformFloatData *arg1 = (btTransformFloatData *) 0 ;
  btMatrix3x3FloatData *result = 0 ;
  btMatrix3x3FloatData *_swig_go_result;
  
  arg1 = *(btTransformFloatData **)&_swig_go_0; 
  
  result = (btMatrix3x3FloatData *)& ((arg1)->m_basis);
  *(btMatrix3x3FloatData **)&_swig_go_result = (btMatrix3x3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTransformFloatData_m_origin_set_bt_e001408c92acdfd7(btTransformFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btTransformFloatData *arg1 = (btTransformFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btTransformFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_origin = *arg2;
  
}


btVector3FloatData *_wrap_btTransformFloatData_m_origin_get_bt_e001408c92acdfd7(btTransformFloatData *_swig_go_0) {
  btTransformFloatData *arg1 = (btTransformFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btTransformFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_origin);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


btTransformFloatData *_wrap_new_btTransformFloatData_bt_e001408c92acdfd7() {
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  
  result = (btTransformFloatData *)new btTransformFloatData();
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTransformFloatData_bt_e001408c92acdfd7(btTransformFloatData *_swig_go_0) {
  btTransformFloatData *arg1 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btTransformFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTransformDoubleData_m_basis_set_bt_e001408c92acdfd7(btTransformDoubleData *_swig_go_0, btMatrix3x3DoubleData *_swig_go_1) {
  btTransformDoubleData *arg1 = (btTransformDoubleData *) 0 ;
  btMatrix3x3DoubleData *arg2 = (btMatrix3x3DoubleData *) 0 ;
  
  arg1 = *(btTransformDoubleData **)&_swig_go_0; 
  arg2 = *(btMatrix3x3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_basis = *arg2;
  
}


btMatrix3x3DoubleData *_wrap_btTransformDoubleData_m_basis_get_bt_e001408c92acdfd7(btTransformDoubleData *_swig_go_0) {
  btTransformDoubleData *arg1 = (btTransformDoubleData *) 0 ;
  btMatrix3x3DoubleData *result = 0 ;
  btMatrix3x3DoubleData *_swig_go_result;
  
  arg1 = *(btTransformDoubleData **)&_swig_go_0; 
  
  result = (btMatrix3x3DoubleData *)& ((arg1)->m_basis);
  *(btMatrix3x3DoubleData **)&_swig_go_result = (btMatrix3x3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btTransformDoubleData_m_origin_set_bt_e001408c92acdfd7(btTransformDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btTransformDoubleData *arg1 = (btTransformDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btTransformDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_origin = *arg2;
  
}


btVector3DoubleData *_wrap_btTransformDoubleData_m_origin_get_bt_e001408c92acdfd7(btTransformDoubleData *_swig_go_0) {
  btTransformDoubleData *arg1 = (btTransformDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btTransformDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_origin);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


btTransformDoubleData *_wrap_new_btTransformDoubleData_bt_e001408c92acdfd7() {
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  
  result = (btTransformDoubleData *)new btTransformDoubleData();
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTransformDoubleData_bt_e001408c92acdfd7(btTransformDoubleData *_swig_go_0) {
  btTransformDoubleData *arg1 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btTransformDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btMotionState_bt_e001408c92acdfd7(btMotionState *_swig_go_0) {
  btMotionState *arg1 = (btMotionState *) 0 ;
  
  arg1 = *(btMotionState **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMotionState_getWorldTransform_bt_e001408c92acdfd7(btMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btMotionState *arg1 = (btMotionState *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  ((btMotionState const *)arg1)->getWorldTransform(*arg2);
  
}


void _wrap_btMotionState_setWorldTransform_bt_e001408c92acdfd7(btMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btMotionState *arg1 = (btMotionState *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setWorldTransform((btTransform const &)*arg2);
  
}


void _wrap_btDefaultMotionState_m_graphicsWorldTrans_set_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_graphicsWorldTrans = *arg2;
  
}


btTransform *_wrap_btDefaultMotionState_m_graphicsWorldTrans_get_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_graphicsWorldTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultMotionState_m_centerOfMassOffset_set_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_centerOfMassOffset = *arg2;
  
}


btTransform *_wrap_btDefaultMotionState_m_centerOfMassOffset_get_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_centerOfMassOffset);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultMotionState_m_startWorldTrans_set_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_startWorldTrans = *arg2;
  
}


btTransform *_wrap_btDefaultMotionState_m_startWorldTrans_get_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_startWorldTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultMotionState_m_userPointer_set_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, void *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_userPointer = arg2;
  
}


void *_wrap_btDefaultMotionState_m_userPointer_get_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_userPointer);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


btDefaultMotionState *_wrap_new_btDefaultMotionState__SWIG_0_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btDefaultMotionState *result = 0 ;
  btDefaultMotionState *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  result = (btDefaultMotionState *)new btDefaultMotionState((btTransform const &)*arg1,(btTransform const &)*arg2);
  *(btDefaultMotionState **)&_swig_go_result = (btDefaultMotionState *)result; 
  return _swig_go_result;
}


btDefaultMotionState *_wrap_new_btDefaultMotionState__SWIG_1_bt_e001408c92acdfd7(btTransform *_swig_go_0) {
  btTransform *arg1 = 0 ;
  btDefaultMotionState *result = 0 ;
  btDefaultMotionState *_swig_go_result;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  
  result = (btDefaultMotionState *)new btDefaultMotionState((btTransform const &)*arg1);
  *(btDefaultMotionState **)&_swig_go_result = (btDefaultMotionState *)result; 
  return _swig_go_result;
}


btDefaultMotionState *_wrap_new_btDefaultMotionState__SWIG_2_bt_e001408c92acdfd7() {
  btDefaultMotionState *result = 0 ;
  btDefaultMotionState *_swig_go_result;
  
  
  result = (btDefaultMotionState *)new btDefaultMotionState();
  *(btDefaultMotionState **)&_swig_go_result = (btDefaultMotionState *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultMotionState_getWorldTransform_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  ((btDefaultMotionState const *)arg1)->getWorldTransform(*arg2);
  
}


void _wrap_btDefaultMotionState_setWorldTransform_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0, btTransform *_swig_go_1) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setWorldTransform((btTransform const &)*arg2);
  
}


void _wrap_delete_btDefaultMotionState_bt_e001408c92acdfd7(btDefaultMotionState *_swig_go_0) {
  btDefaultMotionState *arg1 = (btDefaultMotionState *) 0 ;
  
  arg1 = *(btDefaultMotionState **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BOX_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = BOX_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TRIANGLE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = TRIANGLE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TETRAHEDRAL_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = TETRAHEDRAL_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONVEX_HULL_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONVEX_HULL_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CUSTOM_POLYHEDRAL_SHAPE_TYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CUSTOM_POLYHEDRAL_SHAPE_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMPLICIT_CONVEX_SHAPES_START_HERE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = IMPLICIT_CONVEX_SHAPES_START_HERE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SPHERE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = SPHERE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MULTI_SPHERE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = MULTI_SPHERE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CAPSULE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CAPSULE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONVEX_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONVEX_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CYLINDER_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CYLINDER_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_UNIFORM_SCALING_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = UNIFORM_SCALING_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MINKOWSKI_SUM_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = MINKOWSKI_SUM_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BOX_2D_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = BOX_2D_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONVEX_2D_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONVEX_2D_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CUSTOM_CONVEX_SHAPE_TYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CUSTOM_CONVEX_SHAPE_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONCAVE_SHAPES_START_HERE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONCAVE_SHAPES_START_HERE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TRIANGLE_MESH_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = TRIANGLE_MESH_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FAST_CONCAVE_MESH_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = FAST_CONCAVE_MESH_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TERRAIN_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = TERRAIN_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GIMPACT_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = GIMPACT_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EMPTY_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = EMPTY_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STATIC_PLANE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = STATIC_PLANE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CUSTOM_CONCAVE_SHAPE_TYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CUSTOM_CONCAVE_SHAPE_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SDF_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = SDF_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONCAVE_SHAPES_END_HERE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = CONCAVE_SHAPES_END_HERE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COMPOUND_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = COMPOUND_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOFTBODY_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = SOFTBODY_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HFFLUID_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = HFFLUID_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INVALID_SHAPE_PROXYTYPE_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = INVALID_SHAPE_PROXYTYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAX_BROADPHASE_COLLISION_TYPES_bt_e001408c92acdfd7() {
  BroadphaseNativeTypes result;
  intgo _swig_go_result;
  
  
  result = MAX_BROADPHASE_COLLISION_TYPES;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DefaultFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::DefaultFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_StaticFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::StaticFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KinematicFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::KinematicFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DebrisFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::DebrisFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SensorTrigger_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::SensorTrigger;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CharacterFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::CharacterFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_AllFilter_btBroadphaseProxy_bt_e001408c92acdfd7() {
  btBroadphaseProxy::CollisionFilterGroups result;
  intgo _swig_go_result;
  
  
  result = btBroadphaseProxy::AllFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_clientObject_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, void *_swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_clientObject = arg2;
  
}


void *_wrap_btBroadphaseProxy_m_clientObject_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_clientObject);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_collisionFilterGroup_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, intgo _swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterGroup = arg2;
  
}


intgo _wrap_btBroadphaseProxy_m_collisionFilterGroup_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_collisionFilterMask_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, intgo _swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterMask = arg2;
  
}


intgo _wrap_btBroadphaseProxy_m_collisionFilterMask_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterMask);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_uniqueId_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, intgo _swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_uniqueId = arg2;
  
}


intgo _wrap_btBroadphaseProxy_m_uniqueId_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_uniqueId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_aabbMin_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, btVector3 *_swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMin = *arg2;
  
}


btVector3 *_wrap_btBroadphaseProxy_m_aabbMin_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_aabbMin);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseProxy_m_aabbMax_set_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, btVector3 *_swig_go_1) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMax = *arg2;
  
}


btVector3 *_wrap_btBroadphaseProxy_m_aabbMax_get_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_aabbMax);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


intgo _wrap_btBroadphaseProxy_getUid_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  result = (int)((btBroadphaseProxy const *)arg1)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_new_btBroadphaseProxy__SWIG_0_bt_e001408c92acdfd7() {
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  
  result = (btBroadphaseProxy *)new btBroadphaseProxy();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_new_btBroadphaseProxy__SWIG_1_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (btBroadphaseProxy *)new btBroadphaseProxy((btVector3 const &)*arg1,(btVector3 const &)*arg2,arg3,arg4,arg5);
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isPolyhedral_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isPolyhedral(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isConvex_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConvex(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isNonMoving_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isNonMoving(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isConcave_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConcave(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isCompound_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isCompound(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isSoftBody_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isSoftBody(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isInfinite_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isInfinite(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBroadphaseProxy_isConvex2d_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConvex2d(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphaseProxy_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0) {
  btBroadphaseProxy *arg1 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  
  delete arg1;
  
}


btBroadphasePair *_wrap_new_btBroadphasePair__SWIG_0_bt_e001408c92acdfd7() {
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  
  result = (btBroadphasePair *)new btBroadphasePair();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_new_btBroadphasePair__SWIG_1_bt_e001408c92acdfd7(btBroadphaseProxy *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btBroadphaseProxy *arg1 = 0 ;
  btBroadphaseProxy *arg2 = 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btBroadphaseProxy **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (btBroadphasePair *)new btBroadphasePair(*arg1,*arg2);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphasePair_m_pProxy0_set_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pProxy0 = arg2;
  
}


btBroadphaseProxy *_wrap_btBroadphasePair_m_pProxy0_get_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *) ((arg1)->m_pProxy0);
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphasePair_m_pProxy1_set_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pProxy1 = arg2;
  
}


btBroadphaseProxy *_wrap_btBroadphasePair_m_pProxy1_get_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *) ((arg1)->m_pProxy1);
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphasePair_m_algorithm_set_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0, btCollisionAlgorithm *_swig_go_1) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btCollisionAlgorithm *arg2 = (btCollisionAlgorithm *) 0 ;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithm **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_algorithm = arg2;
  
}


btCollisionAlgorithm *_wrap_btBroadphasePair_m_algorithm_get_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  
  result = (btCollisionAlgorithm *) ((arg1)->m_algorithm);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphasePair_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0) {
  btBroadphasePair *arg1 = (btBroadphasePair *) 0 ;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  
  delete arg1;
  
}


btBroadphasePairSortPredicate *_wrap_new_btBroadphasePairSortPredicate_bt_e001408c92acdfd7() {
  btBroadphasePairSortPredicate *result = 0 ;
  btBroadphasePairSortPredicate *_swig_go_result;
  
  
  result = (btBroadphasePairSortPredicate *)new btBroadphasePairSortPredicate();
  *(btBroadphasePairSortPredicate **)&_swig_go_result = (btBroadphasePairSortPredicate *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphasePairSortPredicate_bt_e001408c92acdfd7(btBroadphasePairSortPredicate *_swig_go_0) {
  btBroadphasePairSortPredicate *arg1 = (btBroadphasePairSortPredicate *) 0 ;
  
  arg1 = *(btBroadphasePairSortPredicate **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btCollisionShape_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCollisionShape_getAabb_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btCollisionShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btCollisionShape_getBoundingSphere_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  ((btCollisionShape const *)arg1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btCollisionShape_getAngularMotionDisc_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionShape const *)arg1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCollisionShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, float _swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btScalar)((btCollisionShape const *)arg1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_calculateTemporalAabb_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  ((btCollisionShape const *)arg1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btCollisionShape_isPolyhedral_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isConvex2d_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isConvex_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isNonMoving_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isConcave_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isCompound_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isSoftBody_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionShape_isInfinite_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (bool)((btCollisionShape const *)arg1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_setLocalScaling_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btCollisionShape_getLocalScaling_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btCollisionShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_calculateLocalInertia_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btCollisionShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btCollisionShape_getName_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (char *)((btCollisionShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btCollisionShape_getShapeType_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (int)((btCollisionShape const *)arg1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCollisionShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = ((btCollisionShape const *)arg1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btCollisionShape_setMargin_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, float _swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


float _wrap_btCollisionShape_getMargin_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_setUserPointer_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, void *_swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->setUserPointer(arg2);
  
}


void *_wrap_btCollisionShape_getUserPointer_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (void *)((btCollisionShape const *)arg1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_setUserIndex_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, intgo _swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserIndex(arg2);
  
}


intgo _wrap_btCollisionShape_getUserIndex_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (int)((btCollisionShape const *)arg1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShape_setUserIndex2_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, intgo _swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserIndex2(arg2);
  
}


intgo _wrap_btCollisionShape_getUserIndex2_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (int)((btCollisionShape const *)arg1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  
  result = (int)((btCollisionShape const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCollisionShape_serialize_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btCollisionShape const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCollisionShape_serializeSingleShape_bt_e001408c92acdfd7(btCollisionShape *_swig_go_0, btSerializer *_swig_go_1) {
  btCollisionShape *arg1 = (btCollisionShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCollisionShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  ((btCollisionShape const *)arg1)->serializeSingleShape(arg2);
  
}


void _wrap_btCollisionShapeData_m_name_set_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0, _gostring_ _swig_go_1) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btCollisionShapeData_m_name_get_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCollisionShapeData_m_shapeType_set_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0, intgo _swig_go_1) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_shapeType = arg2;
  
}


intgo _wrap_btCollisionShapeData_m_shapeType_get_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_shapeType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionShapeData_m_padding_set_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0, _gostring_ _swig_go_1) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btCollisionShapeData_m_padding_get_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btCollisionShapeData *_wrap_new_btCollisionShapeData_bt_e001408c92acdfd7() {
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  
  result = (btCollisionShapeData *)new btCollisionShapeData();
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionShapeData_bt_e001408c92acdfd7(btCollisionShapeData *_swig_go_0) {
  btCollisionShapeData *arg1 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btCollisionShapeData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBulletCollisionProbe_bt_e001408c92acdfd7() {
  btBulletCollisionProbe();
  
}


void _wrap_delete_btConvexShape_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btConvexShape_localGetSupportingVertex_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btConvexShape const *)arg1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btConvexShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btConvexShape const *)arg1)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btConvexShape const *)arg1)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btConvexShape_getMarginNonVirtual_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  result = (btScalar)((btConvexShape const *)arg1)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_getAabbNonVirtual_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexShape const *)arg1)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexShape_project_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  ((btConvexShape const *)arg1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btConvexShape const *)arg1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btConvexShape_getAabb_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexShape_getAabbSlow_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexShape const *)arg1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexShape_setLocalScaling_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btConvexShape_getLocalScaling_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_setMargin_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, float _swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


float _wrap_btConvexShape_getMargin_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  result = (btScalar)((btConvexShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConvexShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  result = (int)((btConvexShape const *)arg1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btConvexShape const *)arg1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


void _wrap_btConvexShape_getBoundingSphere_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btConvexShape_getAngularMotionDisc_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (btScalar)((btCollisionShape const *)swig_b0)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, float _swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (btScalar)((btCollisionShape const *)swig_b0)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_calculateTemporalAabb_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btConvexShape_isPolyhedral_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isConvex2d_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isConvex_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isNonMoving_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isConcave_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isCompound_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isSoftBody_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexShape_isInfinite_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_calculateLocalInertia_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btConvexShape_getName_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (char *)((btCollisionShape const *)swig_b0)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btConvexShape_getShapeType_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = ((btCollisionShape const *)swig_b0)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btConvexShape_setUserPointer_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, void *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserPointer(arg2);
  
}


void *_wrap_btConvexShape_getUserPointer_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (void *)((btCollisionShape const *)swig_b0)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_setUserIndex_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, intgo _swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserIndex(arg2);
  
}


intgo _wrap_btConvexShape_getUserIndex_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexShape_setUserIndex2_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, intgo _swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserIndex2(arg2);
  
}


intgo _wrap_btConvexShape_getUserIndex2_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConvexShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btConvexShape *_swig_go_0) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btConvexShape_serialize_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (char *)((btCollisionShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btConvexShape_serializeSingleShape_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btSerializer *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->serializeSingleShape(arg2);
  
}


btVector3 *_wrap_convexHullSupport_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  btVector3 *arg4 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = convexHullSupport((btVector3 const &)*arg1,(btVector3 const *)arg2,arg3,(btVector3 const &)*arg4);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_AabbExpand_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  AabbExpand(*arg1,*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


bool _wrap_TestPointAgainstAabb2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (bool)TestPointAgainstAabb2((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_TestAabbAgainstAabb2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (bool)TestAabbAgainstAabb2((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_TestTriangleAgainstAabb2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (bool)TestTriangleAgainstAabb2((btVector3 const *)arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btOutcode_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (int)btOutcode((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRayAabb2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, intgo *_swig_go_2, btVector3 (*_swig_go_3)[2], float *_swig_go_4, float _swig_go_5, float _swig_go_6) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  unsigned int *arg3 = (unsigned int *) (unsigned int *)0 ;
  btVector3 *arg4 = (btVector3 *) (btVector3 *)0 ;
  btScalar *arg5 = 0 ;
  btScalar arg6 ;
  btScalar arg7 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(unsigned int **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  
  result = (bool)btRayAabb2((btVector3 const &)*arg1,(btVector3 const &)*arg2,(unsigned int const (*))arg3,(btVector3 const (*))arg4,*arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRayAabb_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  result = (bool)btRayAabb((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTransformAabb__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1, btTransform *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btVector3 *arg1 = 0 ;
  btScalar arg2 ;
  btTransform *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  btTransformAabb((btVector3 const &)*arg1,arg2,(btTransform const &)*arg3,*arg4,*arg5);
  
}


void _wrap_btTransformAabb__SWIG_1_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  btTransformAabb((btVector3 const &)*arg1,(btVector3 const &)*arg2,arg3,(btTransform const &)*arg4,*arg5,*arg6);
  
}


intgo _wrap_testQuantizedAabbAgainstQuantizedAabb_bt_e001408c92acdfd7(short *_swig_go_0, short *_swig_go_1, short *_swig_go_2, short *_swig_go_3) {
  unsigned short *arg1 = (unsigned short *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  unsigned short *arg3 = (unsigned short *) 0 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(unsigned short **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  arg3 = *(unsigned short **)&_swig_go_2; 
  arg4 = *(unsigned short **)&_swig_go_3; 
  
  result = (unsigned int)testQuantizedAabbAgainstQuantizedAabb((unsigned short const *)arg1,(unsigned short const *)arg2,(unsigned short const *)arg3,(unsigned short const *)arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexInternalShape_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btConvexInternalShape_localGetSupportingVertex_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btConvexInternalShape const *)arg1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexInternalShape const *)arg1)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btConvexInternalShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btConvexInternalShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setSafeMargin(arg2);
  
}


void _wrap_btConvexInternalShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btConvexInternalShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btConvexInternalShape_getAabb_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexInternalShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexInternalShape_getAabbSlow_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexInternalShape const *)arg1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexInternalShape_setLocalScaling_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btConvexInternalShape_getLocalScaling_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexInternalShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_getLocalScalingNV_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexInternalShape const *)arg1)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_setMargin_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


float _wrap_btConvexInternalShape_getMargin_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (btScalar)((btConvexInternalShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexInternalShape_getMarginNV_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (btScalar)((btConvexInternalShape const *)arg1)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConvexInternalShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (int)((btConvexInternalShape const *)arg1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btConvexInternalShape const *)arg1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


intgo _wrap_btConvexInternalShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  result = (int)((btConvexInternalShape const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btConvexInternalShape_serialize_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btConvexInternalShape const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  result = ((btConvexShape const *)swig_b0)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  result = ((btConvexShape const *)swig_b0)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  result = ((btConvexShape const *)swig_b0)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btConvexInternalShape_getMarginNonVirtual_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  result = (btScalar)((btConvexShape const *)swig_b0)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_getAabbNonVirtual_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  ((btConvexShape const *)swig_b0)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexInternalShape_project_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  ((btConvexShape const *)swig_b0)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btConvexInternalShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  ((btConvexShape const *)swig_b0)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btConvexInternalShape_getBoundingSphere_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btConvexInternalShape_getAngularMotionDisc_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexInternalShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_calculateTemporalAabb_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btConvexInternalShape_isPolyhedral_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isConvex2d_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isConvex_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isNonMoving_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isConcave_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isCompound_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isSoftBody_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalShape_isInfinite_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_calculateLocalInertia_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btConvexInternalShape_getName_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (char *)((btCollisionShape const *)swig_b1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btConvexInternalShape_getShapeType_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = ((btCollisionShape const *)swig_b1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_setUserPointer_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, void *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserPointer(arg2);
  
}


void *_wrap_btConvexInternalShape_getUserPointer_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (void *)((btCollisionShape const *)swig_b1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_setUserIndex_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, intgo _swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex(arg2);
  
}


intgo _wrap_btConvexInternalShape_getUserIndex_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_setUserIndex2_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, intgo _swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex2(arg2);
  
}


intgo _wrap_btConvexInternalShape_getUserIndex2_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShape_serializeSingleShape_bt_e001408c92acdfd7(btConvexInternalShape *_swig_go_0, btSerializer *_swig_go_1) {
  btConvexInternalShape *arg1 = (btConvexInternalShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btConvexInternalShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConvexShape *swig_b0 = (btConvexShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->serializeSingleShape(arg2);
  
}


void _wrap_btConvexInternalShapeData_m_collisionShapeData_set_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0, btCollisionShapeData *_swig_go_1) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btCollisionShapeData *arg2 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  arg2 = *(btCollisionShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionShapeData = *arg2;
  
}


btCollisionShapeData *_wrap_btConvexInternalShapeData_m_collisionShapeData_get_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  result = (btCollisionShapeData *)& ((arg1)->m_collisionShapeData);
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShapeData_m_localScaling_set_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localScaling = *arg2;
  
}


btVector3FloatData *_wrap_btConvexInternalShapeData_m_localScaling_get_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_localScaling);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShapeData_m_implicitShapeDimensions_set_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_implicitShapeDimensions = *arg2;
  
}


btVector3FloatData *_wrap_btConvexInternalShapeData_m_implicitShapeDimensions_get_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_implicitShapeDimensions);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShapeData_m_collisionMargin_set_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0, float _swig_go_1) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionMargin = arg2;
  
}


float _wrap_btConvexInternalShapeData_m_collisionMargin_get_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_collisionMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalShapeData_m_padding_set_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0, intgo _swig_go_1) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_padding = arg2;
  
}


intgo _wrap_btConvexInternalShapeData_m_padding_get_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_padding);
  _swig_go_result = result; 
  return _swig_go_result;
}


btConvexInternalShapeData *_wrap_new_btConvexInternalShapeData_bt_e001408c92acdfd7() {
  btConvexInternalShapeData *result = 0 ;
  btConvexInternalShapeData *_swig_go_result;
  
  
  result = (btConvexInternalShapeData *)new btConvexInternalShapeData();
  *(btConvexInternalShapeData **)&_swig_go_result = (btConvexInternalShapeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexInternalShapeData_bt_e001408c92acdfd7(btConvexInternalShapeData *_swig_go_0) {
  btConvexInternalShapeData *arg1 = (btConvexInternalShapeData *) 0 ;
  
  arg1 = *(btConvexInternalShapeData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexInternalAabbCachingShape_setLocalScaling_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


void _wrap_btConvexInternalAabbCachingShape_getAabb_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConvexInternalAabbCachingShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexInternalAabbCachingShape_recalcLocalAabb_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  (arg1)->recalcLocalAabb();
  
}


void _wrap_delete_btConvexInternalAabbCachingShape_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertex_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = ((btConvexInternalShape const *)swig_b0)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2);
  
}


void _wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btConvexInternalAabbCachingShape_getAabbSlow_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_getLocalScaling_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_getLocalScalingNV_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_setMargin_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


float _wrap_btConvexInternalAabbCachingShape_getMargin_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexInternalAabbCachingShape_getMarginNV_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConvexInternalAabbCachingShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


intgo _wrap_btConvexInternalAabbCachingShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btConvexInternalAabbCachingShape_serialize_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (char *)((btConvexInternalShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btConvexInternalAabbCachingShape_getMarginNonVirtual_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = (btScalar)((btConvexShape const *)swig_b1)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_getAabbNonVirtual_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConvexInternalAabbCachingShape_project_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btConvexInternalAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btConvexInternalAabbCachingShape_getBoundingSphere_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btConvexInternalAabbCachingShape_getAngularMotionDisc_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexInternalAabbCachingShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_calculateTemporalAabb_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btConvexInternalAabbCachingShape_isPolyhedral_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isConvex2d_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isConvex_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isNonMoving_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isConcave_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isCompound_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isSoftBody_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConvexInternalAabbCachingShape_isInfinite_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_calculateLocalInertia_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btConvexInternalAabbCachingShape_getName_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (char *)((btCollisionShape const *)swig_b2)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btConvexInternalAabbCachingShape_getShapeType_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexInternalAabbCachingShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = ((btCollisionShape const *)swig_b2)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_setUserPointer_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, void *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserPointer(arg2);
  
}


void *_wrap_btConvexInternalAabbCachingShape_getUserPointer_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (void *)((btCollisionShape const *)swig_b2)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_setUserIndex_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, intgo _swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex(arg2);
  
}


intgo _wrap_btConvexInternalAabbCachingShape_getUserIndex_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_setUserIndex2_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, intgo _swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex2(arg2);
  
}


intgo _wrap_btConvexInternalAabbCachingShape_getUserIndex2_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexInternalAabbCachingShape_serializeSingleShape_bt_e001408c92acdfd7(btConvexInternalAabbCachingShape *_swig_go_0, btSerializer *_swig_go_1) {
  btConvexInternalAabbCachingShape *arg1 = (btConvexInternalAabbCachingShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btConvexInternalAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->serializeSingleShape(arg2);
  
}


btSphereShape *_wrap_new_btSphereShape_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  btSphereShape *result = 0 ;
  btSphereShape *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (btSphereShape *)new btSphereShape(arg1);
  *(btSphereShape **)&_swig_go_result = (btSphereShape *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_localGetSupportingVertex_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btSphereShape const *)arg1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btSphereShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btSphereShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btSphereShape const *)arg1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btSphereShape_calculateLocalInertia_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btSphereShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


void _wrap_btSphereShape_getAabb_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btSphereShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


float _wrap_btSphereShape_getRadius_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  result = (btScalar)((btSphereShape const *)arg1)->getRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_setUnscaledRadius_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setUnscaledRadius(arg2);
  
}


_gostring_ _wrap_btSphereShape_getName_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  result = (char *)((btSphereShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btSphereShape_setMargin_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


float _wrap_btSphereShape_getMargin_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  result = (btScalar)((btSphereShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSphereShape_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btSphereShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btSphereShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btSphereShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2);
  
}


void _wrap_btSphereShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btSphereShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btSphereShape_getAabbSlow_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btSphereShape_setLocalScaling_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btSphereShape_getLocalScaling_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_getLocalScalingNV_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSphereShape_getMarginNV_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSphereShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


intgo _wrap_btSphereShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btSphereShape_serialize_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (char *)((btConvexInternalShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btSphereShape_getMarginNonVirtual_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = (btScalar)((btConvexShape const *)swig_b1)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_getAabbNonVirtual_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btSphereShape_project_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btSphereShape_getBoundingSphere_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btSphereShape_getAngularMotionDisc_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSphereShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, float _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_calculateTemporalAabb_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btSphereShape_isPolyhedral_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isConvex2d_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isConvex_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isNonMoving_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isConcave_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isCompound_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isSoftBody_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSphereShape_isInfinite_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSphereShape_getShapeType_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSphereShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = ((btCollisionShape const *)swig_b2)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btSphereShape_setUserPointer_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, void *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserPointer(arg2);
  
}


void *_wrap_btSphereShape_getUserPointer_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (void *)((btCollisionShape const *)swig_b2)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_setUserIndex_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, intgo _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex(arg2);
  
}


intgo _wrap_btSphereShape_getUserIndex_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_setUserIndex2_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, intgo _swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex2(arg2);
  
}


intgo _wrap_btSphereShape_getUserIndex2_bt_e001408c92acdfd7(btSphereShape *_swig_go_0) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereShape_serializeSingleShape_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btSerializer *_swig_go_1) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->serializeSingleShape(arg2);
  
}


void _wrap_delete_btPolyhedralConvexShape_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->initializePolyhedralFeatures(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  result = (bool)(arg1)->initializePolyhedralFeatures();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setPolyhedralFeatures_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btConvexPolyhedron *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  
  (arg1)->setPolyhedralFeatures(*arg2);
  
}


btConvexPolyhedron *_wrap_btPolyhedralConvexShape_getConvexPolyhedron_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btConvexPolyhedron *result = 0 ;
  btConvexPolyhedron *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  result = (btConvexPolyhedron *)((btPolyhedralConvexShape const *)arg1)->getConvexPolyhedron();
  *(btConvexPolyhedron **)&_swig_go_result = (btConvexPolyhedron *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btPolyhedralConvexShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btPolyhedralConvexShape const *)arg1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btPolyhedralConvexShape_calculateLocalInertia_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btPolyhedralConvexShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexShape_getNumVertices_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  result = (int)((btPolyhedralConvexShape const *)arg1)->getNumVertices();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexShape_getNumEdges_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  result = (int)((btPolyhedralConvexShape const *)arg1)->getNumEdges();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_getEdge_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btPolyhedralConvexShape const *)arg1)->getEdge(arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexShape_getVertex_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btPolyhedralConvexShape const *)arg1)->getVertex(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexShape_getNumPlanes_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  result = (int)((btPolyhedralConvexShape const *)arg1)->getNumPlanes();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_getPlane_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btPolyhedralConvexShape const *)arg1)->getPlane(*arg2,*arg3,arg4);
  
}


bool _wrap_btPolyhedralConvexShape_isInside_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (bool)((btPolyhedralConvexShape const *)arg1)->isInside((btVector3 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_localGetSupportingVertex_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = ((btConvexInternalShape const *)swig_b0)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2);
  
}


void _wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btPolyhedralConvexShape_getAabb_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexShape_getAabbSlow_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexShape_setLocalScaling_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btPolyhedralConvexShape_getLocalScaling_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_getLocalScalingNV_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setMargin_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


float _wrap_btPolyhedralConvexShape_getMargin_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexShape_getMarginNV_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btPolyhedralConvexShape_serialize_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (char *)((btConvexInternalShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexShape_getMarginNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = (btScalar)((btConvexShape const *)swig_b1)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_getAabbNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexShape_project_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btPolyhedralConvexShape_getBoundingSphere_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btPolyhedralConvexShape_getAngularMotionDisc_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_calculateTemporalAabb_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btPolyhedralConvexShape_isPolyhedral_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isConvex2d_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isConvex_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isNonMoving_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isConcave_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isCompound_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isSoftBody_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexShape_isInfinite_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btPolyhedralConvexShape_getName_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (char *)((btCollisionShape const *)swig_b2)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexShape_getShapeType_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = ((btCollisionShape const *)swig_b2)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setUserPointer_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, void *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserPointer(arg2);
  
}


void *_wrap_btPolyhedralConvexShape_getUserPointer_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (void *)((btCollisionShape const *)swig_b2)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setUserIndex_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex(arg2);
  
}


intgo _wrap_btPolyhedralConvexShape_getUserIndex_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_setUserIndex2_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex2(arg2);
  
}


intgo _wrap_btPolyhedralConvexShape_getUserIndex2_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexShape_serializeSingleShape_bt_e001408c92acdfd7(btPolyhedralConvexShape *_swig_go_0, btSerializer *_swig_go_1) {
  btPolyhedralConvexShape *arg1 = (btPolyhedralConvexShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btPolyhedralConvexShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->serializeSingleShape(arg2);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_getNonvirtualAabb_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  ((btPolyhedralConvexAabbCachingShape const *)arg1)->getNonvirtualAabb((btTransform const &)*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_setLocalScaling_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_getAabb_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btPolyhedralConvexAabbCachingShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_recalcLocalAabb_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  (arg1)->recalcLocalAabb();
  
}


void _wrap_delete_btPolyhedralConvexAabbCachingShape_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_0_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (bool)(swig_b0)->initializePolyhedralFeatures(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_1_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (bool)(swig_b0)->initializePolyhedralFeatures();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setPolyhedralFeatures_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btConvexPolyhedron *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  (swig_b0)->setPolyhedralFeatures(*arg2);
  
}


btConvexPolyhedron *_wrap_btPolyhedralConvexAabbCachingShape_getConvexPolyhedron_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btConvexPolyhedron *result = 0 ;
  btConvexPolyhedron *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (btConvexPolyhedron *)((btPolyhedralConvexShape const *)swig_b0)->getConvexPolyhedron();
  *(btConvexPolyhedron **)&_swig_go_result = (btConvexPolyhedron *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = ((btPolyhedralConvexShape const *)swig_b0)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  ((btPolyhedralConvexShape const *)swig_b0)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_calculateLocalInertia_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  ((btPolyhedralConvexShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getNumVertices_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (int)((btPolyhedralConvexShape const *)swig_b0)->getNumVertices();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getNumEdges_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (int)((btPolyhedralConvexShape const *)swig_b0)->getNumEdges();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_getEdge_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  ((btPolyhedralConvexShape const *)swig_b0)->getEdge(arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_getVertex_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  ((btPolyhedralConvexShape const *)swig_b0)->getVertex(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getNumPlanes_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (int)((btPolyhedralConvexShape const *)swig_b0)->getNumPlanes();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_getPlane_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  ((btPolyhedralConvexShape const *)swig_b0)->getPlane(*arg2,*arg3,arg4);
  
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isInside_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (bool)((btPolyhedralConvexShape const *)swig_b0)->isInside((btVector3 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertex_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = ((btConvexInternalShape const *)swig_b1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_getAabbSlow_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_getLocalScaling_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_getLocalScalingNV_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setMargin_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setMargin(arg2);
  
}


float _wrap_btPolyhedralConvexAabbCachingShape_getMargin_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexAabbCachingShape_getMarginNV_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (int)((btConvexInternalShape const *)swig_b1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (int)((btConvexInternalShape const *)swig_b1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btPolyhedralConvexAabbCachingShape_serialize_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (char *)((btConvexInternalShape const *)swig_b1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexAabbCachingShape_getMarginNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = (btScalar)((btConvexShape const *)swig_b2)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_getAabbNonVirtual_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_project_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btPolyhedralConvexAabbCachingShape_getBoundingSphere_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btPolyhedralConvexAabbCachingShape_getAngularMotionDisc_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPolyhedralConvexAabbCachingShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, float _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_calculateTemporalAabb_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isPolyhedral_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isConvex2d_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isConvex_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isNonMoving_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isConcave_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isCompound_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isSoftBody_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btPolyhedralConvexAabbCachingShape_isInfinite_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btPolyhedralConvexAabbCachingShape_getName_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (char *)((btCollisionShape const *)swig_b3)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getShapeType_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btPolyhedralConvexAabbCachingShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = ((btCollisionShape const *)swig_b3)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setUserPointer_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, void *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserPointer(arg2);
  
}


void *_wrap_btPolyhedralConvexAabbCachingShape_getUserPointer_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (void *)((btCollisionShape const *)swig_b3)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setUserIndex_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex(arg2);
  
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getUserIndex_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_setUserIndex2_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, intgo _swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex2(arg2);
  
}


intgo _wrap_btPolyhedralConvexAabbCachingShape_getUserIndex2_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralConvexAabbCachingShape_serializeSingleShape_bt_e001408c92acdfd7(btPolyhedralConvexAabbCachingShape *_swig_go_0, btSerializer *_swig_go_1) {
  btPolyhedralConvexAabbCachingShape *arg1 = (btPolyhedralConvexAabbCachingShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btPolyhedralConvexAabbCachingShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->serializeSingleShape(arg2);
  
}


void _wrap_btFace_m_indices_set_bt_e001408c92acdfd7(btFace *_swig_go_0, btAlignedObjectArray< int > *_swig_go_1) {
  btFace *arg1 = (btFace *) 0 ;
  btAlignedObjectArray< int > *arg2 = (btAlignedObjectArray< int > *) 0 ;
  
  arg1 = *(btFace **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< int > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_indices = *arg2;
  
}


btAlignedObjectArray< int > *_wrap_btFace_m_indices_get_bt_e001408c92acdfd7(btFace *_swig_go_0) {
  btFace *arg1 = (btFace *) 0 ;
  btAlignedObjectArray< int > *result = 0 ;
  btAlignedObjectArray< int > *_swig_go_result;
  
  arg1 = *(btFace **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< int > *)& ((arg1)->m_indices);
  *(btAlignedObjectArray< int > **)&_swig_go_result = (btAlignedObjectArray< int > *)result; 
  return _swig_go_result;
}


void _wrap_btFace_m_plane_set_bt_e001408c92acdfd7(btFace *_swig_go_0, float *_swig_go_1) {
  btFace *arg1 = (btFace *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(btFace **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  {
    size_t ii;
    btScalar *b = (btScalar *) arg1->m_plane;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btScalar *) arg2 + ii);
  }
  
}


float *_wrap_btFace_m_plane_get_bt_e001408c92acdfd7(btFace *_swig_go_0) {
  btFace *arg1 = (btFace *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btFace **)&_swig_go_0; 
  
  result = (btScalar *)(btScalar *) ((arg1)->m_plane);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


btFace *_wrap_new_btFace_bt_e001408c92acdfd7() {
  btFace *result = 0 ;
  btFace *_swig_go_result;
  
  
  result = (btFace *)new btFace();
  *(btFace **)&_swig_go_result = (btFace *)result; 
  return _swig_go_result;
}


void _wrap_delete_btFace_bt_e001408c92acdfd7(btFace *_swig_go_0) {
  btFace *arg1 = (btFace *) 0 ;
  
  arg1 = *(btFace **)&_swig_go_0; 
  
  delete arg1;
  
}


btConvexPolyhedron *_wrap_new_btConvexPolyhedron_bt_e001408c92acdfd7() {
  btConvexPolyhedron *result = 0 ;
  btConvexPolyhedron *_swig_go_result;
  
  
  result = (btConvexPolyhedron *)new btConvexPolyhedron();
  *(btConvexPolyhedron **)&_swig_go_result = (btConvexPolyhedron *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexPolyhedron_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexPolyhedron_m_vertices_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = (btAlignedObjectArray< btVector3 > *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_vertices = *arg2;
  
}


btAlignedObjectArray< btVector3 > *_wrap_btConvexPolyhedron_m_vertices_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btVector3 > *result = 0 ;
  btAlignedObjectArray< btVector3 > *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btVector3 > *)& ((arg1)->m_vertices);
  *(btAlignedObjectArray< btVector3 > **)&_swig_go_result = (btAlignedObjectArray< btVector3 > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_m_faces_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btAlignedObjectArray< btFace > *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btFace > *arg2 = (btAlignedObjectArray< btFace > *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btFace > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_faces = *arg2;
  
}


btAlignedObjectArray< btFace > *_wrap_btConvexPolyhedron_m_faces_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btFace > *result = 0 ;
  btAlignedObjectArray< btFace > *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btFace > *)& ((arg1)->m_faces);
  *(btAlignedObjectArray< btFace > **)&_swig_go_result = (btAlignedObjectArray< btFace > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_m_uniqueEdges_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = (btAlignedObjectArray< btVector3 > *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_uniqueEdges = *arg2;
  
}


btAlignedObjectArray< btVector3 > *_wrap_btConvexPolyhedron_m_uniqueEdges_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btAlignedObjectArray< btVector3 > *result = 0 ;
  btAlignedObjectArray< btVector3 > *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btVector3 > *)& ((arg1)->m_uniqueEdges);
  *(btAlignedObjectArray< btVector3 > **)&_swig_go_result = (btAlignedObjectArray< btVector3 > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_m_localCenter_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localCenter = *arg2;
  
}


btVector3 *_wrap_btConvexPolyhedron_m_localCenter_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_localCenter);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_m_extents_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_extents = *arg2;
  
}


btVector3 *_wrap_btConvexPolyhedron_m_extents_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_extents);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_m_radius_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, float _swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_radius = arg2;
  
}


float _wrap_btConvexPolyhedron_m_radius_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_radius);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_mC_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->mC = *arg2;
  
}


btVector3 *_wrap_btConvexPolyhedron_mC_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->mC);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_mE_set_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btVector3 *_swig_go_1) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->mE = *arg2;
  
}


btVector3 *_wrap_btConvexPolyhedron_mE_get_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->mE);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_initialize_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  (arg1)->initialize();
  
}


void _wrap_btConvexPolyhedron_initialize2_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  (arg1)->initialize2();
  
}


bool _wrap_btConvexPolyhedron_testContainment_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  
  result = (bool)((btConvexPolyhedron const *)arg1)->testContainment();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexPolyhedron_project_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConvexPolyhedron *arg1 = (btConvexPolyhedron *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  ((btConvexPolyhedron const *)arg1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


bool _wrap_IsAlmostZero1_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (bool)IsAlmostZero1((btVector3 const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


btInternalVertexPair *_wrap_new_btInternalVertexPair_bt_e001408c92acdfd7(short _swig_go_0, short _swig_go_1) {
  short arg1 ;
  short arg2 ;
  btInternalVertexPair *result = 0 ;
  btInternalVertexPair *_swig_go_result;
  
  arg1 = (short)_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  result = (btInternalVertexPair *)new btInternalVertexPair(arg1,arg2);
  *(btInternalVertexPair **)&_swig_go_result = (btInternalVertexPair *)result; 
  return _swig_go_result;
}


void _wrap_btInternalVertexPair_m_v0_set_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0, short _swig_go_1) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  short arg2 ;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->m_v0 = arg2;
  
}


short _wrap_btInternalVertexPair_m_v0_get_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  
  result = (short) ((arg1)->m_v0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btInternalVertexPair_m_v1_set_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0, short _swig_go_1) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  short arg2 ;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->m_v1 = arg2;
  
}


short _wrap_btInternalVertexPair_m_v1_get_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  
  result = (short) ((arg1)->m_v1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btInternalVertexPair_getHash_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  
  result = (int)((btInternalVertexPair const *)arg1)->getHash();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btInternalVertexPair_equals_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0, btInternalVertexPair *_swig_go_1) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  btInternalVertexPair *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  arg2 = *(btInternalVertexPair **)&_swig_go_1; 
  
  result = (bool)((btInternalVertexPair const *)arg1)->equals((btInternalVertexPair const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btInternalVertexPair_bt_e001408c92acdfd7(btInternalVertexPair *_swig_go_0) {
  btInternalVertexPair *arg1 = (btInternalVertexPair *) 0 ;
  
  arg1 = *(btInternalVertexPair **)&_swig_go_0; 
  
  delete arg1;
  
}


btInternalEdge *_wrap_new_btInternalEdge_bt_e001408c92acdfd7() {
  btInternalEdge *result = 0 ;
  btInternalEdge *_swig_go_result;
  
  
  result = (btInternalEdge *)new btInternalEdge();
  *(btInternalEdge **)&_swig_go_result = (btInternalEdge *)result; 
  return _swig_go_result;
}


void _wrap_btInternalEdge_m_face0_set_bt_e001408c92acdfd7(btInternalEdge *_swig_go_0, short _swig_go_1) {
  btInternalEdge *arg1 = (btInternalEdge *) 0 ;
  short arg2 ;
  
  arg1 = *(btInternalEdge **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->m_face0 = arg2;
  
}


short _wrap_btInternalEdge_m_face0_get_bt_e001408c92acdfd7(btInternalEdge *_swig_go_0) {
  btInternalEdge *arg1 = (btInternalEdge *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(btInternalEdge **)&_swig_go_0; 
  
  result = (short) ((arg1)->m_face0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btInternalEdge_m_face1_set_bt_e001408c92acdfd7(btInternalEdge *_swig_go_0, short _swig_go_1) {
  btInternalEdge *arg1 = (btInternalEdge *) 0 ;
  short arg2 ;
  
  arg1 = *(btInternalEdge **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->m_face1 = arg2;
  
}


short _wrap_btInternalEdge_m_face1_get_bt_e001408c92acdfd7(btInternalEdge *_swig_go_0) {
  btInternalEdge *arg1 = (btInternalEdge *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(btInternalEdge **)&_swig_go_0; 
  
  result = (short) ((arg1)->m_face1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btInternalEdge_bt_e001408c92acdfd7(btInternalEdge *_swig_go_0) {
  btInternalEdge *arg1 = (btInternalEdge *) 0 ;
  
  arg1 = *(btInternalEdge **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexHullComputer_vertices_set_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = (btAlignedObjectArray< btVector3 > *) 0 ;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->vertices = *arg2;
  
}


btAlignedObjectArray< btVector3 > *_wrap_btConvexHullComputer_vertices_get_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< btVector3 > *result = 0 ;
  btAlignedObjectArray< btVector3 > *_swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btVector3 > *)& ((arg1)->vertices);
  *(btAlignedObjectArray< btVector3 > **)&_swig_go_result = (btAlignedObjectArray< btVector3 > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexHullComputer_original_vertex_index_set_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, btAlignedObjectArray< int > *_swig_go_1) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< int > *arg2 = (btAlignedObjectArray< int > *) 0 ;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< int > **)&_swig_go_1; 
  
  if (arg1) (arg1)->original_vertex_index = *arg2;
  
}


btAlignedObjectArray< int > *_wrap_btConvexHullComputer_original_vertex_index_get_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< int > *result = 0 ;
  btAlignedObjectArray< int > *_swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< int > *)& ((arg1)->original_vertex_index);
  *(btAlignedObjectArray< int > **)&_swig_go_result = (btAlignedObjectArray< int > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexHullComputer_edges_set_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, btAlignedObjectArray< btConvexHullComputer::Edge > *_swig_go_1) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< btConvexHullComputer::Edge > *arg2 = (btAlignedObjectArray< btConvexHullComputer::Edge > *) 0 ;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btConvexHullComputer::Edge > **)&_swig_go_1; 
  
  if (arg1) (arg1)->edges = *arg2;
  
}


btAlignedObjectArray< btConvexHullComputer::Edge > *_wrap_btConvexHullComputer_edges_get_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< btConvexHullComputer::Edge > *result = 0 ;
  btAlignedObjectArray< btConvexHullComputer::Edge > *_swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btConvexHullComputer::Edge > *)& ((arg1)->edges);
  *(btAlignedObjectArray< btConvexHullComputer::Edge > **)&_swig_go_result = (btAlignedObjectArray< btConvexHullComputer::Edge > *)result; 
  return _swig_go_result;
}


void _wrap_btConvexHullComputer_faces_set_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, btAlignedObjectArray< int > *_swig_go_1) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< int > *arg2 = (btAlignedObjectArray< int > *) 0 ;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< int > **)&_swig_go_1; 
  
  if (arg1) (arg1)->faces = *arg2;
  
}


btAlignedObjectArray< int > *_wrap_btConvexHullComputer_faces_get_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  btAlignedObjectArray< int > *result = 0 ;
  btAlignedObjectArray< int > *_swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< int > *)& ((arg1)->faces);
  *(btAlignedObjectArray< int > **)&_swig_go_result = (btAlignedObjectArray< int > *)result; 
  return _swig_go_result;
}


float _wrap_btConvexHullComputer_compute__SWIG_0_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4, float _swig_go_5) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  result = (btScalar)(arg1)->compute((float const *)arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConvexHullComputer_compute__SWIG_1_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0, double *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4, float _swig_go_5) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  double *arg2 = (double *) 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  result = (btScalar)(arg1)->compute((double const *)arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


btConvexHullComputer *_wrap_new_btConvexHullComputer_bt_e001408c92acdfd7() {
  btConvexHullComputer *result = 0 ;
  btConvexHullComputer *_swig_go_result;
  
  
  result = (btConvexHullComputer *)new btConvexHullComputer();
  *(btConvexHullComputer **)&_swig_go_result = (btConvexHullComputer *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexHullComputer_bt_e001408c92acdfd7(btConvexHullComputer *_swig_go_0) {
  btConvexHullComputer *arg1 = (btConvexHullComputer *) 0 ;
  
  arg1 = *(btConvexHullComputer **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexHullInternal_vertexList_set_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0, btConvexHullInternal::Vertex *_swig_go_1) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  btConvexHullInternal::Vertex *arg2 = (btConvexHullInternal::Vertex *) 0 ;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  arg2 = *(btConvexHullInternal::Vertex **)&_swig_go_1; 
  
  if (arg1) (arg1)->vertexList = arg2;
  
}


btConvexHullInternal::Vertex *_wrap_btConvexHullInternal_vertexList_get_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  btConvexHullInternal::Vertex *result = 0 ;
  btConvexHullInternal::Vertex *_swig_go_result;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  
  result = (btConvexHullInternal::Vertex *) ((arg1)->vertexList);
  *(btConvexHullInternal::Vertex **)&_swig_go_result = (btConvexHullInternal::Vertex *)result; 
  return _swig_go_result;
}


void _wrap_btConvexHullInternal_compute_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0, void *_swig_go_1, bool _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  void *arg2 = (void *) 0 ;
  bool arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->compute((void const *)arg2,arg3,arg4,arg5);
  
}


btVector3 *_wrap_btConvexHullInternal_getCoordinates_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0, btConvexHullInternal::Vertex *_swig_go_1) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  btConvexHullInternal::Vertex *arg2 = (btConvexHullInternal::Vertex *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  arg2 = *(btConvexHullInternal::Vertex **)&_swig_go_1; 
  
  result = (arg1)->getCoordinates((btConvexHullInternal::Vertex const *)arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btConvexHullInternal_shrink_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (btScalar)(arg1)->shrink(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btConvexHullInternal *_wrap_new_btConvexHullInternal_bt_e001408c92acdfd7() {
  btConvexHullInternal *result = 0 ;
  btConvexHullInternal *_swig_go_result;
  
  
  result = (btConvexHullInternal *)new btConvexHullInternal();
  *(btConvexHullInternal **)&_swig_go_result = (btConvexHullInternal *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexHullInternal_bt_e001408c92acdfd7(btConvexHullInternal *_swig_go_0) {
  btConvexHullInternal *arg1 = (btConvexHullInternal *) 0 ;
  
  arg1 = *(btConvexHullInternal **)&_swig_go_0; 
  
  delete arg1;
  
}


pointCmp *_wrap_new_pointCmp_bt_e001408c92acdfd7() {
  pointCmp *result = 0 ;
  pointCmp *_swig_go_result;
  
  
  result = (pointCmp *)new pointCmp();
  *(pointCmp **)&_swig_go_result = (pointCmp *)result; 
  return _swig_go_result;
}


void _wrap_delete_pointCmp_bt_e001408c92acdfd7(pointCmp *_swig_go_0) {
  pointCmp *arg1 = (pointCmp *) 0 ;
  
  arg1 = *(pointCmp **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_getVertexCopy_bt_e001408c92acdfd7(btConvexHullInternal::Vertex *_swig_go_0, btAlignedObjectArray< btConvexHullInternal::Vertex * > *_swig_go_1) {
  btConvexHullInternal::Vertex *arg1 = (btConvexHullInternal::Vertex *) 0 ;
  btAlignedObjectArray< btConvexHullInternal::Vertex * > *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexHullInternal::Vertex **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btConvexHullInternal::Vertex * > **)&_swig_go_1; 
  
  result = (int)getVertexCopy(arg1,*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeometryUtil_getPlaneEquationsFromVertices_bt_e001408c92acdfd7(btAlignedObjectArray< btVector3 > *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btAlignedObjectArray< btVector3 > *arg1 = 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = 0 ;
  
  arg1 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  btGeometryUtil::getPlaneEquationsFromVertices(*arg1,*arg2);
  
}


void _wrap_btGeometryUtil_getVerticesFromPlaneEquations_bt_e001408c92acdfd7(btAlignedObjectArray< btVector3 > *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btAlignedObjectArray< btVector3 > *arg1 = 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = 0 ;
  
  arg1 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  btGeometryUtil::getVerticesFromPlaneEquations((btAlignedObjectArray< btVector3 > const &)*arg1,*arg2);
  
}


bool _wrap_btGeometryUtil_isPointInsidePlanes_bt_e001408c92acdfd7(btAlignedObjectArray< btVector3 > *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btAlignedObjectArray< btVector3 > *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (bool)btGeometryUtil::isPointInsidePlanes((btAlignedObjectArray< btVector3 > const &)*arg1,(btVector3 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGeometryUtil_areVerticesBehindPlane_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1, float _swig_go_2) {
  btVector3 *arg1 = 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = 0 ;
  btScalar arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (bool)btGeometryUtil::areVerticesBehindPlane((btVector3 const &)*arg1,(btAlignedObjectArray< btVector3 > const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGeometryUtil *_wrap_new_btGeometryUtil_bt_e001408c92acdfd7() {
  btGeometryUtil *result = 0 ;
  btGeometryUtil *_swig_go_result;
  
  
  result = (btGeometryUtil *)new btGeometryUtil();
  *(btGeometryUtil **)&_swig_go_result = (btGeometryUtil *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGeometryUtil_bt_e001408c92acdfd7(btGeometryUtil *_swig_go_0) {
  btGeometryUtil *arg1 = (btGeometryUtil *) 0 ;
  
  arg1 = *(btGeometryUtil **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBulletMathProbe_bt_e001408c92acdfd7() {
  btBulletMathProbe();
  
}


bool _wrap_notExist_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btAlignedObjectArray< btVector3 > *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btVector3 > **)&_swig_go_1; 
  
  result = (bool)notExist((btVector3 const &)*arg1,(btAlignedObjectArray< btVector3 > const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


GrahamVector3 *_wrap_new_GrahamVector3_bt_e001408c92acdfd7(btVector3 *_swig_go_0, intgo _swig_go_1) {
  btVector3 *arg1 = 0 ;
  int arg2 ;
  GrahamVector3 *result = 0 ;
  GrahamVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (GrahamVector3 *)new GrahamVector3((btVector3 const &)*arg1,arg2);
  *(GrahamVector3 **)&_swig_go_result = (GrahamVector3 *)result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_m_angle_set_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_angle = arg2;
  
}


float _wrap_GrahamVector3_m_angle_get_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_m_orgIndex_set_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, intgo _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_orgIndex = arg2;
  
}


intgo _wrap_GrahamVector3_m_orgIndex_get_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_orgIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_GrahamVector3_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetGrahamVector3_M_floats_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ;
  
}


float *_wrap_GetGrahamVector3_M_floats_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *)(btScalar *) ((swig_b0)->m_floats);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_dot_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->dot((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_length2_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->length2();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_length_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->length();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_norm_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->norm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_safeNorm_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->safeNorm();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_distance2_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->distance2((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_distance_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->distance((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_safeNormalize_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btVector3 *) &(swig_b0)->safeNormalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_normalize_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btVector3 *) &(swig_b0)->normalize();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_normalized_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->normalized();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_rotate_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->rotate((btVector3 const &)*arg2,arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_GrahamVector3_angle_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->angle((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_absolute_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->absolute();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_cross_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->cross((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_GrahamVector3_triple_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar)((btVector3 const *)swig_b0)->triple((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GrahamVector3_minAxis_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->minAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GrahamVector3_maxAxis_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->maxAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GrahamVector3_furthestAxis_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->furthestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GrahamVector3_closestAxis_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (int)((btVector3 const *)swig_b0)->closestAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_setInterpolate3_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setInterpolate3((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_GrahamVector3_lerp_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->lerp((btVector3 const &)*arg2,(btScalar const &)*arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_GrahamVector3_getX_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getX();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_getY_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getY();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_getZ_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->getZ();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_setX_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setX(arg2);
  
}


void _wrap_GrahamVector3_setY_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setY(arg2);
  
}


void _wrap_GrahamVector3_setZ_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setZ(arg2);
  
}


void _wrap_GrahamVector3_setW_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setW(arg2);
  
}


float _wrap_GrahamVector3_x_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->x();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_y_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->y();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_z_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->z();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


float _wrap_GrahamVector3_w_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (btScalar *) &((btVector3 const *)swig_b0)->w();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_setMax_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setMax((btVector3 const &)*arg2);
  
}


void _wrap_GrahamVector3_setMin_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setMin((btVector3 const &)*arg2);
  
}


void _wrap_GrahamVector3_setValue_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btScalar *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = (btScalar *)&_swig_go_1; 
  arg3 = (btScalar *)&_swig_go_2; 
  arg4 = (btScalar *)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setValue((btScalar const &)*arg2,(btScalar const &)*arg3,(btScalar const &)*arg4);
  
}


void _wrap_GrahamVector3_getSkewSymmetricMatrix_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  btVector3 *arg4 = (btVector3 *) 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->getSkewSymmetricMatrix(arg2,arg3,arg4);
  
}


void _wrap_GrahamVector3_setZero_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->setZero();
  
}


bool _wrap_GrahamVector3_isZero_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (bool)((btVector3 const *)swig_b0)->isZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_GrahamVector3_fuzzyZero_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (bool)((btVector3 const *)swig_b0)->fuzzyZero();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GrahamVector3_serialize_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serialize(*arg2);
  
}


void _wrap_GrahamVector3_deSerialize__SWIG_0_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerialize((btVector3DoubleData const &)*arg2);
  
}


void _wrap_GrahamVector3_deSerialize__SWIG_1_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerialize((btVector3FloatData const &)*arg2);
  
}


void _wrap_GrahamVector3_serializeFloat_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serializeFloat(*arg2);
  
}


void _wrap_GrahamVector3_deSerializeFloat_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3FloatData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3FloatData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerializeFloat((btVector3FloatData const &)*arg2);
  
}


void _wrap_GrahamVector3_serializeDouble_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  ((btVector3 const *)swig_b0)->serializeDouble(*arg2);
  
}


void _wrap_GrahamVector3_deSerializeDouble_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3DoubleData *arg2 = 0 ;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  (swig_b0)->deSerializeDouble((btVector3DoubleData const &)*arg2);
  
}


long long _wrap_GrahamVector3_maxDot_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (long)((btVector3 const *)swig_b0)->maxDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_GrahamVector3_minDot_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, long long _swig_go_2, float *_swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  long arg3 ;
  btScalar *arg4 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = (long)((btVector3 const *)swig_b0)->minDot((btVector3 const *)arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_GrahamVector3_dot3_bt_e001408c92acdfd7(GrahamVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  GrahamVector3 *arg1 = (GrahamVector3 *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(GrahamVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btVector3 *swig_b0 = (btVector3 *)arg1;
  result = ((btVector3 const *)swig_b0)->dot3((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btAngleCompareFunc_m_anchor_set_bt_e001408c92acdfd7(btAngleCompareFunc *_swig_go_0, btVector3 *_swig_go_1) {
  btAngleCompareFunc *arg1 = (btAngleCompareFunc *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btAngleCompareFunc **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_anchor = *arg2;
  
}


btVector3 *_wrap_btAngleCompareFunc_m_anchor_get_bt_e001408c92acdfd7(btAngleCompareFunc *_swig_go_0) {
  btAngleCompareFunc *arg1 = (btAngleCompareFunc *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btAngleCompareFunc **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_anchor);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


btAngleCompareFunc *_wrap_new_btAngleCompareFunc_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = 0 ;
  btAngleCompareFunc *result = 0 ;
  btAngleCompareFunc *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btAngleCompareFunc *)new btAngleCompareFunc((btVector3 const &)*arg1);
  *(btAngleCompareFunc **)&_swig_go_result = (btAngleCompareFunc *)result; 
  return _swig_go_result;
}


void _wrap_delete_btAngleCompareFunc_bt_e001408c92acdfd7(btAngleCompareFunc *_swig_go_0) {
  btAngleCompareFunc *arg1 = (btAngleCompareFunc *) 0 ;
  
  arg1 = *(btAngleCompareFunc **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_GrahamScanConvexHull2D_bt_e001408c92acdfd7(btAlignedObjectArray< GrahamVector3 > *_swig_go_0, btAlignedObjectArray< GrahamVector3 > *_swig_go_1, btVector3 *_swig_go_2) {
  btAlignedObjectArray< GrahamVector3 > *arg1 = 0 ;
  btAlignedObjectArray< GrahamVector3 > *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btAlignedObjectArray< GrahamVector3 > **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< GrahamVector3 > **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  GrahamScanConvexHull2D(*arg1,*arg2,(btVector3 const &)*arg3);
  
}


btVector3 *_wrap_btBoxShape_getHalfExtentsWithMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = ((btBoxShape const *)arg1)->getHalfExtentsWithMargin();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_getHalfExtentsWithoutMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btBoxShape const *)arg1)->getHalfExtentsWithoutMargin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_localGetSupportingVertex_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btBoxShape const *)arg1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btBoxShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btBoxShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btBoxShape const *)arg1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


btBoxShape *_wrap_new_btBoxShape_bt_e001408c92acdfd7(btVector3 *_swig_go_0) {
  btVector3 *arg1 = 0 ;
  btBoxShape *result = 0 ;
  btBoxShape *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  
  result = (btBoxShape *)new btBoxShape((btVector3 const &)*arg1);
  *(btBoxShape **)&_swig_go_result = (btBoxShape *)result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_setMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, float _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


void _wrap_btBoxShape_setLocalScaling_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


void _wrap_btBoxShape_getAabb_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btBoxShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btBoxShape_calculateLocalInertia_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btBoxShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


void _wrap_btBoxShape_getPlane_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btBoxShape const *)arg1)->getPlane(*arg2,*arg3,arg4);
  
}


intgo _wrap_btBoxShape_getNumPlanes_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (int)((btBoxShape const *)arg1)->getNumPlanes();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btBoxShape_getNumVertices_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (int)((btBoxShape const *)arg1)->getNumVertices();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btBoxShape_getNumEdges_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (int)((btBoxShape const *)arg1)->getNumEdges();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_getVertex_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btBoxShape const *)arg1)->getVertex(arg2,*arg3);
  
}


void _wrap_btBoxShape_getPlaneEquation_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector4 *_swig_go_1, intgo _swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector4 *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector4 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((btBoxShape const *)arg1)->getPlaneEquation(*arg2,arg3);
  
}


void _wrap_btBoxShape_getEdge_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btBoxShape const *)arg1)->getEdge(arg2,*arg3,*arg4);
  
}


bool _wrap_btBoxShape_isInside_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (bool)((btBoxShape const *)arg1)->isInside((btVector3 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btBoxShape_getName_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (char *)((btBoxShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btBoxShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  result = (int)((btBoxShape const *)arg1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btBoxShape const *)arg1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


void _wrap_delete_btBoxShape_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btBoxShape_initializePolyhedralFeatures__SWIG_0_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (bool)(swig_b0)->initializePolyhedralFeatures(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_initializePolyhedralFeatures__SWIG_1_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (bool)(swig_b0)->initializePolyhedralFeatures();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_setPolyhedralFeatures_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btConvexPolyhedron *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  (swig_b0)->setPolyhedralFeatures(*arg2);
  
}


btConvexPolyhedron *_wrap_btBoxShape_getConvexPolyhedron_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btConvexPolyhedron *result = 0 ;
  btConvexPolyhedron *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  result = (btConvexPolyhedron *)((btPolyhedralConvexShape const *)swig_b0)->getConvexPolyhedron();
  *(btConvexPolyhedron **)&_swig_go_result = (btConvexPolyhedron *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btBoxShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btBoxShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, float _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2);
  
}


void _wrap_btBoxShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btBoxShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btBoxShape_getAabbSlow_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btBoxShape_getLocalScaling_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_getLocalScalingNV_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBoxShape_getMargin_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBoxShape_getMarginNV_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btBoxShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (int)((btConvexInternalShape const *)swig_b1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btBoxShape_serialize_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (char *)((btConvexInternalShape const *)swig_b1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btBoxShape_getMarginNonVirtual_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = (btScalar)((btConvexShape const *)swig_b2)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_getAabbNonVirtual_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btBoxShape_project_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btBoxShape_getBoundingSphere_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btBoxShape_getAngularMotionDisc_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBoxShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, float _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_calculateTemporalAabb_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btBoxShape_isPolyhedral_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isConvex2d_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isConvex_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isNonMoving_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isConcave_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isCompound_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isSoftBody_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBoxShape_isInfinite_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btBoxShape_getShapeType_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBoxShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = ((btCollisionShape const *)swig_b3)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btBoxShape_setUserPointer_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, void *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserPointer(arg2);
  
}


void *_wrap_btBoxShape_getUserPointer_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (void *)((btCollisionShape const *)swig_b3)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_setUserIndex_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex(arg2);
  
}


intgo _wrap_btBoxShape_getUserIndex_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_setUserIndex2_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, intgo _swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex2(arg2);
  
}


intgo _wrap_btBoxShape_getUserIndex2_bt_e001408c92acdfd7(btBoxShape *_swig_go_0) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBoxShape_serializeSingleShape_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btSerializer *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btPolyhedralConvexShape *swig_b0 = (btPolyhedralConvexShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->serializeSingleShape(arg2);
  
}


btCapsuleShape *_wrap_new_btCapsuleShape__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btCapsuleShape *result = 0 ;
  btCapsuleShape *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btCapsuleShape *)new btCapsuleShape(arg1,arg2);
  *(btCapsuleShape **)&_swig_go_result = (btCapsuleShape *)result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_calculateLocalInertia_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btCapsuleShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btCapsuleShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btCapsuleShape const *)arg1)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btCapsuleShape_setMargin_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, float _swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


void _wrap_btCapsuleShape_getAabb_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btCapsuleShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


_gostring_ _wrap_btCapsuleShape_getName_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = (char *)((btCapsuleShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShape_getUpAxis_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = (int)((btCapsuleShape const *)arg1)->getUpAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getRadius_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = (btScalar)((btCapsuleShape const *)arg1)->getRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getHalfHeight_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = (btScalar)((btCapsuleShape const *)arg1)->getHalfHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_setLocalScaling_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btCapsuleShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = ((btCapsuleShape const *)arg1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  result = (int)((btCapsuleShape const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCapsuleShape_serialize_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btCapsuleShape const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_deSerializeFloat_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btCapsuleShapeData *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btCapsuleShapeData *arg2 = (btCapsuleShapeData *) 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btCapsuleShapeData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat(arg2);
  
}


void _wrap_delete_btCapsuleShape_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btCapsuleShape_localGetSupportingVertex_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = ((btConvexInternalShape const *)swig_b0)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShape_getImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_setImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShape_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btCapsuleShape_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, float _swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin(arg2);
  
}


void _wrap_btCapsuleShape_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btCapsuleShape_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  (swig_b0)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShape_getAabbSlow_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btCapsuleShape_getLocalScaling_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShape_getLocalScalingNV_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b0)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getMargin_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getMarginNV_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (btScalar)((btConvexInternalShape const *)swig_b0)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShape_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  result = (int)((btConvexInternalShape const *)swig_b0)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  ((btConvexInternalShape const *)swig_b0)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShape_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShape_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = ((btConvexShape const *)swig_b1)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  result = (btScalar)((btConvexShape const *)swig_b1)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_getAabbNonVirtual_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btCapsuleShape_project_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  ((btConvexShape const *)swig_b1)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btCapsuleShape_getBoundingSphere_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btCapsuleShape_getAngularMotionDisc_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, float _swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_calculateTemporalAabb_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btCapsuleShape_isPolyhedral_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isConvex2d_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isConvex_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isNonMoving_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isConcave_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isCompound_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isSoftBody_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShape_isInfinite_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShape_getShapeType_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_setUserPointer_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, void *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserPointer(arg2);
  
}


void *_wrap_btCapsuleShape_getUserPointer_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (void *)((btCollisionShape const *)swig_b2)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_setUserIndex_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex(arg2);
  
}


intgo _wrap_btCapsuleShape_getUserIndex_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_setUserIndex2_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex2(arg2);
  
}


intgo _wrap_btCapsuleShape_getUserIndex2_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShape_serializeSingleShape_bt_e001408c92acdfd7(btCapsuleShape *_swig_go_0, btSerializer *_swig_go_1) {
  btCapsuleShape *arg1 = (btCapsuleShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCapsuleShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConvexInternalShape *swig_b0 = (btConvexInternalShape *)arg1;
  btConvexShape *swig_b1 = (btConvexShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->serializeSingleShape(arg2);
  
}


btCapsuleShapeX *_wrap_new_btCapsuleShapeX_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btCapsuleShapeX *result = 0 ;
  btCapsuleShapeX *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btCapsuleShapeX *)new btCapsuleShapeX(arg1,arg2);
  *(btCapsuleShapeX **)&_swig_go_result = (btCapsuleShapeX *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCapsuleShapeX_getName_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  result = (char *)((btCapsuleShapeX const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_btCapsuleShapeX_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCapsuleShapeX_calculateLocalInertia_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShapeX_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = ((btCapsuleShape const *)swig_b0)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btCapsuleShapeX_setMargin_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


void _wrap_btCapsuleShapeX_getAabb_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


intgo _wrap_btCapsuleShapeX_getUpAxis_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (int)((btCapsuleShape const *)swig_b0)->getUpAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getRadius_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (btScalar)((btCapsuleShape const *)swig_b0)->getRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getHalfHeight_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (btScalar)((btCapsuleShape const *)swig_b0)->getHalfHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_setLocalScaling_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btCapsuleShapeX_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = ((btCapsuleShape const *)swig_b0)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeX_calculateSerializeBufferSize_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (int)((btCapsuleShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCapsuleShapeX_serialize_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (char *)((btCapsuleShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_deSerializeFloat_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btCapsuleShapeData *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btCapsuleShapeData *arg2 = (btCapsuleShapeData *) 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btCapsuleShapeData **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->deSerializeFloat(arg2);
  
}


btVector3 *_wrap_btCapsuleShapeX_localGetSupportingVertex_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = ((btConvexInternalShape const *)swig_b1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeX_getImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_setImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShapeX_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btCapsuleShapeX_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2);
  
}


void _wrap_btCapsuleShapeX_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btCapsuleShapeX_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShapeX_getAabbSlow_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btCapsuleShapeX_getLocalScaling_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeX_getLocalScalingNV_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getMargin_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getMarginNV_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeX_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (int)((btConvexInternalShape const *)swig_b1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShapeX_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeX_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = (btScalar)((btConvexShape const *)swig_b2)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_getAabbNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btCapsuleShapeX_project_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btCapsuleShapeX_getBoundingSphere_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btCapsuleShapeX_getAngularMotionDisc_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeX_getContactBreakingThreshold_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_calculateTemporalAabb_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btCapsuleShapeX_isPolyhedral_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isConvex2d_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isConvex_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isNonMoving_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isConcave_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isCompound_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isSoftBody_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeX_isInfinite_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeX_getShapeType_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_setUserPointer_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, void *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserPointer(arg2);
  
}


void *_wrap_btCapsuleShapeX_getUserPointer_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (void *)((btCollisionShape const *)swig_b3)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_setUserIndex_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex(arg2);
  
}


intgo _wrap_btCapsuleShapeX_getUserIndex_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_setUserIndex2_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex2(arg2);
  
}


intgo _wrap_btCapsuleShapeX_getUserIndex2_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeX_serializeSingleShape_bt_e001408c92acdfd7(btCapsuleShapeX *_swig_go_0, btSerializer *_swig_go_1) {
  btCapsuleShapeX *arg1 = (btCapsuleShapeX *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCapsuleShapeX **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->serializeSingleShape(arg2);
  
}


btCapsuleShapeZ *_wrap_new_btCapsuleShapeZ_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btCapsuleShapeZ *result = 0 ;
  btCapsuleShapeZ *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btCapsuleShapeZ *)new btCapsuleShapeZ(arg1,arg2);
  *(btCapsuleShapeZ **)&_swig_go_result = (btCapsuleShapeZ *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCapsuleShapeZ_getName_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  result = (char *)((btCapsuleShapeZ const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_btCapsuleShapeZ_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCapsuleShapeZ_calculateLocalInertia_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShapeZ_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = ((btCapsuleShape const *)swig_b0)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  int arg4 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->batchedUnitVectorGetSupportingVertexWithoutMargin((btVector3 const *)arg2,arg3,arg4);
  
}


void _wrap_btCapsuleShapeZ_setMargin_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


void _wrap_btCapsuleShapeZ_getAabb_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  ((btCapsuleShape const *)swig_b0)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


intgo _wrap_btCapsuleShapeZ_getUpAxis_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (int)((btCapsuleShape const *)swig_b0)->getUpAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getRadius_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (btScalar)((btCapsuleShape const *)swig_b0)->getRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getHalfHeight_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (btScalar)((btCapsuleShape const *)swig_b0)->getHalfHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_setLocalScaling_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btCapsuleShapeZ_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = ((btCapsuleShape const *)swig_b0)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeZ_calculateSerializeBufferSize_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (int)((btCapsuleShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCapsuleShapeZ_serialize_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  result = (char *)((btCapsuleShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_deSerializeFloat_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btCapsuleShapeData *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btCapsuleShapeData *arg2 = (btCapsuleShapeData *) 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btCapsuleShapeData **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  (swig_b0)->deSerializeFloat(arg2);
  
}


btVector3 *_wrap_btCapsuleShapeZ_localGetSupportingVertex_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = ((btConvexInternalShape const *)swig_b1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeZ_getImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getImplicitShapeDimensions();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_setImplicitShapeDimensions_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setImplicitShapeDimensions((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShapeZ_setSafeMargin__SWIG_0_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2,arg3);
  
}


void _wrap_btCapsuleShapeZ_setSafeMargin__SWIG_1_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin(arg2);
  
}


void _wrap_btCapsuleShapeZ_setSafeMargin__SWIG_2_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btCapsuleShapeZ_setSafeMargin__SWIG_3_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  (swig_b1)->setSafeMargin((btVector3 const &)*arg2);
  
}


void _wrap_btCapsuleShapeZ_getAabbSlow_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getAabbSlow((btTransform const &)*arg2,*arg3,*arg4);
  
}


btVector3 *_wrap_btCapsuleShapeZ_getLocalScaling_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeZ_getLocalScalingNV_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btVector3 *) &((btConvexInternalShape const *)swig_b1)->getLocalScalingNV();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getMargin_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getMarginNV_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (btScalar)((btConvexInternalShape const *)swig_b1)->getMarginNV();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeZ_getNumPreferredPenetrationDirections_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  result = (int)((btConvexInternalShape const *)swig_b1)->getNumPreferredPenetrationDirections();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_getPreferredPenetrationDirection_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  ((btConvexInternalShape const *)swig_b1)->getPreferredPenetrationDirection(arg2,*arg3);
  
}


btVector3 *_wrap_btCapsuleShapeZ_localGetSupportVertexWithoutMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexWithoutMarginNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btCapsuleShapeZ_localGetSupportVertexNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = ((btConvexShape const *)swig_b2)->localGetSupportVertexNonVirtual((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getMarginNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  result = (btScalar)((btConvexShape const *)swig_b2)->getMarginNonVirtual();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_getAabbNonVirtual_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->getAabbNonVirtual((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btCapsuleShapeZ_project_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  ((btConvexShape const *)swig_b2)->project((btTransform const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5,*arg6,*arg7);
  
}


void _wrap_btCapsuleShapeZ_getBoundingSphere_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btCapsuleShapeZ_getAngularMotionDisc_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCapsuleShapeZ_getContactBreakingThreshold_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, float _swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (btScalar)((btCollisionShape const *)swig_b3)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_calculateTemporalAabb_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btCapsuleShapeZ_isPolyhedral_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isConvex2d_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isConvex_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isNonMoving_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isConcave_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isCompound_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isSoftBody_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCapsuleShapeZ_isInfinite_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (bool)((btCollisionShape const *)swig_b3)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCapsuleShapeZ_getShapeType_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_setUserPointer_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, void *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserPointer(arg2);
  
}


void *_wrap_btCapsuleShapeZ_getUserPointer_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (void *)((btCollisionShape const *)swig_b3)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_setUserIndex_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex(arg2);
  
}


intgo _wrap_btCapsuleShapeZ_getUserIndex_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_setUserIndex2_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  (swig_b3)->setUserIndex2(arg2);
  
}


intgo _wrap_btCapsuleShapeZ_getUserIndex2_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  result = (int)((btCollisionShape const *)swig_b3)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeZ_serializeSingleShape_bt_e001408c92acdfd7(btCapsuleShapeZ *_swig_go_0, btSerializer *_swig_go_1) {
  btCapsuleShapeZ *arg1 = (btCapsuleShapeZ *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCapsuleShapeZ **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btCapsuleShape *swig_b0 = (btCapsuleShape *)arg1;
  btConvexInternalShape *swig_b1 = (btConvexInternalShape *)swig_b0;
  btConvexShape *swig_b2 = (btConvexShape *)swig_b1;
  btCollisionShape *swig_b3 = (btCollisionShape *)swig_b2;
  ((btCollisionShape const *)swig_b3)->serializeSingleShape(arg2);
  
}


void _wrap_btCapsuleShapeData_m_convexInternalShapeData_set_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0, btConvexInternalShapeData *_swig_go_1) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  btConvexInternalShapeData *arg2 = (btConvexInternalShapeData *) 0 ;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  arg2 = *(btConvexInternalShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexInternalShapeData = *arg2;
  
}


btConvexInternalShapeData *_wrap_btCapsuleShapeData_m_convexInternalShapeData_get_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  btConvexInternalShapeData *result = 0 ;
  btConvexInternalShapeData *_swig_go_result;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  
  result = (btConvexInternalShapeData *)& ((arg1)->m_convexInternalShapeData);
  *(btConvexInternalShapeData **)&_swig_go_result = (btConvexInternalShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeData_m_upAxis_set_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0, intgo _swig_go_1) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_upAxis = arg2;
  
}


intgo _wrap_btCapsuleShapeData_m_upAxis_get_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_upAxis);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCapsuleShapeData_m_padding_set_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0, _gostring_ _swig_go_1) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btCapsuleShapeData_m_padding_get_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btCapsuleShapeData *_wrap_new_btCapsuleShapeData_bt_e001408c92acdfd7() {
  btCapsuleShapeData *result = 0 ;
  btCapsuleShapeData *_swig_go_result;
  
  
  result = (btCapsuleShapeData *)new btCapsuleShapeData();
  *(btCapsuleShapeData **)&_swig_go_result = (btCapsuleShapeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCapsuleShapeData_bt_e001408c92acdfd7(btCapsuleShapeData *_swig_go_0) {
  btCapsuleShapeData *arg1 = (btCapsuleShapeData *) 0 ;
  
  arg1 = *(btCapsuleShapeData **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_CF_DYNAMIC_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_DYNAMIC_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_STATIC_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_STATIC_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_KINEMATIC_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_KINEMATIC_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_NO_CONTACT_RESPONSE_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_NO_CONTACT_RESPONSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_CUSTOM_MATERIAL_CALLBACK_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_CUSTOM_MATERIAL_CALLBACK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_CHARACTER_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_CHARACTER_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_DISABLE_VISUALIZE_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_DISABLE_VISUALIZE_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_DISABLE_SPU_COLLISION_PROCESSING_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_DISABLE_SPU_COLLISION_PROCESSING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_HAS_CONTACT_STIFFNESS_DAMPING_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_HAS_CONTACT_STIFFNESS_DAMPING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_HAS_FRICTION_ANCHOR_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_HAS_FRICTION_ANCHOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_HAS_COLLISION_SOUND_TRIGGER_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_HAS_COLLISION_SOUND_TRIGGER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_COLLISION_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_COLLISION_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_RIGID_BODY_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_RIGID_BODY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_GHOST_OBJECT_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_GHOST_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_SOFT_BODY_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_SOFT_BODY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_HF_FLUID_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_HF_FLUID;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_USER_TYPE_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_USER_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CO_FEATHERSTONE_LINK_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::CollisionObjectTypes result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CO_FEATHERSTONE_LINK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_ANISOTROPIC_FRICTION_DISABLED_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::AnisotropicFrictionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_ANISOTROPIC_FRICTION_DISABLED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_ANISOTROPIC_FRICTION_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::AnisotropicFrictionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_ANISOTROPIC_FRICTION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CF_ANISOTROPIC_ROLLING_FRICTION_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject::AnisotropicFrictionFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionObject::CF_ANISOTROPIC_ROLLING_FRICTION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_mergesSimulationIslands_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->mergesSimulationIslands();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCollisionObject_getAnisotropicFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btVector3 *) &((btCollisionObject const *)arg1)->getAnisotropicFriction();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setAnisotropicFriction__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setAnisotropicFriction((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btCollisionObject_setAnisotropicFriction__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setAnisotropicFriction((btVector3 const &)*arg2);
  
}


bool _wrap_btCollisionObject_hasAnisotropicFriction__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btCollisionObject const *)arg1)->hasAnisotropicFriction(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_hasAnisotropicFriction__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->hasAnisotropicFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setContactProcessingThreshold_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setContactProcessingThreshold(arg2);
  
}


float _wrap_btCollisionObject_getContactProcessingThreshold_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getContactProcessingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_isStaticObject_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->isStaticObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_isKinematicObject_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->isKinematicObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_isStaticOrKinematicObject_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->isStaticOrKinematicObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_hasContactResponse_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->hasContactResponse();
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_new_btCollisionObject_bt_e001408c92acdfd7() {
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  
  result = (btCollisionObject *)new btCollisionObject();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionObject_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCollisionObject_setCollisionShape_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionShape *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionShape *arg2 = (btCollisionShape *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionShape **)&_swig_go_1; 
  
  (arg1)->setCollisionShape(arg2);
  
}


btCollisionShape *_wrap_btCollisionObject_getCollisionShape__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionShape *result = 0 ;
  btCollisionShape *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btCollisionShape *)((btCollisionObject const *)arg1)->getCollisionShape();
  *(btCollisionShape **)&_swig_go_result = (btCollisionShape *)result; 
  return _swig_go_result;
}


btCollisionShape *_wrap_btCollisionObject_getCollisionShape__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionShape *result = 0 ;
  btCollisionShape *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btCollisionShape *)(arg1)->getCollisionShape();
  *(btCollisionShape **)&_swig_go_result = (btCollisionShape *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setIgnoreCollisionCheck_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1, bool _swig_go_2) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool arg3 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->setIgnoreCollisionCheck((btCollisionObject const *)arg2,arg3);
  
}


intgo _wrap_btCollisionObject_getNumObjectsWithoutCollision_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getNumObjectsWithoutCollision();
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btCollisionObject_getObjectWithoutCollision_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btCollisionObject *)(arg1)->getObjectWithoutCollision(arg2);
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_checkCollideWithOverride_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (bool)((btCollisionObject const *)arg1)->checkCollideWithOverride((btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_btCollisionObject_internalGetExtensionPointer_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (void *)((btCollisionObject const *)arg1)->internalGetExtensionPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_internalSetExtensionPointer_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, void *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->internalSetExtensionPointer(arg2);
  
}


intgo _wrap_btCollisionObject_getActivationState_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getActivationState();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setActivationState_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ((btCollisionObject const *)arg1)->setActivationState(arg2);
  
}


void _wrap_btCollisionObject_setDeactivationTime_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setDeactivationTime(arg2);
  
}


float _wrap_btCollisionObject_getDeactivationTime_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getDeactivationTime();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_forceActivationState_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ((btCollisionObject const *)arg1)->forceActivationState(arg2);
  
}


void _wrap_btCollisionObject_activate__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, bool _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  ((btCollisionObject const *)arg1)->activate(arg2);
  
}


void _wrap_btCollisionObject_activate__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  ((btCollisionObject const *)arg1)->activate();
  
}


bool _wrap_btCollisionObject_isActive_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (bool)((btCollisionObject const *)arg1)->isActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setRestitution_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setRestitution(arg2);
  
}


float _wrap_btCollisionObject_getRestitution_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getRestitution();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setFriction(arg2);
  
}


float _wrap_btCollisionObject_getFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setRollingFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setRollingFriction(arg2);
  
}


float _wrap_btCollisionObject_getRollingFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getRollingFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setSpinningFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setSpinningFriction(arg2);
  
}


float _wrap_btCollisionObject_getSpinningFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getSpinningFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setContactStiffnessAndDamping_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setContactStiffnessAndDamping(arg2,arg3);
  
}


float _wrap_btCollisionObject_getContactStiffness_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getContactStiffness();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCollisionObject_getContactDamping_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getContactDamping();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_getInternalType_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getInternalType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btCollisionObject_getWorldTransform__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btTransform *) &(arg1)->getWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btCollisionObject_getWorldTransform__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btTransform *) &((btCollisionObject const *)arg1)->getWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setWorldTransform_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btTransform *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setWorldTransform((btTransform const &)*arg2);
  
}


btBroadphaseProxy *_wrap_btCollisionObject_getBroadphaseHandle__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *)(arg1)->getBroadphaseHandle();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_btCollisionObject_getBroadphaseHandle__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *)((btCollisionObject const *)arg1)->getBroadphaseHandle();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setBroadphaseHandle_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  (arg1)->setBroadphaseHandle(arg2);
  
}


btTransform *_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btTransform *) &((btCollisionObject const *)arg1)->getInterpolationWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btTransform *) &(arg1)->getInterpolationWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setInterpolationWorldTransform_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btTransform *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setInterpolationWorldTransform((btTransform const &)*arg2);
  
}


void _wrap_btCollisionObject_setInterpolationLinearVelocity_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setInterpolationLinearVelocity((btVector3 const &)*arg2);
  
}


void _wrap_btCollisionObject_setInterpolationAngularVelocity_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setInterpolationAngularVelocity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btCollisionObject_getInterpolationLinearVelocity_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btVector3 *) &((btCollisionObject const *)arg1)->getInterpolationLinearVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btCollisionObject_getInterpolationAngularVelocity_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btVector3 *) &((btCollisionObject const *)arg1)->getInterpolationAngularVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_getIslandTag_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getIslandTag();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setIslandTag_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setIslandTag(arg2);
  
}


intgo _wrap_btCollisionObject_getCompanionId_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getCompanionId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setCompanionId_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setCompanionId(arg2);
  
}


intgo _wrap_btCollisionObject_getWorldArrayIndex_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getWorldArrayIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setWorldArrayIndex_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setWorldArrayIndex(arg2);
  
}


float _wrap_btCollisionObject_getHitFraction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getHitFraction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setHitFraction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setHitFraction(arg2);
  
}


intgo _wrap_btCollisionObject_getCollisionFlags_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getCollisionFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setCollisionFlags_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setCollisionFlags(arg2);
  
}


float _wrap_btCollisionObject_getCcdSweptSphereRadius_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getCcdSweptSphereRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setCcdSweptSphereRadius_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setCcdSweptSphereRadius(arg2);
  
}


float _wrap_btCollisionObject_getCcdMotionThreshold_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getCcdMotionThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btCollisionObject_getCcdSquareMotionThreshold_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btScalar)((btCollisionObject const *)arg1)->getCcdSquareMotionThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setCcdMotionThreshold_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, float _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setCcdMotionThreshold(arg2);
  
}


void *_wrap_btCollisionObject_getUserPointer_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (void *)((btCollisionObject const *)arg1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_getUserIndex_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_getUserIndex2_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_getUserIndex3_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getUserIndex3();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setUserPointer_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, void *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->setUserPointer(arg2);
  
}


void _wrap_btCollisionObject_setUserIndex_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserIndex(arg2);
  
}


void _wrap_btCollisionObject_setUserIndex2_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserIndex2(arg2);
  
}


void _wrap_btCollisionObject_setUserIndex3_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, intgo _swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserIndex3(arg2);
  
}


intgo _wrap_btCollisionObject_getUpdateRevisionInternal_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->getUpdateRevisionInternal();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObject_setCustomDebugColor_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setCustomDebugColor((btVector3 const &)*arg2);
  
}


void _wrap_btCollisionObject_removeCustomDebugColor_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  (arg1)->removeCustomDebugColor();
  
}


bool _wrap_btCollisionObject_getCustomDebugColor_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (bool)((btCollisionObject const *)arg1)->getCustomDebugColor(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionObject_checkCollideWith_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (bool)((btCollisionObject const *)arg1)->checkCollideWith((btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionObject_calculateSerializeBufferSize_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (int)((btCollisionObject const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btCollisionObject_serialize_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btCollisionObject const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCollisionObject_serializeSingleObject_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btSerializer *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  ((btCollisionObject const *)arg1)->serializeSingleObject(arg2);
  
}


void _wrap_btCollisionObjectDoubleData_m_broadphaseHandle_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, void *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_broadphaseHandle = arg2;
  
}


void *_wrap_btCollisionObjectDoubleData_m_broadphaseHandle_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_broadphaseHandle);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_collisionShape_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, void *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionShape = arg2;
  
}


void *_wrap_btCollisionObjectDoubleData_m_collisionShape_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_collisionShape);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_rootCollisionShape_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btCollisionShapeData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btCollisionShapeData *arg2 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btCollisionShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rootCollisionShape = arg2;
  
}


btCollisionShapeData *_wrap_btCollisionObjectDoubleData_m_rootCollisionShape_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btCollisionShapeData *) ((arg1)->m_rootCollisionShape);
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_name_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btCollisionObjectDoubleData_m_name_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_worldTransform_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_worldTransform = *arg2;
  
}


btTransformDoubleData *_wrap_btCollisionObjectDoubleData_m_worldTransform_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_worldTransform);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationWorldTransform = *arg2;
  
}


btTransformDoubleData *_wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_interpolationWorldTransform);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationLinearVelocity = *arg2;
  
}


btVector3DoubleData *_wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_interpolationLinearVelocity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationAngularVelocity = *arg2;
  
}


btVector3DoubleData *_wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_interpolationAngularVelocity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_anisotropicFriction_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_anisotropicFriction = *arg2;
  
}


btVector3DoubleData *_wrap_btCollisionObjectDoubleData_m_anisotropicFriction_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_anisotropicFriction);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactProcessingThreshold = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_contactProcessingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_deactivationTime_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_deactivationTime = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_deactivationTime_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_deactivationTime);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_friction_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_friction_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_rollingFriction_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_rollingFriction = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_rollingFriction_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_rollingFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_contactDamping_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactDamping = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_contactDamping_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_contactDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_contactStiffness_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactStiffness = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_contactStiffness_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_contactStiffness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_restitution_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_restitution_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_hitFraction_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_hitFraction = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_hitFraction_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_hitFraction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_ccdSweptSphereRadius = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_ccdSweptSphereRadius);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, double _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_ccdMotionThreshold = arg2;
  
}


double _wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_ccdMotionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_hasAnisotropicFriction = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_hasAnisotropicFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_collisionFlags_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFlags = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_collisionFlags_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_islandTag1_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_islandTag1 = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_islandTag1_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_islandTag1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_companionId_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionId = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_companionId_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_activationState1_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_activationState1 = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_activationState1_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_activationState1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_internalType_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_internalType = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_internalType_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_internalType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_checkCollideWith_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_checkCollideWith = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_checkCollideWith_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_checkCollideWith);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_collisionFilterGroup_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterGroup = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_collisionFilterGroup_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_collisionFilterMask_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterMask = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_collisionFilterMask_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterMask);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectDoubleData_m_uniqueId_set_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_uniqueId = arg2;
  
}


intgo _wrap_btCollisionObjectDoubleData_m_uniqueId_get_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_uniqueId);
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionObjectDoubleData *_wrap_new_btCollisionObjectDoubleData_bt_e001408c92acdfd7() {
  btCollisionObjectDoubleData *result = 0 ;
  btCollisionObjectDoubleData *_swig_go_result;
  
  
  result = (btCollisionObjectDoubleData *)new btCollisionObjectDoubleData();
  *(btCollisionObjectDoubleData **)&_swig_go_result = (btCollisionObjectDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionObjectDoubleData_bt_e001408c92acdfd7(btCollisionObjectDoubleData *_swig_go_0) {
  btCollisionObjectDoubleData *arg1 = (btCollisionObjectDoubleData *) 0 ;
  
  arg1 = *(btCollisionObjectDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCollisionObjectFloatData_m_broadphaseHandle_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, void *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_broadphaseHandle = arg2;
  
}


void *_wrap_btCollisionObjectFloatData_m_broadphaseHandle_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_broadphaseHandle);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_collisionShape_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, void *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionShape = arg2;
  
}


void *_wrap_btCollisionObjectFloatData_m_collisionShape_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_collisionShape);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_rootCollisionShape_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btCollisionShapeData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btCollisionShapeData *arg2 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btCollisionShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rootCollisionShape = arg2;
  
}


btCollisionShapeData *_wrap_btCollisionObjectFloatData_m_rootCollisionShape_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btCollisionShapeData *) ((arg1)->m_rootCollisionShape);
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_name_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, _gostring_ _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btCollisionObjectFloatData_m_name_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_worldTransform_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_worldTransform = *arg2;
  
}


btTransformFloatData *_wrap_btCollisionObjectFloatData_m_worldTransform_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_worldTransform);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationWorldTransform = *arg2;
  
}


btTransformFloatData *_wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_interpolationWorldTransform);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationLinearVelocity = *arg2;
  
}


btVector3FloatData *_wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_interpolationLinearVelocity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_interpolationAngularVelocity = *arg2;
  
}


btVector3FloatData *_wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_interpolationAngularVelocity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_anisotropicFriction_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_anisotropicFriction = *arg2;
  
}


btVector3FloatData *_wrap_btCollisionObjectFloatData_m_anisotropicFriction_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_anisotropicFriction);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactProcessingThreshold = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_contactProcessingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_deactivationTime_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_deactivationTime = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_deactivationTime_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_deactivationTime);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_friction_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_friction_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_rollingFriction_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_rollingFriction = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_rollingFriction_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_rollingFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_contactDamping_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactDamping = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_contactDamping_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_contactDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_contactStiffness_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactStiffness = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_contactStiffness_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_contactStiffness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_restitution_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_restitution_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_hitFraction_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_hitFraction = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_hitFraction_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_hitFraction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_ccdSweptSphereRadius = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_ccdSweptSphereRadius);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, float _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_ccdMotionThreshold = arg2;
  
}


float _wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_ccdMotionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_hasAnisotropicFriction = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_hasAnisotropicFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_collisionFlags_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFlags = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_collisionFlags_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_islandTag1_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_islandTag1 = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_islandTag1_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_islandTag1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_companionId_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionId = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_companionId_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_activationState1_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_activationState1 = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_activationState1_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_activationState1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_internalType_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_internalType = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_internalType_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_internalType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_checkCollideWith_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_checkCollideWith = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_checkCollideWith_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_checkCollideWith);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_collisionFilterGroup_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterGroup = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_collisionFilterGroup_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_collisionFilterMask_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionFilterMask = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_collisionFilterMask_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_collisionFilterMask);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionObjectFloatData_m_uniqueId_set_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0, intgo _swig_go_1) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_uniqueId = arg2;
  
}


intgo _wrap_btCollisionObjectFloatData_m_uniqueId_get_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_uniqueId);
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionObjectFloatData *_wrap_new_btCollisionObjectFloatData_bt_e001408c92acdfd7() {
  btCollisionObjectFloatData *result = 0 ;
  btCollisionObjectFloatData *_swig_go_result;
  
  
  result = (btCollisionObjectFloatData *)new btCollisionObjectFloatData();
  *(btCollisionObjectFloatData **)&_swig_go_result = (btCollisionObjectFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionObjectFloatData_bt_e001408c92acdfd7(btCollisionObjectFloatData *_swig_go_0) {
  btCollisionObjectFloatData *arg1 = (btCollisionObjectFloatData *) 0 ;
  
  arg1 = *(btCollisionObjectFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_gDeactivationTime_set_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  
  arg1 = (btScalar)_swig_go_0; 
  
  gDeactivationTime = arg1;
  
}


float _wrap_gDeactivationTime_get_bt_e001408c92acdfd7() {
  btScalar result;
  float _swig_go_result;
  
  
  result = (btScalar)gDeactivationTime;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gDisableDeactivation_set_bt_e001408c92acdfd7(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  gDisableDeactivation = arg1;
  
}


bool _wrap_gDisableDeactivation_get_bt_e001408c92acdfd7() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)gDisableDeactivation;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_BT_DISABLE_WORLD_GRAVITY_bt_e001408c92acdfd7() {
  btRigidBodyFlags result;
  intgo _swig_go_result;
  
  
  result = BT_DISABLE_WORLD_GRAVITY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_ENABLE_GYROSCOPIC_FORCE_EXPLICIT_bt_e001408c92acdfd7() {
  btRigidBodyFlags result;
  intgo _swig_go_result;
  
  
  result = BT_ENABLE_GYROSCOPIC_FORCE_EXPLICIT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_WORLD_bt_e001408c92acdfd7() {
  btRigidBodyFlags result;
  intgo _swig_go_result;
  
  
  result = BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_BODY_bt_e001408c92acdfd7() {
  btRigidBodyFlags result;
  intgo _swig_go_result;
  
  
  result = BT_ENABLE_GYROSCOPIC_FORCE_IMPLICIT_BODY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_ENABLE_GYROPSCOPIC_FORCE_bt_e001408c92acdfd7() {
  btRigidBodyFlags result;
  intgo _swig_go_result;
  
  
  result = BT_ENABLE_GYROPSCOPIC_FORCE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btRigidBody *_wrap_new_btRigidBody__SWIG_0_bt_e001408c92acdfd7(btRigidBody::btRigidBodyConstructionInfo *_swig_go_0) {
  btRigidBody::btRigidBodyConstructionInfo *arg1 = 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btRigidBody::btRigidBodyConstructionInfo **)&_swig_go_0; 
  
  result = (btRigidBody *)new btRigidBody((btRigidBody::btRigidBodyConstructionInfo const &)*arg1);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


btRigidBody *_wrap_new_btRigidBody__SWIG_1_bt_e001408c92acdfd7(float _swig_go_0, btMotionState *_swig_go_1, btCollisionShape *_swig_go_2, btVector3 *_swig_go_3) {
  btScalar arg1 ;
  btMotionState *arg2 = (btMotionState *) 0 ;
  btCollisionShape *arg3 = (btCollisionShape *) 0 ;
  btVector3 *arg4 = 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = *(btMotionState **)&_swig_go_1; 
  arg3 = *(btCollisionShape **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (btRigidBody *)new btRigidBody(arg1,arg2,arg3,(btVector3 const &)*arg4);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


btRigidBody *_wrap_new_btRigidBody__SWIG_2_bt_e001408c92acdfd7(float _swig_go_0, btMotionState *_swig_go_1, btCollisionShape *_swig_go_2) {
  btScalar arg1 ;
  btMotionState *arg2 = (btMotionState *) 0 ;
  btCollisionShape *arg3 = (btCollisionShape *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = *(btMotionState **)&_swig_go_1; 
  arg3 = *(btCollisionShape **)&_swig_go_2; 
  
  result = (btRigidBody *)new btRigidBody(arg1,arg2,arg3);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


void _wrap_delete_btRigidBody_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btRigidBody_proceedToTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->proceedToTransform((btTransform const &)*arg2);
  
}


btRigidBody *_wrap_btRigidBody_upcast__SWIG_0_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btRigidBody *)btRigidBody::upcast((btCollisionObject const *)arg1);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btRigidBody_upcast__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  
  result = (btRigidBody *)btRigidBody::upcast(arg1);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_predictIntegratedTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1, btTransform *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->predictIntegratedTransform(arg2,*arg3);
  
}


void _wrap_btRigidBody_saveKinematicState_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->saveKinematicState(arg2);
  
}


void _wrap_btRigidBody_applyGravity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  (arg1)->applyGravity();
  
}


void _wrap_btRigidBody_clearGravity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  (arg1)->clearGravity();
  
}


void _wrap_btRigidBody_setGravity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setGravity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btRigidBody_getGravity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getGravity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setDamping(arg2,arg3);
  
}


float _wrap_btRigidBody_getLinearDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getLinearDamping();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getAngularDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getAngularDamping();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getLinearSleepingThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getLinearSleepingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getAngularSleepingThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getAngularSleepingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_applyDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->applyDamping(arg2);
  
}


btCollisionShape *_wrap_btRigidBody_getCollisionShape__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionShape *result = 0 ;
  btCollisionShape *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btCollisionShape *)((btRigidBody const *)arg1)->getCollisionShape();
  *(btCollisionShape **)&_swig_go_result = (btCollisionShape *)result; 
  return _swig_go_result;
}


btCollisionShape *_wrap_btRigidBody_getCollisionShape__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionShape *result = 0 ;
  btCollisionShape *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btCollisionShape *)(arg1)->getCollisionShape();
  *(btCollisionShape **)&_swig_go_result = (btCollisionShape *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setMassProps_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->setMassProps(arg2,(btVector3 const &)*arg3);
  
}


btVector3 *_wrap_btRigidBody_getLinearFactor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getLinearFactor();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setLinearFactor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLinearFactor((btVector3 const &)*arg2);
  
}


float _wrap_btRigidBody_getInvMass_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getInvMass();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getMass_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btScalar)((btRigidBody const *)arg1)->getMass();
  _swig_go_result = result; 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_btRigidBody_getInvInertiaTensorWorld_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btMatrix3x3 *) &((btRigidBody const *)arg1)->getInvInertiaTensorWorld();
  *(btMatrix3x3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_integrateVelocities_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->integrateVelocities(arg2);
  
}


void _wrap_btRigidBody_setCenterOfMassTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setCenterOfMassTransform((btTransform const &)*arg2);
  
}


void _wrap_btRigidBody_applyCentralForce_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyCentralForce((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btRigidBody_getTotalForce_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getTotalForce();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getTotalTorque_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getTotalTorque();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getInvInertiaDiagLocal_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getInvInertiaDiagLocal();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setInvInertiaDiagLocal_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setInvInertiaDiagLocal((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_setSleepingThresholds_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setSleepingThresholds(arg2,arg3);
  
}


void _wrap_btRigidBody_applyTorque_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyTorque((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_applyForce_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->applyForce((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btRigidBody_applyCentralImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyCentralImpulse((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_applyTorqueImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyTorqueImpulse((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_applyImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->applyImpulse((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btRigidBody_applyPushImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->applyPushImpulse((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


btVector3 *_wrap_btRigidBody_getPushVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = ((btRigidBody const *)arg1)->getPushVelocity();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getTurnVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = ((btRigidBody const *)arg1)->getTurnVelocity();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btRigidBody_setPushVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setPushVelocity((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_setTurnVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setTurnVelocity((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_applyCentralPushImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyCentralPushImpulse((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_applyTorqueTurnImpulse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->applyTorqueTurnImpulse((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_clearForces_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  (arg1)->clearForces();
  
}


void _wrap_btRigidBody_updateInertiaTensor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  (arg1)->updateInertiaTensor();
  
}


btVector3 *_wrap_btRigidBody_getCenterOfMassPosition_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getCenterOfMassPosition();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btQuaternion *_wrap_btRigidBody_getOrientation_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btQuaternion result;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = ((btRigidBody const *)arg1)->getOrientation();
  *(btQuaternion **)&_swig_go_result = new btQuaternion(result); 
  return _swig_go_result;
}


btTransform *_wrap_btRigidBody_getCenterOfMassTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btTransform *) &((btRigidBody const *)arg1)->getCenterOfMassTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getLinearVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getLinearVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getAngularVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getAngularVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setLinearVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLinearVelocity((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_setAngularVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setAngularVelocity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btRigidBody_getVelocityInLocalPoint_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btRigidBody const *)arg1)->getVelocityInLocalPoint((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getPushVelocityInLocalPoint_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btRigidBody const *)arg1)->getPushVelocityInLocalPoint((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btRigidBody_translate_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->translate((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_getAabb_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btRigidBody const *)arg1)->getAabb(*arg2,*arg3);
  
}


float _wrap_btRigidBody_computeImpulseDenominator_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (btScalar)((btRigidBody const *)arg1)->computeImpulseDenominator((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_computeAngularImpulseDenominator_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btScalar)((btRigidBody const *)arg1)->computeAngularImpulseDenominator((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_updateDeactivation_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->updateDeactivation(arg2);
  
}


bool _wrap_btRigidBody_wantsSleeping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (bool)(arg1)->wantsSleeping();
  _swig_go_result = result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_btRigidBody_getConstBroadphaseProxy_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *)((btRigidBody const *)arg1)->getConstBroadphaseProxy();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_btRigidBody_getBroadphaseProxy_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btBroadphaseProxy *)(arg1)->getBroadphaseProxy();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setNewBroadphaseProxy_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  (arg1)->setNewBroadphaseProxy(arg2);
  
}


btMotionState *_wrap_btRigidBody_getMotionState__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btMotionState *result = 0 ;
  btMotionState *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btMotionState *)(arg1)->getMotionState();
  *(btMotionState **)&_swig_go_result = (btMotionState *)result; 
  return _swig_go_result;
}


btMotionState *_wrap_btRigidBody_getMotionState__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btMotionState *result = 0 ;
  btMotionState *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btMotionState *)((btRigidBody const *)arg1)->getMotionState();
  *(btMotionState **)&_swig_go_result = (btMotionState *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setMotionState_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btMotionState *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btMotionState *arg2 = (btMotionState *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btMotionState **)&_swig_go_1; 
  
  (arg1)->setMotionState(arg2);
  
}


void _wrap_btRigidBody_m_contactSolverType_set_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactSolverType = arg2;
  
}


intgo _wrap_btRigidBody_m_contactSolverType_get_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_contactSolverType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_m_frictionSolverType_set_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_frictionSolverType = arg2;
  
}


intgo _wrap_btRigidBody_m_frictionSolverType_get_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_frictionSolverType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setAngularFactor__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setAngularFactor((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_setAngularFactor__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setAngularFactor(arg2);
  
}


btVector3 *_wrap_btRigidBody_getAngularFactor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btRigidBody const *)arg1)->getAngularFactor();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_isInWorld_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (bool)((btRigidBody const *)arg1)->isInWorld();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_addConstraintRef_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->addConstraintRef(arg2);
  
}


void _wrap_btRigidBody_removeConstraintRef_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->removeConstraintRef(arg2);
  
}


btTypedConstraint *_wrap_btRigidBody_getConstraintRef_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  btTypedConstraint *result = 0 ;
  btTypedConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btTypedConstraint *)(arg1)->getConstraintRef(arg2);
  *(btTypedConstraint **)&_swig_go_result = (btTypedConstraint *)result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getNumConstraintRefs_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (int)((btRigidBody const *)arg1)->getNumConstraintRefs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setFlags_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setFlags(arg2);
  
}


intgo _wrap_btRigidBody_getFlags_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (int)((btRigidBody const *)arg1)->getFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_computeGyroscopicImpulseImplicit_World_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = ((btRigidBody const *)arg1)->computeGyroscopicImpulseImplicit_World(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_computeGyroscopicImpulseImplicit_Body_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = ((btRigidBody const *)arg1)->computeGyroscopicImpulseImplicit_Body(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_computeGyroscopicForceExplicit_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = ((btRigidBody const *)arg1)->computeGyroscopicForceExplicit(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getLocalInertia_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = ((btRigidBody const *)arg1)->getLocalInertia();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_calculateSerializeBufferSize_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  result = (int)((btRigidBody const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btRigidBody_serialize_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btRigidBody const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btRigidBody_serializeSingleObject_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btSerializer *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  ((btRigidBody const *)arg1)->serializeSingleObject(arg2);
  
}


bool _wrap_btRigidBody_mergesSimulationIslands_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->mergesSimulationIslands();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getAnisotropicFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btVector3 *) &((btCollisionObject const *)swig_b0)->getAnisotropicFriction();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setAnisotropicFriction__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setAnisotropicFriction((btVector3 const &)*arg2,arg3);
  
}


void _wrap_btRigidBody_setAnisotropicFriction__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setAnisotropicFriction((btVector3 const &)*arg2);
  
}


bool _wrap_btRigidBody_hasAnisotropicFriction__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->hasAnisotropicFriction(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_hasAnisotropicFriction__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->hasAnisotropicFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setContactProcessingThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setContactProcessingThreshold(arg2);
  
}


float _wrap_btRigidBody_getContactProcessingThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getContactProcessingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_isStaticObject_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->isStaticObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_isKinematicObject_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->isKinematicObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_isStaticOrKinematicObject_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->isStaticOrKinematicObject();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_hasContactResponse_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->hasContactResponse();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCollisionShape_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btCollisionShape *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionShape *arg2 = (btCollisionShape *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btCollisionShape **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCollisionShape(arg2);
  
}


void _wrap_btRigidBody_setIgnoreCollisionCheck_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btCollisionObject *_swig_go_1, bool _swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool arg3 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setIgnoreCollisionCheck((btCollisionObject const *)arg2,arg3);
  
}


intgo _wrap_btRigidBody_getNumObjectsWithoutCollision_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getNumObjectsWithoutCollision();
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btRigidBody_getObjectWithoutCollision_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btCollisionObject *)(swig_b0)->getObjectWithoutCollision(arg2);
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_checkCollideWithOverride_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btCollisionObject *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->checkCollideWithOverride((btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_btRigidBody_internalGetExtensionPointer_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (void *)((btCollisionObject const *)swig_b0)->internalGetExtensionPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_internalSetExtensionPointer_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, void *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->internalSetExtensionPointer(arg2);
  
}


intgo _wrap_btRigidBody_getActivationState_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getActivationState();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setActivationState_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  ((btCollisionObject const *)swig_b0)->setActivationState(arg2);
  
}


void _wrap_btRigidBody_setDeactivationTime_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setDeactivationTime(arg2);
  
}


float _wrap_btRigidBody_getDeactivationTime_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getDeactivationTime();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_forceActivationState_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  ((btCollisionObject const *)swig_b0)->forceActivationState(arg2);
  
}


void _wrap_btRigidBody_activate__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, bool _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  ((btCollisionObject const *)swig_b0)->activate(arg2);
  
}


void _wrap_btRigidBody_activate__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  ((btCollisionObject const *)swig_b0)->activate();
  
}


bool _wrap_btRigidBody_isActive_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->isActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setRestitution_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setRestitution(arg2);
  
}


float _wrap_btRigidBody_getRestitution_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getRestitution();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setFriction(arg2);
  
}


float _wrap_btRigidBody_getFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setRollingFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setRollingFriction(arg2);
  
}


float _wrap_btRigidBody_getRollingFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getRollingFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setSpinningFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setSpinningFriction(arg2);
  
}


float _wrap_btRigidBody_getSpinningFriction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getSpinningFriction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setContactStiffnessAndDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setContactStiffnessAndDamping(arg2,arg3);
  
}


float _wrap_btRigidBody_getContactStiffness_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getContactStiffness();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getContactDamping_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getContactDamping();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getInternalType_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getInternalType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btRigidBody_getWorldTransform__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btTransform *) &(swig_b0)->getWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btRigidBody_getWorldTransform__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btTransform *) &((btCollisionObject const *)swig_b0)->getWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setWorldTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setWorldTransform((btTransform const &)*arg2);
  
}


btBroadphaseProxy *_wrap_btRigidBody_getBroadphaseHandle__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btBroadphaseProxy *)(swig_b0)->getBroadphaseHandle();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


btBroadphaseProxy *_wrap_btRigidBody_getBroadphaseHandle__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btBroadphaseProxy *)((btCollisionObject const *)swig_b0)->getBroadphaseHandle();
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setBroadphaseHandle_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setBroadphaseHandle(arg2);
  
}


btTransform *_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btTransform *) &((btCollisionObject const *)swig_b0)->getInterpolationWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btTransform *) &(swig_b0)->getInterpolationWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setInterpolationWorldTransform_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setInterpolationWorldTransform((btTransform const &)*arg2);
  
}


void _wrap_btRigidBody_setInterpolationLinearVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setInterpolationLinearVelocity((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_setInterpolationAngularVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setInterpolationAngularVelocity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btRigidBody_getInterpolationLinearVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btVector3 *) &((btCollisionObject const *)swig_b0)->getInterpolationLinearVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btRigidBody_getInterpolationAngularVelocity_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btVector3 *) &((btCollisionObject const *)swig_b0)->getInterpolationAngularVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getIslandTag_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getIslandTag();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setIslandTag_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setIslandTag(arg2);
  
}


intgo _wrap_btRigidBody_getCompanionId_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getCompanionId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCompanionId_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCompanionId(arg2);
  
}


intgo _wrap_btRigidBody_getWorldArrayIndex_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getWorldArrayIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setWorldArrayIndex_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setWorldArrayIndex(arg2);
  
}


float _wrap_btRigidBody_getHitFraction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getHitFraction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setHitFraction_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setHitFraction(arg2);
  
}


intgo _wrap_btRigidBody_getCollisionFlags_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getCollisionFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCollisionFlags_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCollisionFlags(arg2);
  
}


float _wrap_btRigidBody_getCcdSweptSphereRadius_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getCcdSweptSphereRadius();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCcdSweptSphereRadius_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCcdSweptSphereRadius(arg2);
  
}


float _wrap_btRigidBody_getCcdMotionThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getCcdMotionThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRigidBody_getCcdSquareMotionThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (btScalar)((btCollisionObject const *)swig_b0)->getCcdSquareMotionThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCcdMotionThreshold_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, float _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCcdMotionThreshold(arg2);
  
}


void *_wrap_btRigidBody_getUserPointer_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (void *)((btCollisionObject const *)swig_b0)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getUserIndex_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getUserIndex2_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btRigidBody_getUserIndex3_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getUserIndex3();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setUserPointer_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, void *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setUserPointer(arg2);
  
}


void _wrap_btRigidBody_setUserIndex_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setUserIndex(arg2);
  
}


void _wrap_btRigidBody_setUserIndex2_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setUserIndex2(arg2);
  
}


void _wrap_btRigidBody_setUserIndex3_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, intgo _swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setUserIndex3(arg2);
  
}


intgo _wrap_btRigidBody_getUpdateRevisionInternal_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (int)((btCollisionObject const *)swig_b0)->getUpdateRevisionInternal();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBody_setCustomDebugColor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->setCustomDebugColor((btVector3 const &)*arg2);
  
}


void _wrap_btRigidBody_removeCustomDebugColor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  (swig_b0)->removeCustomDebugColor();
  
}


bool _wrap_btRigidBody_getCustomDebugColor_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btVector3 *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->getCustomDebugColor(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRigidBody_checkCollideWith_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btCollisionObject *_swig_go_1) {
  btRigidBody *arg1 = (btRigidBody *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionObject *swig_b0 = (btCollisionObject *)arg1;
  result = (bool)((btCollisionObject const *)swig_b0)->checkCollideWith((btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_collisionObjectData_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btCollisionObjectFloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btCollisionObjectFloatData *arg2 = (btCollisionObjectFloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionObjectData = *arg2;
  
}


btCollisionObjectFloatData *_wrap_btRigidBodyFloatData_m_collisionObjectData_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btCollisionObjectFloatData *result = 0 ;
  btCollisionObjectFloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btCollisionObjectFloatData *)& ((arg1)->m_collisionObjectData);
  *(btCollisionObjectFloatData **)&_swig_go_result = (btCollisionObjectFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btMatrix3x3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btMatrix3x3FloatData *arg2 = (btMatrix3x3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btMatrix3x3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_invInertiaTensorWorld = *arg2;
  
}


btMatrix3x3FloatData *_wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btMatrix3x3FloatData *result = 0 ;
  btMatrix3x3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btMatrix3x3FloatData *)& ((arg1)->m_invInertiaTensorWorld);
  *(btMatrix3x3FloatData **)&_swig_go_result = (btMatrix3x3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_linearVelocity_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearVelocity = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_linearVelocity_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_linearVelocity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_angularVelocity_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularVelocity = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_angularVelocity_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_angularVelocity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_angularFactor_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularFactor = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_angularFactor_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_angularFactor);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_linearFactor_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearFactor = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_linearFactor_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_linearFactor);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_gravity_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_gravity_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_gravity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_gravity_acceleration_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity_acceleration = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_gravity_acceleration_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_gravity_acceleration);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_invInertiaLocal_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_invInertiaLocal = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_invInertiaLocal_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_invInertiaLocal);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_totalForce_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_totalForce = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_totalForce_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_totalForce);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_totalTorque_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_totalTorque = *arg2;
  
}


btVector3FloatData *_wrap_btRigidBodyFloatData_m_totalTorque_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_totalTorque);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_inverseMass_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_inverseMass = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_inverseMass_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_inverseMass);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_linearDamping_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearDamping = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_linearDamping_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_linearDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_angularDamping_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_angularDamping = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_angularDamping_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_angularDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_additionalDampingFactor_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalDampingFactor = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_additionalDampingFactor_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_additionalDampingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalLinearDampingThresholdSqr = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_additionalLinearDampingThresholdSqr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalAngularDampingThresholdSqr = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_additionalAngularDampingThresholdSqr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalAngularDampingFactor = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_additionalAngularDampingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_linearSleepingThreshold_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearSleepingThreshold = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_linearSleepingThreshold_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_linearSleepingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_angularSleepingThreshold_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, float _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_angularSleepingThreshold = arg2;
  
}


float _wrap_btRigidBodyFloatData_m_angularSleepingThreshold_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_angularSleepingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyFloatData_m_additionalDamping_set_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0, intgo _swig_go_1) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalDamping = arg2;
  
}


intgo _wrap_btRigidBodyFloatData_m_additionalDamping_get_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_additionalDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


btRigidBodyFloatData *_wrap_new_btRigidBodyFloatData_bt_e001408c92acdfd7() {
  btRigidBodyFloatData *result = 0 ;
  btRigidBodyFloatData *_swig_go_result;
  
  
  result = (btRigidBodyFloatData *)new btRigidBodyFloatData();
  *(btRigidBodyFloatData **)&_swig_go_result = (btRigidBodyFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btRigidBodyFloatData_bt_e001408c92acdfd7(btRigidBodyFloatData *_swig_go_0) {
  btRigidBodyFloatData *arg1 = (btRigidBodyFloatData *) 0 ;
  
  arg1 = *(btRigidBodyFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btRigidBodyDoubleData_m_collisionObjectData_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btCollisionObjectDoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btCollisionObjectDoubleData *arg2 = (btCollisionObjectDoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionObjectData = *arg2;
  
}


btCollisionObjectDoubleData *_wrap_btRigidBodyDoubleData_m_collisionObjectData_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btCollisionObjectDoubleData *result = 0 ;
  btCollisionObjectDoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btCollisionObjectDoubleData *)& ((arg1)->m_collisionObjectData);
  *(btCollisionObjectDoubleData **)&_swig_go_result = (btCollisionObjectDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btMatrix3x3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btMatrix3x3DoubleData *arg2 = (btMatrix3x3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btMatrix3x3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_invInertiaTensorWorld = *arg2;
  
}


btMatrix3x3DoubleData *_wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btMatrix3x3DoubleData *result = 0 ;
  btMatrix3x3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btMatrix3x3DoubleData *)& ((arg1)->m_invInertiaTensorWorld);
  *(btMatrix3x3DoubleData **)&_swig_go_result = (btMatrix3x3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_linearVelocity_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearVelocity = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_linearVelocity_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_linearVelocity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_angularVelocity_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularVelocity = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_angularVelocity_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_angularVelocity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_angularFactor_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularFactor = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_angularFactor_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_angularFactor);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_linearFactor_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearFactor = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_linearFactor_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_linearFactor);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_gravity_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_gravity_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_gravity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_gravity_acceleration_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity_acceleration = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_gravity_acceleration_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_gravity_acceleration);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_invInertiaLocal_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_invInertiaLocal = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_invInertiaLocal_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_invInertiaLocal);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_totalForce_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_totalForce = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_totalForce_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_totalForce);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_totalTorque_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_totalTorque = *arg2;
  
}


btVector3DoubleData *_wrap_btRigidBodyDoubleData_m_totalTorque_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_totalTorque);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_inverseMass_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_inverseMass = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_inverseMass_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_inverseMass);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_linearDamping_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearDamping = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_linearDamping_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_linearDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_angularDamping_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_angularDamping = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_angularDamping_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_angularDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_additionalDampingFactor_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalDampingFactor = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_additionalDampingFactor_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_additionalDampingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalLinearDampingThresholdSqr = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_additionalLinearDampingThresholdSqr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalAngularDampingThresholdSqr = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_additionalAngularDampingThresholdSqr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalAngularDampingFactor = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_additionalAngularDampingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearSleepingThreshold = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_linearSleepingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, double _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_angularSleepingThreshold = arg2;
  
}


double _wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_angularSleepingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_additionalDamping_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, intgo _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_additionalDamping = arg2;
  
}


intgo _wrap_btRigidBodyDoubleData_m_additionalDamping_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_additionalDamping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRigidBodyDoubleData_m_padding_set_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btRigidBodyDoubleData_m_padding_get_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btRigidBodyDoubleData *_wrap_new_btRigidBodyDoubleData_bt_e001408c92acdfd7() {
  btRigidBodyDoubleData *result = 0 ;
  btRigidBodyDoubleData *_swig_go_result;
  
  
  result = (btRigidBodyDoubleData *)new btRigidBodyDoubleData();
  *(btRigidBodyDoubleData **)&_swig_go_result = (btRigidBodyDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btRigidBodyDoubleData_bt_e001408c92acdfd7(btRigidBodyDoubleData *_swig_go_0) {
  btRigidBodyDoubleData *arg1 = (btRigidBodyDoubleData *) 0 ;
  
  arg1 = *(btRigidBodyDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btAabbSupport_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = btAabbSupport((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btTransformUtil_integrateTransform_bt_e001408c92acdfd7(btTransform *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, btTransform *_swig_go_4) {
  btTransform *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  btTransform *arg5 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  
  btTransformUtil::integrateTransform((btTransform const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,*arg5);
  
}


void _wrap_btTransformUtil_calculateVelocityQuaternion_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btQuaternion *_swig_go_2, btQuaternion *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btQuaternion *arg3 = 0 ;
  btQuaternion *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btQuaternion **)&_swig_go_2; 
  arg4 = *(btQuaternion **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btTransformUtil::calculateVelocityQuaternion((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btQuaternion const &)*arg3,(btQuaternion const &)*arg4,arg5,*arg6,*arg7);
  
}


void _wrap_btTransformUtil_calculateDiffAxisAngleQuaternion_bt_e001408c92acdfd7(btQuaternion *_swig_go_0, btQuaternion *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3) {
  btQuaternion *arg1 = 0 ;
  btQuaternion *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btQuaternion **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btTransformUtil::calculateDiffAxisAngleQuaternion((btQuaternion const &)*arg1,(btQuaternion const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btTransformUtil_calculateVelocity_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, float _swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  btTransformUtil::calculateVelocity((btTransform const &)*arg1,(btTransform const &)*arg2,arg3,*arg4,*arg5);
  
}


void _wrap_btTransformUtil_calculateDiffAxisAngle_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  
  btTransformUtil::calculateDiffAxisAngle((btTransform const &)*arg1,(btTransform const &)*arg2,*arg3,*arg4);
  
}


btTransformUtil *_wrap_new_btTransformUtil_bt_e001408c92acdfd7() {
  btTransformUtil *result = 0 ;
  btTransformUtil *_swig_go_result;
  
  
  result = (btTransformUtil *)new btTransformUtil();
  *(btTransformUtil **)&_swig_go_result = (btTransformUtil *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTransformUtil_bt_e001408c92acdfd7(btTransformUtil *_swig_go_0) {
  btTransformUtil *arg1 = (btTransformUtil *) 0 ;
  
  arg1 = *(btTransformUtil **)&_swig_go_0; 
  
  delete arg1;
  
}


btConvexSeparatingDistanceUtil *_wrap_new_btConvexSeparatingDistanceUtil_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1) {
  btScalar arg1 ;
  btScalar arg2 ;
  btConvexSeparatingDistanceUtil *result = 0 ;
  btConvexSeparatingDistanceUtil *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btConvexSeparatingDistanceUtil *)new btConvexSeparatingDistanceUtil(arg1,arg2);
  *(btConvexSeparatingDistanceUtil **)&_swig_go_result = (btConvexSeparatingDistanceUtil *)result; 
  return _swig_go_result;
}


float _wrap_btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance_bt_e001408c92acdfd7(btConvexSeparatingDistanceUtil *_swig_go_0) {
  btConvexSeparatingDistanceUtil *arg1 = (btConvexSeparatingDistanceUtil *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexSeparatingDistanceUtil **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->getConservativeSeparatingDistance();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexSeparatingDistanceUtil_updateSeparatingDistance_bt_e001408c92acdfd7(btConvexSeparatingDistanceUtil *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btConvexSeparatingDistanceUtil *arg1 = (btConvexSeparatingDistanceUtil *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btConvexSeparatingDistanceUtil **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->updateSeparatingDistance((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


void _wrap_btConvexSeparatingDistanceUtil_initSeparatingDistance_bt_e001408c92acdfd7(btConvexSeparatingDistanceUtil *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4) {
  btConvexSeparatingDistanceUtil *arg1 = (btConvexSeparatingDistanceUtil *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  
  arg1 = *(btConvexSeparatingDistanceUtil **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  
  (arg1)->initSeparatingDistance((btVector3 const &)*arg2,arg3,(btTransform const &)*arg4,(btTransform const &)*arg5);
  
}


void _wrap_delete_btConvexSeparatingDistanceUtil_bt_e001408c92acdfd7(btConvexSeparatingDistanceUtil *_swig_go_0) {
  btConvexSeparatingDistanceUtil *arg1 = (btConvexSeparatingDistanceUtil *) 0 ;
  
  arg1 = *(btConvexSeparatingDistanceUtil **)&_swig_go_0; 
  
  delete arg1;
  
}


btJacobianEntry *_wrap_new_btJacobianEntry__SWIG_0_bt_e001408c92acdfd7() {
  btJacobianEntry *result = 0 ;
  btJacobianEntry *_swig_go_result;
  
  
  result = (btJacobianEntry *)new btJacobianEntry();
  *(btJacobianEntry **)&_swig_go_result = (btJacobianEntry *)result; 
  return _swig_go_result;
}


btJacobianEntry *_wrap_new_btJacobianEntry__SWIG_1_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btMatrix3x3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, float _swig_go_6, btVector3 *_swig_go_7, float _swig_go_8) {
  btMatrix3x3 *arg1 = 0 ;
  btMatrix3x3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btScalar arg7 ;
  btVector3 *arg8 = 0 ;
  btScalar arg9 ;
  btJacobianEntry *result = 0 ;
  btJacobianEntry *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  
  result = (btJacobianEntry *)new btJacobianEntry((btMatrix3x3 const &)*arg1,(btMatrix3x3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,arg7,(btVector3 const &)*arg8,arg9);
  *(btJacobianEntry **)&_swig_go_result = (btJacobianEntry *)result; 
  return _swig_go_result;
}


btJacobianEntry *_wrap_new_btJacobianEntry__SWIG_2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btMatrix3x3 *_swig_go_1, btMatrix3x3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btVector3 *arg1 = 0 ;
  btMatrix3x3 *arg2 = 0 ;
  btMatrix3x3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btJacobianEntry *result = 0 ;
  btJacobianEntry *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  arg3 = *(btMatrix3x3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  result = (btJacobianEntry *)new btJacobianEntry((btVector3 const &)*arg1,(btMatrix3x3 const &)*arg2,(btMatrix3x3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5);
  *(btJacobianEntry **)&_swig_go_result = (btJacobianEntry *)result; 
  return _swig_go_result;
}


btJacobianEntry *_wrap_new_btJacobianEntry__SWIG_3_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btJacobianEntry *result = 0 ;
  btJacobianEntry *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (btJacobianEntry *)new btJacobianEntry((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  *(btJacobianEntry **)&_swig_go_result = (btJacobianEntry *)result; 
  return _swig_go_result;
}


btJacobianEntry *_wrap_new_btJacobianEntry__SWIG_4_bt_e001408c92acdfd7(btMatrix3x3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, float _swig_go_5) {
  btMatrix3x3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btScalar arg6 ;
  btJacobianEntry *result = 0 ;
  btJacobianEntry *_swig_go_result;
  
  arg1 = *(btMatrix3x3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  result = (btJacobianEntry *)new btJacobianEntry((btMatrix3x3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,arg6);
  *(btJacobianEntry **)&_swig_go_result = (btJacobianEntry *)result; 
  return _swig_go_result;
}


float _wrap_btJacobianEntry_getDiagonal_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btScalar)((btJacobianEntry const *)arg1)->getDiagonal();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btJacobianEntry_getNonDiagonal__SWIG_0_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btJacobianEntry *_swig_go_1, float _swig_go_2) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btJacobianEntry *arg2 = 0 ;
  btScalar arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btJacobianEntry **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (btScalar)((btJacobianEntry const *)arg1)->getNonDiagonal((btJacobianEntry const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btJacobianEntry_getNonDiagonal__SWIG_1_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btJacobianEntry *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btJacobianEntry *arg2 = 0 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btJacobianEntry **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  result = (btScalar)((btJacobianEntry const *)arg1)->getNonDiagonal((btJacobianEntry const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btJacobianEntry_getRelativeVelocity_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->getRelativeVelocity((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_linearJointAxis_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearJointAxis = *arg2;
  
}


btVector3 *_wrap_btJacobianEntry_m_linearJointAxis_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_linearJointAxis);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_aJ_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aJ = *arg2;
  
}


btVector3 *_wrap_btJacobianEntry_m_aJ_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_aJ);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_bJ_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bJ = *arg2;
  
}


btVector3 *_wrap_btJacobianEntry_m_bJ_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_bJ);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_0MinvJt_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_0MinvJt = *arg2;
  
}


btVector3 *_wrap_btJacobianEntry_m_0MinvJt_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_0MinvJt);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_1MinvJt_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, btVector3 *_swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_1MinvJt = *arg2;
  
}


btVector3 *_wrap_btJacobianEntry_m_1MinvJt_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_1MinvJt);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJacobianEntry_m_Adiag_set_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0, float _swig_go_1) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_Adiag = arg2;
  
}


float _wrap_btJacobianEntry_m_Adiag_get_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_Adiag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btJacobianEntry_bt_e001408c92acdfd7(btJacobianEntry *_swig_go_0) {
  btJacobianEntry *arg1 = (btJacobianEntry *) 0 ;
  
  arg1 = *(btJacobianEntry **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSolverBody_m_worldTransform_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btTransform *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_worldTransform = *arg2;
  
}


btTransform *_wrap_btSolverBody_m_worldTransform_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_worldTransform);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_deltaLinearVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_deltaLinearVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_deltaLinearVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_deltaLinearVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_deltaAngularVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_deltaAngularVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_deltaAngularVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_deltaAngularVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_angularFactor_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularFactor = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_angularFactor_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_angularFactor);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_linearFactor_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearFactor = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_linearFactor_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_linearFactor);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_invMass_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_invMass = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_invMass_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_invMass);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_pushVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pushVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_pushVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_pushVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_turnVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_turnVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_turnVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_turnVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_linearVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_linearVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_linearVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_angularVelocity_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularVelocity = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_angularVelocity_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_angularVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_externalForceImpulse_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_externalForceImpulse = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_externalForceImpulse_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_externalForceImpulse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_externalTorqueImpulse_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_externalTorqueImpulse = *arg2;
  
}


btVector3 *_wrap_btSolverBody_m_externalTorqueImpulse_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_externalTorqueImpulse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_m_originalBody_set_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btRigidBody *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_originalBody = arg2;
  
}


btRigidBody *_wrap_btSolverBody_m_originalBody_get_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btRigidBody *) ((arg1)->m_originalBody);
  *(btRigidBody **)&_swig_go_result = (btRigidBody *)result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_setWorldTransform_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btTransform *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btTransform *arg2 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  (arg1)->setWorldTransform((btTransform const &)*arg2);
  
}


btTransform *_wrap_btSolverBody_getWorldTransform_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btTransform *) &((btSolverBody const *)arg1)->getWorldTransform();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_getVelocityInLocalPointNoDelta_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btSolverBody const *)arg1)->getVelocityInLocalPointNoDelta((btVector3 const &)*arg2,*arg3);
  
}


void _wrap_btSolverBody_getVelocityInLocalPointObsolete_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btSolverBody const *)arg1)->getVelocityInLocalPointObsolete((btVector3 const &)*arg2,*arg3);
  
}


void _wrap_btSolverBody_getAngularVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btSolverBody const *)arg1)->getAngularVelocity(*arg2);
  
}


void _wrap_btSolverBody_applyImpulse_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->applyImpulse((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btSolverBody_internalApplyPushImpulse_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->internalApplyPushImpulse((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_btSolverBody_getDeltaLinearVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->getDeltaLinearVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_getDeltaAngularVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->getDeltaAngularVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_getPushVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->getPushVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_getTurnVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->getTurnVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_internalGetDeltaLinearVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->internalGetDeltaLinearVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_internalGetDeltaAngularVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->internalGetDeltaAngularVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_internalGetAngularFactor_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->internalGetAngularFactor();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_internalGetInvMass_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSolverBody const *)arg1)->internalGetInvMass();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_internalSetInvMass_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->internalSetInvMass((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btSolverBody_internalGetPushVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->internalGetPushVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSolverBody_internalGetTurnVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->internalGetTurnVelocity();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverBody_internalGetVelocityInLocalPointObsolete_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btSolverBody const *)arg1)->internalGetVelocityInLocalPointObsolete((btVector3 const &)*arg2,*arg3);
  
}


void _wrap_btSolverBody_internalGetAngularVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btSolverBody const *)arg1)->internalGetAngularVelocity(*arg2);
  
}


void _wrap_btSolverBody_internalApplyImpulse_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->internalApplyImpulse((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btSolverBody_writebackVelocity_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  (arg1)->writebackVelocity();
  
}


void _wrap_btSolverBody_writebackVelocityAndTransform_bt_e001408c92acdfd7(btSolverBody *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->writebackVelocityAndTransform(arg2,arg3);
  
}


btSolverBody *_wrap_new_btSolverBody_bt_e001408c92acdfd7() {
  btSolverBody *result = 0 ;
  btSolverBody *_swig_go_result;
  
  
  result = (btSolverBody *)new btSolverBody();
  *(btSolverBody **)&_swig_go_result = (btSolverBody *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSolverBody_bt_e001408c92acdfd7(btSolverBody *_swig_go_0) {
  btSolverBody *arg1 = (btSolverBody *) 0 ;
  
  arg1 = *(btSolverBody **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSolverConstraint_m_relpos1CrossNormal_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_relpos1CrossNormal = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_relpos1CrossNormal_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_relpos1CrossNormal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_contactNormal1_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_contactNormal1 = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_contactNormal1_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_contactNormal1);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_relpos2CrossNormal_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_relpos2CrossNormal = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_relpos2CrossNormal_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_relpos2CrossNormal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_contactNormal2_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_contactNormal2 = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_contactNormal2_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_contactNormal2);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_angularComponentA_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularComponentA = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_angularComponentA_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_angularComponentA);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_angularComponentB_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularComponentB = *arg2;
  
}


btVector3 *_wrap_btSolverConstraint_m_angularComponentB_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_angularComponentB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_appliedPushImpulse_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedPushImpulse = arg2;
  
}


float _wrap_btSolverConstraint_m_appliedPushImpulse_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_appliedPushImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_appliedImpulse_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulse = arg2;
  
}


float _wrap_btSolverConstraint_m_appliedImpulse_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_appliedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_friction_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


float _wrap_btSolverConstraint_m_friction_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_jacDiagABInv_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_jacDiagABInv = arg2;
  
}


float _wrap_btSolverConstraint_m_jacDiagABInv_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_jacDiagABInv);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_rhs_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_rhs = arg2;
  
}


float _wrap_btSolverConstraint_m_rhs_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_rhs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_cfm_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_cfm = arg2;
  
}


float _wrap_btSolverConstraint_m_cfm_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_cfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_lowerLimit_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_lowerLimit = arg2;
  
}


float _wrap_btSolverConstraint_m_lowerLimit_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_lowerLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_upperLimit_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_upperLimit = arg2;
  
}


float _wrap_btSolverConstraint_m_upperLimit_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_upperLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_rhsPenetration_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, float _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_rhsPenetration = arg2;
  
}


float _wrap_btSolverConstraint_m_rhsPenetration_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_rhsPenetration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_overrideNumSolverIterations_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, intgo _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_overrideNumSolverIterations = arg2;
  
}


intgo _wrap_btSolverConstraint_m_overrideNumSolverIterations_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_overrideNumSolverIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_frictionIndex_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, intgo _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_frictionIndex = arg2;
  
}


intgo _wrap_btSolverConstraint_m_frictionIndex_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_frictionIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_solverBodyIdA_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, intgo _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_solverBodyIdA = arg2;
  
}


intgo _wrap_btSolverConstraint_m_solverBodyIdA_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_solverBodyIdA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverConstraint_m_solverBodyIdB_set_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0, intgo _swig_go_1) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_solverBodyIdB = arg2;
  
}


intgo _wrap_btSolverConstraint_m_solverBodyIdB_get_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_solverBodyIdB);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_BT_SOLVER_CONTACT_1D_btSolverConstraint_bt_e001408c92acdfd7() {
  btSolverConstraint::btSolverConstraintType result;
  intgo _swig_go_result;
  
  
  result = btSolverConstraint::BT_SOLVER_CONTACT_1D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SOLVER_FRICTION_1D_btSolverConstraint_bt_e001408c92acdfd7() {
  btSolverConstraint::btSolverConstraintType result;
  intgo _swig_go_result;
  
  
  result = btSolverConstraint::BT_SOLVER_FRICTION_1D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btSolverConstraint *_wrap_new_btSolverConstraint_bt_e001408c92acdfd7() {
  btSolverConstraint *result = 0 ;
  btSolverConstraint *_swig_go_result;
  
  
  result = (btSolverConstraint *)new btSolverConstraint();
  *(btSolverConstraint **)&_swig_go_result = (btSolverConstraint *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSolverConstraint_bt_e001408c92acdfd7(btSolverConstraint *_swig_go_0) {
  btSolverConstraint *arg1 = (btSolverConstraint *) 0 ;
  
  arg1 = *(btSolverConstraint **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_POINT2POINT_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = POINT2POINT_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HINGE_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = HINGE_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONETWIST_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = CONETWIST_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_D6_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = D6_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SLIDER_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = SLIDER_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONTACT_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = CONTACT_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_D6_SPRING_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = D6_SPRING_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GEAR_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = GEAR_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FIXED_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = FIXED_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_D6_SPRING_2_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = D6_SPRING_2_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAX_CONSTRAINT_TYPE_bt_e001408c92acdfd7() {
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  
  result = MAX_CONSTRAINT_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONSTRAINT_ERP_bt_e001408c92acdfd7() {
  btConstraintParams result;
  intgo _swig_go_result;
  
  
  result = BT_CONSTRAINT_ERP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONSTRAINT_STOP_ERP_bt_e001408c92acdfd7() {
  btConstraintParams result;
  intgo _swig_go_result;
  
  
  result = BT_CONSTRAINT_STOP_ERP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONSTRAINT_CFM_bt_e001408c92acdfd7() {
  btConstraintParams result;
  intgo _swig_go_result;
  
  
  result = BT_CONSTRAINT_CFM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONSTRAINT_STOP_CFM_bt_e001408c92acdfd7() {
  btConstraintParams result;
  intgo _swig_go_result;
  
  
  result = BT_CONSTRAINT_STOP_CFM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btJointFeedback_m_appliedForceBodyA_set_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0, btVector3 *_swig_go_1) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedForceBodyA = *arg2;
  
}


btVector3 *_wrap_btJointFeedback_m_appliedForceBodyA_get_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_appliedForceBodyA);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJointFeedback_m_appliedTorqueBodyA_set_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0, btVector3 *_swig_go_1) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedTorqueBodyA = *arg2;
  
}


btVector3 *_wrap_btJointFeedback_m_appliedTorqueBodyA_get_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_appliedTorqueBodyA);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJointFeedback_m_appliedForceBodyB_set_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0, btVector3 *_swig_go_1) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedForceBodyB = *arg2;
  
}


btVector3 *_wrap_btJointFeedback_m_appliedForceBodyB_get_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_appliedForceBodyB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btJointFeedback_m_appliedTorqueBodyB_set_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0, btVector3 *_swig_go_1) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedTorqueBodyB = *arg2;
  
}


btVector3 *_wrap_btJointFeedback_m_appliedTorqueBodyB_get_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_appliedTorqueBodyB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


btJointFeedback *_wrap_new_btJointFeedback_bt_e001408c92acdfd7() {
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  
  result = (btJointFeedback *)new btJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


void _wrap_delete_btJointFeedback_bt_e001408c92acdfd7(btJointFeedback *_swig_go_0) {
  btJointFeedback *arg1 = (btJointFeedback *) 0 ;
  
  arg1 = *(btJointFeedback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btTypedConstraint_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  delete arg1;
  
}


btRigidBody *_wrap_btTypedConstraint_getFixedBody_bt_e001408c92acdfd7() {
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  
  result = (btRigidBody *) &btTypedConstraint::getFixedBody();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_getOverrideNumSolverIterations_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)((btTypedConstraint const *)arg1)->getOverrideNumSolverIterations();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setOverrideNumSolverIterations_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setOverrideNumSolverIterations(arg2);
  
}


void _wrap_btTypedConstraint_buildJacobian_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  (arg1)->buildJacobian();
  
}


void _wrap_btTypedConstraint_setupSolverConstraint_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, btAlignedObjectArray< btSolverConstraint > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btConstraintArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(btConstraintArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  (arg1)->setupSolverConstraint(*arg2,arg3,arg4,arg5);
  
}


void _wrap_btTypedConstraint_getInfo1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  (arg1)->getInfo1(arg2);
  
}


void _wrap_btTypedConstraint_getInfo2_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  
  (arg1)->getInfo2(arg2);
  
}


void _wrap_btTypedConstraint_internalSetAppliedImpulse_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, float _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->internalSetAppliedImpulse(arg2);
  
}


float _wrap_btTypedConstraint_internalGetAppliedImpulse_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->internalGetAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btTypedConstraint_getBreakingImpulseThreshold_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btTypedConstraint const *)arg1)->getBreakingImpulseThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setBreakingImpulseThreshold_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, float _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setBreakingImpulseThreshold(arg2);
  
}


bool _wrap_btTypedConstraint_isEnabled_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (bool)((btTypedConstraint const *)arg1)->isEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setEnabled_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, bool _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setEnabled(arg2);
  
}


void _wrap_btTypedConstraint_solveConstraintObsolete_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, btSolverBody *_swig_go_1, btSolverBody *_swig_go_2, float _swig_go_3) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btSolverBody *arg2 = 0 ;
  btSolverBody *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(btSolverBody **)&_swig_go_1; 
  arg3 = *(btSolverBody **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->solveConstraintObsolete(*arg2,*arg3,arg4);
  
}


btRigidBody *_wrap_btTypedConstraint_getRigidBodyA__SWIG_0_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &((btTypedConstraint const *)arg1)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btTypedConstraint_getRigidBodyB__SWIG_0_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &((btTypedConstraint const *)arg1)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btTypedConstraint_getRigidBodyA__SWIG_1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &(arg1)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btTypedConstraint_getRigidBodyB__SWIG_1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &(arg1)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_getUserConstraintType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)((btTypedConstraint const *)arg1)->getUserConstraintType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setUserConstraintType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserConstraintType(arg2);
  
}


void _wrap_btTypedConstraint_setUserConstraintId_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUserConstraintId(arg2);
  
}


intgo _wrap_btTypedConstraint_getUserConstraintId_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)((btTypedConstraint const *)arg1)->getUserConstraintId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setUserConstraintPtr_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, void *_swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->setUserConstraintPtr(arg2);
  
}


void *_wrap_btTypedConstraint_getUserConstraintPtr_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (void *)(arg1)->getUserConstraintPtr();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setJointFeedback_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, btJointFeedback *_swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btJointFeedback *arg2 = (btJointFeedback *) 0 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(btJointFeedback **)&_swig_go_1; 
  
  (arg1)->setJointFeedback(arg2);
  
}


btJointFeedback *_wrap_btTypedConstraint_getJointFeedback__SWIG_0_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btJointFeedback *)((btTypedConstraint const *)arg1)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


btJointFeedback *_wrap_btTypedConstraint_getJointFeedback__SWIG_1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btJointFeedback *)(arg1)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_getUid_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)((btTypedConstraint const *)arg1)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTypedConstraint_needsFeedback_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (bool)((btTypedConstraint const *)arg1)->needsFeedback();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_enableFeedback_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, bool _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->enableFeedback(arg2);
  
}


float _wrap_btTypedConstraint_getAppliedImpulse_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btTypedConstraint const *)arg1)->getAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_getConstraintType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btTypedConstraintType)((btTypedConstraint const *)arg1)->getConstraintType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setDbgDrawSize_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, float _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setDbgDrawSize(arg2);
  
}


float _wrap_btTypedConstraint_getDbgDrawSize_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->getDbgDrawSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraint_setParam__SWIG_0_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->setParam(arg2,arg3,arg4);
  
}


void _wrap_btTypedConstraint_setParam__SWIG_1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setParam(arg2,arg3);
  
}


float _wrap_btTypedConstraint_getParam__SWIG_0_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btScalar)((btTypedConstraint const *)arg1)->getParam(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btTypedConstraint_getParam__SWIG_1_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btTypedConstraint const *)arg1)->getParam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_calculateSerializeBufferSize_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)((btTypedConstraint const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btTypedConstraint_serialize_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btTypedConstraint const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SetbtTypedConstraint_M_objectType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  if (swig_b0) (swig_b0)->m_objectType = arg2;
  
}


intgo _wrap_GetbtTypedConstraint_M_objectType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  result = (int) ((swig_b0)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTypedConstraint_getObjectType_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  result = (int)((btTypedObject const *)swig_b0)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAdjustAngleToLimits_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (btScalar)btAdjustAngleToLimits(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_rbA_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, btRigidBodyFloatData *_swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  btRigidBodyFloatData *arg2 = (btRigidBodyFloatData *) 0 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = *(btRigidBodyFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbA = arg2;
  
}


btRigidBodyFloatData *_wrap_btTypedConstraintFloatData_m_rbA_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  btRigidBodyFloatData *result = 0 ;
  btRigidBodyFloatData *_swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (btRigidBodyFloatData *) ((arg1)->m_rbA);
  *(btRigidBodyFloatData **)&_swig_go_result = (btRigidBodyFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_rbB_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, btRigidBodyFloatData *_swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  btRigidBodyFloatData *arg2 = (btRigidBodyFloatData *) 0 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = *(btRigidBodyFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbB = arg2;
  
}


btRigidBodyFloatData *_wrap_btTypedConstraintFloatData_m_rbB_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  btRigidBodyFloatData *result = 0 ;
  btRigidBodyFloatData *_swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (btRigidBodyFloatData *) ((arg1)->m_rbB);
  *(btRigidBodyFloatData **)&_swig_go_result = (btRigidBodyFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_name_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, _gostring_ _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTypedConstraintFloatData_m_name_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_objectType_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_objectType_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_userConstraintType_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintType = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_userConstraintType_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_userConstraintId_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintId = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_userConstraintId_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_needsFeedback_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_needsFeedback = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_needsFeedback_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_needsFeedback);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_appliedImpulse_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulse = arg2;
  
}


float _wrap_btTypedConstraintFloatData_m_appliedImpulse_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_appliedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_dbgDrawSize_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_dbgDrawSize = arg2;
  
}


float _wrap_btTypedConstraintFloatData_m_dbgDrawSize_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_dbgDrawSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_disableCollisionsBetweenLinkedBodies = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_disableCollisionsBetweenLinkedBodies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_overrideNumSolverIterations = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_overrideNumSolverIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_breakingImpulseThreshold = arg2;
  
}


float _wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_breakingImpulseThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintFloatData_m_isEnabled_set_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_isEnabled = arg2;
  
}


intgo _wrap_btTypedConstraintFloatData_m_isEnabled_get_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_isEnabled);
  _swig_go_result = result; 
  return _swig_go_result;
}


btTypedConstraintFloatData *_wrap_new_btTypedConstraintFloatData_bt_e001408c92acdfd7() {
  btTypedConstraintFloatData *result = 0 ;
  btTypedConstraintFloatData *_swig_go_result;
  
  
  result = (btTypedConstraintFloatData *)new btTypedConstraintFloatData();
  *(btTypedConstraintFloatData **)&_swig_go_result = (btTypedConstraintFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTypedConstraintFloatData_bt_e001408c92acdfd7(btTypedConstraintFloatData *_swig_go_0) {
  btTypedConstraintFloatData *arg1 = (btTypedConstraintFloatData *) 0 ;
  
  arg1 = *(btTypedConstraintFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTypedConstraintData_m_rbA_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, btRigidBodyFloatData *_swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  btRigidBodyFloatData *arg2 = (btRigidBodyFloatData *) 0 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = *(btRigidBodyFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbA = arg2;
  
}


btRigidBodyFloatData *_wrap_btTypedConstraintData_m_rbA_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  btRigidBodyFloatData *result = 0 ;
  btRigidBodyFloatData *_swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (btRigidBodyFloatData *) ((arg1)->m_rbA);
  *(btRigidBodyFloatData **)&_swig_go_result = (btRigidBodyFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_rbB_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, btRigidBodyFloatData *_swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  btRigidBodyFloatData *arg2 = (btRigidBodyFloatData *) 0 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = *(btRigidBodyFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbB = arg2;
  
}


btRigidBodyFloatData *_wrap_btTypedConstraintData_m_rbB_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  btRigidBodyFloatData *result = 0 ;
  btRigidBodyFloatData *_swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (btRigidBodyFloatData *) ((arg1)->m_rbB);
  *(btRigidBodyFloatData **)&_swig_go_result = (btRigidBodyFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_name_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, _gostring_ _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTypedConstraintData_m_name_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_objectType_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_objectType_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_userConstraintType_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintType = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_userConstraintType_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_userConstraintId_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintId = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_userConstraintId_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_needsFeedback_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_needsFeedback = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_needsFeedback_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_needsFeedback);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_appliedImpulse_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulse = arg2;
  
}


float _wrap_btTypedConstraintData_m_appliedImpulse_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_appliedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_dbgDrawSize_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_dbgDrawSize = arg2;
  
}


float _wrap_btTypedConstraintData_m_dbgDrawSize_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_dbgDrawSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_disableCollisionsBetweenLinkedBodies = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_disableCollisionsBetweenLinkedBodies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_overrideNumSolverIterations_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_overrideNumSolverIterations = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_overrideNumSolverIterations_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_overrideNumSolverIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_breakingImpulseThreshold_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, float _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_breakingImpulseThreshold = arg2;
  
}


float _wrap_btTypedConstraintData_m_breakingImpulseThreshold_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_breakingImpulseThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintData_m_isEnabled_set_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_isEnabled = arg2;
  
}


intgo _wrap_btTypedConstraintData_m_isEnabled_get_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_isEnabled);
  _swig_go_result = result; 
  return _swig_go_result;
}


btTypedConstraintData *_wrap_new_btTypedConstraintData_bt_e001408c92acdfd7() {
  btTypedConstraintData *result = 0 ;
  btTypedConstraintData *_swig_go_result;
  
  
  result = (btTypedConstraintData *)new btTypedConstraintData();
  *(btTypedConstraintData **)&_swig_go_result = (btTypedConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTypedConstraintData_bt_e001408c92acdfd7(btTypedConstraintData *_swig_go_0) {
  btTypedConstraintData *arg1 = (btTypedConstraintData *) 0 ;
  
  arg1 = *(btTypedConstraintData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTypedConstraintDoubleData_m_rbA_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, btRigidBodyDoubleData *_swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  btRigidBodyDoubleData *arg2 = (btRigidBodyDoubleData *) 0 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = *(btRigidBodyDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbA = arg2;
  
}


btRigidBodyDoubleData *_wrap_btTypedConstraintDoubleData_m_rbA_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  btRigidBodyDoubleData *result = 0 ;
  btRigidBodyDoubleData *_swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (btRigidBodyDoubleData *) ((arg1)->m_rbA);
  *(btRigidBodyDoubleData **)&_swig_go_result = (btRigidBodyDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_rbB_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, btRigidBodyDoubleData *_swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  btRigidBodyDoubleData *arg2 = (btRigidBodyDoubleData *) 0 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = *(btRigidBodyDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbB = arg2;
  
}


btRigidBodyDoubleData *_wrap_btTypedConstraintDoubleData_m_rbB_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  btRigidBodyDoubleData *result = 0 ;
  btRigidBodyDoubleData *_swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (btRigidBodyDoubleData *) ((arg1)->m_rbB);
  *(btRigidBodyDoubleData **)&_swig_go_result = (btRigidBodyDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_name_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->m_name;
    if (arg2) {
      arg1->m_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTypedConstraintDoubleData_m_name_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_objectType_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_objectType_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_userConstraintType_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintType = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_userConstraintType_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_userConstraintId_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_userConstraintId = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_userConstraintId_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_userConstraintId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_needsFeedback_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_needsFeedback = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_needsFeedback_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_needsFeedback);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_appliedImpulse_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulse = arg2;
  
}


double _wrap_btTypedConstraintDoubleData_m_appliedImpulse_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_appliedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_dbgDrawSize_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_dbgDrawSize = arg2;
  
}


double _wrap_btTypedConstraintDoubleData_m_dbgDrawSize_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_dbgDrawSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_disableCollisionsBetweenLinkedBodies = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_disableCollisionsBetweenLinkedBodies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_overrideNumSolverIterations = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_overrideNumSolverIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_breakingImpulseThreshold = arg2;
  
}


double _wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_breakingImpulseThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_m_isEnabled_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, intgo _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_isEnabled = arg2;
  
}


intgo _wrap_btTypedConstraintDoubleData_m_isEnabled_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_isEnabled);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTypedConstraintDoubleData_padding_set_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->padding, (const char *)arg2, 4-1);
      arg1->padding[4-1] = 0;
    } else {
      arg1->padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTypedConstraintDoubleData_padding_get_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btTypedConstraintDoubleData *_wrap_new_btTypedConstraintDoubleData_bt_e001408c92acdfd7() {
  btTypedConstraintDoubleData *result = 0 ;
  btTypedConstraintDoubleData *_swig_go_result;
  
  
  result = (btTypedConstraintDoubleData *)new btTypedConstraintDoubleData();
  *(btTypedConstraintDoubleData **)&_swig_go_result = (btTypedConstraintDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTypedConstraintDoubleData_bt_e001408c92acdfd7(btTypedConstraintDoubleData *_swig_go_0) {
  btTypedConstraintDoubleData *arg1 = (btTypedConstraintDoubleData *) 0 ;
  
  arg1 = *(btTypedConstraintDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


btAngularLimit *_wrap_new_btAngularLimit_bt_e001408c92acdfd7() {
  btAngularLimit *result = 0 ;
  btAngularLimit *_swig_go_result;
  
  
  result = (btAngularLimit *)new btAngularLimit();
  *(btAngularLimit **)&_swig_go_result = (btAngularLimit *)result; 
  return _swig_go_result;
}


void _wrap_btAngularLimit_set__SWIG_0_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  (arg1)->set(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_btAngularLimit_set__SWIG_1_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  (arg1)->set(arg2,arg3,arg4,arg5);
  
}


void _wrap_btAngularLimit_set__SWIG_2_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->set(arg2,arg3,arg4);
  
}


void _wrap_btAngularLimit_set__SWIG_3_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->set(arg2,arg3);
  
}


void _wrap_btAngularLimit_test_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float _swig_go_1) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->test(arg2);
  
}


float _wrap_btAngularLimit_getSoftness_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getSoftness();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getBiasFactor_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getBiasFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getRelaxationFactor_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getRelaxationFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getCorrection_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getCorrection();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getSign_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getSign();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getHalfRange_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getHalfRange();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btAngularLimit_isLimit_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (bool)((btAngularLimit const *)arg1)->isLimit();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btAngularLimit_fit_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0, float *_swig_go_1) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar *arg2 = 0 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  ((btAngularLimit const *)arg1)->fit(*arg2);
  
}


float _wrap_btAngularLimit_getError_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getError();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getLow_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getLow();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btAngularLimit_getHigh_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  result = (btScalar)((btAngularLimit const *)arg1)->getHigh();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btAngularLimit_bt_e001408c92acdfd7(btAngularLimit *_swig_go_0) {
  btAngularLimit *arg1 = (btAngularLimit *) 0 ;
  
  arg1 = *(btAngularLimit **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btHashString_m_string1_set_bt_e001408c92acdfd7(btHashString *_swig_go_0, std::string *_swig_go_1) {
  btHashString *arg1 = (btHashString *) 0 ;
  std::string arg2 ;
  std::string *argp2 ;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg2 = (std::string)*argp2;
  
  
  if (arg1) (arg1)->m_string1 = arg2;
  
}


std::string *_wrap_btHashString_m_string1_get_bt_e001408c92acdfd7(btHashString *_swig_go_0) {
  btHashString *arg1 = (btHashString *) 0 ;
  std::string result;
  std::string *_swig_go_result;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  
  result =  ((arg1)->m_string1);
  *(std::string **)&_swig_go_result = new std::string(result); 
  return _swig_go_result;
}


void _wrap_btHashString_m_hash_set_bt_e001408c92acdfd7(btHashString *_swig_go_0, intgo _swig_go_1) {
  btHashString *arg1 = (btHashString *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->m_hash = arg2;
  
}


intgo _wrap_btHashString_m_hash_get_bt_e001408c92acdfd7(btHashString *_swig_go_0) {
  btHashString *arg1 = (btHashString *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->m_hash);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHashString_getHash_bt_e001408c92acdfd7(btHashString *_swig_go_0) {
  btHashString *arg1 = (btHashString *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  
  result = (unsigned int)((btHashString const *)arg1)->getHash();
  _swig_go_result = result; 
  return _swig_go_result;
}


btHashString *_wrap_new_btHashString__SWIG_0_bt_e001408c92acdfd7() {
  btHashString *result = 0 ;
  btHashString *_swig_go_result;
  
  
  result = (btHashString *)new btHashString();
  *(btHashString **)&_swig_go_result = (btHashString *)result; 
  return _swig_go_result;
}


btHashString *_wrap_new_btHashString__SWIG_1_bt_e001408c92acdfd7(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  btHashString *result = 0 ;
  btHashString *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (btHashString *)new btHashString((char const *)arg1);
  *(btHashString **)&_swig_go_result = (btHashString *)result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_btHashString_equals_bt_e001408c92acdfd7(btHashString *_swig_go_0, btHashString *_swig_go_1) {
  btHashString *arg1 = (btHashString *) 0 ;
  btHashString *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  arg2 = *(btHashString **)&_swig_go_1; 
  
  result = (bool)((btHashString const *)arg1)->equals((btHashString const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btHashString_bt_e001408c92acdfd7(btHashString *_swig_go_0) {
  btHashString *arg1 = (btHashString *) 0 ;
  
  arg1 = *(btHashString **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_HASH_NULL_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)BT_HASH_NULL;
  _swig_go_result = result; 
  return _swig_go_result;
}


btHashInt *_wrap_new_btHashInt__SWIG_0_bt_e001408c92acdfd7() {
  btHashInt *result = 0 ;
  btHashInt *_swig_go_result;
  
  
  result = (btHashInt *)new btHashInt();
  *(btHashInt **)&_swig_go_result = (btHashInt *)result; 
  return _swig_go_result;
}


btHashInt *_wrap_new_btHashInt__SWIG_1_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  btHashInt *result = 0 ;
  btHashInt *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (btHashInt *)new btHashInt(arg1);
  *(btHashInt **)&_swig_go_result = (btHashInt *)result; 
  return _swig_go_result;
}


intgo _wrap_btHashInt_getUid1_bt_e001408c92acdfd7(btHashInt *_swig_go_0) {
  btHashInt *arg1 = (btHashInt *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashInt **)&_swig_go_0; 
  
  result = (int)((btHashInt const *)arg1)->getUid1();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHashInt_setUid1_bt_e001408c92acdfd7(btHashInt *_swig_go_0, intgo _swig_go_1) {
  btHashInt *arg1 = (btHashInt *) 0 ;
  int arg2 ;
  
  arg1 = *(btHashInt **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setUid1(arg2);
  
}


bool _wrap_btHashInt_equals_bt_e001408c92acdfd7(btHashInt *_swig_go_0, btHashInt *_swig_go_1) {
  btHashInt *arg1 = (btHashInt *) 0 ;
  btHashInt *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHashInt **)&_swig_go_0; 
  arg2 = *(btHashInt **)&_swig_go_1; 
  
  result = (bool)((btHashInt const *)arg1)->equals((btHashInt const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHashInt_getHash_bt_e001408c92acdfd7(btHashInt *_swig_go_0) {
  btHashInt *arg1 = (btHashInt *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashInt **)&_swig_go_0; 
  
  result = (unsigned int)((btHashInt const *)arg1)->getHash();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btHashInt_bt_e001408c92acdfd7(btHashInt *_swig_go_0) {
  btHashInt *arg1 = (btHashInt *) 0 ;
  
  arg1 = *(btHashInt **)&_swig_go_0; 
  
  delete arg1;
  
}


btHashPtr *_wrap_new_btHashPtr__SWIG_0_bt_e001408c92acdfd7() {
  btHashPtr *result = 0 ;
  btHashPtr *_swig_go_result;
  
  
  result = (btHashPtr *)new btHashPtr();
  *(btHashPtr **)&_swig_go_result = (btHashPtr *)result; 
  return _swig_go_result;
}


btHashPtr *_wrap_new_btHashPtr__SWIG_1_bt_e001408c92acdfd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  btHashPtr *result = 0 ;
  btHashPtr *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (btHashPtr *)new btHashPtr((void const *)arg1);
  *(btHashPtr **)&_swig_go_result = (btHashPtr *)result; 
  return _swig_go_result;
}


void *_wrap_btHashPtr_getPointer_bt_e001408c92acdfd7(btHashPtr *_swig_go_0) {
  btHashPtr *arg1 = (btHashPtr *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btHashPtr **)&_swig_go_0; 
  
  result = (void *)((btHashPtr const *)arg1)->getPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


bool _wrap_btHashPtr_equals_bt_e001408c92acdfd7(btHashPtr *_swig_go_0, btHashPtr *_swig_go_1) {
  btHashPtr *arg1 = (btHashPtr *) 0 ;
  btHashPtr *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHashPtr **)&_swig_go_0; 
  arg2 = *(btHashPtr **)&_swig_go_1; 
  
  result = (bool)((btHashPtr const *)arg1)->equals((btHashPtr const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHashPtr_getHash_bt_e001408c92acdfd7(btHashPtr *_swig_go_0) {
  btHashPtr *arg1 = (btHashPtr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashPtr **)&_swig_go_0; 
  
  result = (unsigned int)((btHashPtr const *)arg1)->getHash();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btHashPtr_bt_e001408c92acdfd7(btHashPtr *_swig_go_0) {
  btHashPtr *arg1 = (btHashPtr *) 0 ;
  
  arg1 = *(btHashPtr **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_sBulletDNAstr_set_bt_e001408c92acdfd7(_gostring_ _swig_go_0) {
  char *arg1 = (char *) (char *)0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  {
    if (arg1) strcpy((char *)sBulletDNAstr, (const char *)arg1);
    else sBulletDNAstr[0] = 0;
  }
  
  free(arg1); 
}


_gostring_ _wrap_sBulletDNAstr_get_bt_e001408c92acdfd7() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)(char *)sBulletDNAstr;
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_sBulletDNAlen_set_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  sBulletDNAlen = arg1;
  
}


intgo _wrap_sBulletDNAlen_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)sBulletDNAlen;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sBulletDNAstr64_set_bt_e001408c92acdfd7(_gostring_ _swig_go_0) {
  char *arg1 = (char *) (char *)0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  {
    if (arg1) strcpy((char *)sBulletDNAstr64, (const char *)arg1);
    else sBulletDNAstr64[0] = 0;
  }
  
  free(arg1); 
}


_gostring_ _wrap_sBulletDNAstr64_get_bt_e001408c92acdfd7() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)(char *)sBulletDNAstr64;
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_sBulletDNAlen64_set_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  sBulletDNAlen64 = arg1;
  
}


intgo _wrap_sBulletDNAlen64_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)sBulletDNAlen64;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btStrLen_bt_e001408c92acdfd7(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (int)btStrLen((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_btChunk_m_chunkCode_set_bt_e001408c92acdfd7(btChunk *_swig_go_0, intgo _swig_go_1) {
  btChunk *arg1 = (btChunk *) 0 ;
  int arg2 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_chunkCode = arg2;
  
}


intgo _wrap_btChunk_m_chunkCode_get_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_chunkCode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btChunk_m_length_set_bt_e001408c92acdfd7(btChunk *_swig_go_0, intgo _swig_go_1) {
  btChunk *arg1 = (btChunk *) 0 ;
  int arg2 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_length = arg2;
  
}


intgo _wrap_btChunk_m_length_get_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btChunk_m_oldPtr_set_bt_e001408c92acdfd7(btChunk *_swig_go_0, void *_swig_go_1) {
  btChunk *arg1 = (btChunk *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_oldPtr = arg2;
  
}


void *_wrap_btChunk_m_oldPtr_get_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_oldPtr);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btChunk_m_dna_nr_set_bt_e001408c92acdfd7(btChunk *_swig_go_0, intgo _swig_go_1) {
  btChunk *arg1 = (btChunk *) 0 ;
  int arg2 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_dna_nr = arg2;
  
}


intgo _wrap_btChunk_m_dna_nr_get_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_dna_nr);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btChunk_m_number_set_bt_e001408c92acdfd7(btChunk *_swig_go_0, intgo _swig_go_1) {
  btChunk *arg1 = (btChunk *) 0 ;
  int arg2 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_number = arg2;
  
}


intgo _wrap_btChunk_m_number_get_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_number);
  _swig_go_result = result; 
  return _swig_go_result;
}


btChunk *_wrap_new_btChunk_bt_e001408c92acdfd7() {
  btChunk *result = 0 ;
  btChunk *_swig_go_result;
  
  
  result = (btChunk *)new btChunk();
  *(btChunk **)&_swig_go_result = (btChunk *)result; 
  return _swig_go_result;
}


void _wrap_delete_btChunk_bt_e001408c92acdfd7(btChunk *_swig_go_0) {
  btChunk *arg1 = (btChunk *) 0 ;
  
  arg1 = *(btChunk **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_SERIALIZE_NO_BVH_bt_e001408c92acdfd7() {
  btSerializationFlags result;
  intgo _swig_go_result;
  
  
  result = BT_SERIALIZE_NO_BVH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SERIALIZE_NO_TRIANGLEINFOMAP_bt_e001408c92acdfd7() {
  btSerializationFlags result;
  intgo _swig_go_result;
  
  
  result = BT_SERIALIZE_NO_TRIANGLEINFOMAP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SERIALIZE_NO_DUPLICATE_ASSERT_bt_e001408c92acdfd7() {
  btSerializationFlags result;
  intgo _swig_go_result;
  
  
  result = BT_SERIALIZE_NO_DUPLICATE_ASSERT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SERIALIZE_CONTACT_MANIFOLDS_bt_e001408c92acdfd7() {
  btSerializationFlags result;
  intgo _swig_go_result;
  
  
  result = BT_SERIALIZE_CONTACT_MANIFOLDS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btSerializer_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  delete arg1;
  
}


char *_wrap_btSerializer_getBufferPointer_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  result = (unsigned char *)((btSerializer const *)arg1)->getBufferPointer();
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


intgo _wrap_btSerializer_getCurrentBufferSize_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  result = (int)((btSerializer const *)arg1)->getCurrentBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


btChunk *_wrap_btSerializer_allocate_bt_e001408c92acdfd7(btSerializer *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  size_t arg2 ;
  int arg3 ;
  btChunk *result = 0 ;
  btChunk *_swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btChunk *)(arg1)->allocate(arg2,arg3);
  *(btChunk **)&_swig_go_result = (btChunk *)result; 
  return _swig_go_result;
}


void _wrap_btSerializer_finalizeChunk_bt_e001408c92acdfd7(btSerializer *_swig_go_0, btChunk *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, void *_swig_go_4) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  btChunk *arg2 = (btChunk *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = *(btChunk **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  (arg1)->finalizeChunk(arg2,(char const *)arg3,arg4,arg5);
  
  free(arg3); 
}


void *_wrap_btSerializer_findPointer_bt_e001408c92acdfd7(btSerializer *_swig_go_0, void *_swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (void *)(arg1)->findPointer(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void *_wrap_btSerializer_getUniquePointer_bt_e001408c92acdfd7(btSerializer *_swig_go_0, void *_swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (void *)(arg1)->getUniquePointer(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btSerializer_startSerialization_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  (arg1)->startSerialization();
  
}


void _wrap_btSerializer_finishSerialization_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  (arg1)->finishSerialization();
  
}


_gostring_ _wrap_btSerializer_findNameForPointer_bt_e001408c92acdfd7(btSerializer *_swig_go_0, void *_swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (char *)((btSerializer const *)arg1)->findNameForPointer((void const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btSerializer_registerNameForPointer_bt_e001408c92acdfd7(btSerializer *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->registerNameForPointer((void const *)arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_btSerializer_serializeName_bt_e001408c92acdfd7(btSerializer *_swig_go_0, _gostring_ _swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->serializeName((char const *)arg2);
  
  free(arg2); 
}


intgo _wrap_btSerializer_getSerializationFlags_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  result = (int)((btSerializer const *)arg1)->getSerializationFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSerializer_setSerializationFlags_bt_e001408c92acdfd7(btSerializer *_swig_go_0, intgo _swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  int arg2 ;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setSerializationFlags(arg2);
  
}


intgo _wrap_btSerializer_getNumChunks_bt_e001408c92acdfd7(btSerializer *_swig_go_0) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  
  result = (int)((btSerializer const *)arg1)->getNumChunks();
  _swig_go_result = result; 
  return _swig_go_result;
}


btChunk *_wrap_btSerializer_getChunk_bt_e001408c92acdfd7(btSerializer *_swig_go_0, intgo _swig_go_1) {
  btSerializer *arg1 = (btSerializer *) 0 ;
  int arg2 ;
  btChunk *result = 0 ;
  btChunk *_swig_go_result;
  
  arg1 = *(btSerializer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btChunk *)((btSerializer const *)arg1)->getChunk(arg2);
  *(btChunk **)&_swig_go_result = (btChunk *)result; 
  return _swig_go_result;
}


btPointerUid *_wrap_new_btPointerUid_bt_e001408c92acdfd7() {
  btPointerUid *result = 0 ;
  btPointerUid *_swig_go_result;
  
  
  result = (btPointerUid *)new btPointerUid();
  *(btPointerUid **)&_swig_go_result = (btPointerUid *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPointerUid_bt_e001408c92acdfd7(btPointerUid *_swig_go_0) {
  btPointerUid *arg1 = (btPointerUid *) 0 ;
  
  arg1 = *(btPointerUid **)&_swig_go_0; 
  
  delete arg1;
  
}


btBulletSerializedArrays *_wrap_new_btBulletSerializedArrays_bt_e001408c92acdfd7() {
  btBulletSerializedArrays *result = 0 ;
  btBulletSerializedArrays *_swig_go_result;
  
  
  result = (btBulletSerializedArrays *)new btBulletSerializedArrays();
  *(btBulletSerializedArrays **)&_swig_go_result = (btBulletSerializedArrays *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_bvhsDouble_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btQuantizedBvhDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btQuantizedBvhDoubleData * > *arg2 = (btAlignedObjectArray< btQuantizedBvhDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btQuantizedBvhDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhsDouble = *arg2;
  
}


btAlignedObjectArray< btQuantizedBvhDoubleData * > *_wrap_btBulletSerializedArrays_m_bvhsDouble_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btQuantizedBvhDoubleData * > *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btQuantizedBvhDoubleData * > *)& ((arg1)->m_bvhsDouble);
  *(btAlignedObjectArray< btQuantizedBvhDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btQuantizedBvhDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_bvhsFloat_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btQuantizedBvhFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btQuantizedBvhFloatData * > *arg2 = (btAlignedObjectArray< btQuantizedBvhFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btQuantizedBvhFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhsFloat = *arg2;
  
}


btAlignedObjectArray< btQuantizedBvhFloatData * > *_wrap_btBulletSerializedArrays_m_bvhsFloat_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btQuantizedBvhFloatData * > *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btQuantizedBvhFloatData * > *)& ((arg1)->m_bvhsFloat);
  *(btAlignedObjectArray< btQuantizedBvhFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btQuantizedBvhFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_colShapeData_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btCollisionShapeData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionShapeData * > *arg2 = (btAlignedObjectArray< btCollisionShapeData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btCollisionShapeData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_colShapeData = *arg2;
  
}


btAlignedObjectArray< btCollisionShapeData * > *_wrap_btBulletSerializedArrays_m_colShapeData_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionShapeData * > *result = 0 ;
  btAlignedObjectArray< btCollisionShapeData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btCollisionShapeData * > *)& ((arg1)->m_colShapeData);
  *(btAlignedObjectArray< btCollisionShapeData * > **)&_swig_go_result = (btAlignedObjectArray< btCollisionShapeData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_dynamicWorldInfoDataDouble_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btDynamicsWorldDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btDynamicsWorldDoubleData * > *arg2 = (btAlignedObjectArray< btDynamicsWorldDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btDynamicsWorldDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_dynamicWorldInfoDataDouble = *arg2;
  
}


btAlignedObjectArray< btDynamicsWorldDoubleData * > *_wrap_btBulletSerializedArrays_m_dynamicWorldInfoDataDouble_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btDynamicsWorldDoubleData * > *result = 0 ;
  btAlignedObjectArray< btDynamicsWorldDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btDynamicsWorldDoubleData * > *)& ((arg1)->m_dynamicWorldInfoDataDouble);
  *(btAlignedObjectArray< btDynamicsWorldDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btDynamicsWorldDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_dynamicWorldInfoDataFloat_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btDynamicsWorldFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btDynamicsWorldFloatData * > *arg2 = (btAlignedObjectArray< btDynamicsWorldFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btDynamicsWorldFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_dynamicWorldInfoDataFloat = *arg2;
  
}


btAlignedObjectArray< btDynamicsWorldFloatData * > *_wrap_btBulletSerializedArrays_m_dynamicWorldInfoDataFloat_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btDynamicsWorldFloatData * > *result = 0 ;
  btAlignedObjectArray< btDynamicsWorldFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btDynamicsWorldFloatData * > *)& ((arg1)->m_dynamicWorldInfoDataFloat);
  *(btAlignedObjectArray< btDynamicsWorldFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btDynamicsWorldFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_rigidBodyDataDouble_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btRigidBodyDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btRigidBodyDoubleData * > *arg2 = (btAlignedObjectArray< btRigidBodyDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btRigidBodyDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rigidBodyDataDouble = *arg2;
  
}


btAlignedObjectArray< btRigidBodyDoubleData * > *_wrap_btBulletSerializedArrays_m_rigidBodyDataDouble_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btRigidBodyDoubleData * > *result = 0 ;
  btAlignedObjectArray< btRigidBodyDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btRigidBodyDoubleData * > *)& ((arg1)->m_rigidBodyDataDouble);
  *(btAlignedObjectArray< btRigidBodyDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btRigidBodyDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_rigidBodyDataFloat_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btRigidBodyFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btRigidBodyFloatData * > *arg2 = (btAlignedObjectArray< btRigidBodyFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btRigidBodyFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rigidBodyDataFloat = *arg2;
  
}


btAlignedObjectArray< btRigidBodyFloatData * > *_wrap_btBulletSerializedArrays_m_rigidBodyDataFloat_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btRigidBodyFloatData * > *result = 0 ;
  btAlignedObjectArray< btRigidBodyFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btRigidBodyFloatData * > *)& ((arg1)->m_rigidBodyDataFloat);
  *(btAlignedObjectArray< btRigidBodyFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btRigidBodyFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_collisionObjectDataDouble_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btCollisionObjectDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionObjectDoubleData * > *arg2 = (btAlignedObjectArray< btCollisionObjectDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btCollisionObjectDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionObjectDataDouble = *arg2;
  
}


btAlignedObjectArray< btCollisionObjectDoubleData * > *_wrap_btBulletSerializedArrays_m_collisionObjectDataDouble_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionObjectDoubleData * > *result = 0 ;
  btAlignedObjectArray< btCollisionObjectDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btCollisionObjectDoubleData * > *)& ((arg1)->m_collisionObjectDataDouble);
  *(btAlignedObjectArray< btCollisionObjectDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btCollisionObjectDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_collisionObjectDataFloat_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btCollisionObjectFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionObjectFloatData * > *arg2 = (btAlignedObjectArray< btCollisionObjectFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btCollisionObjectFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionObjectDataFloat = *arg2;
  
}


btAlignedObjectArray< btCollisionObjectFloatData * > *_wrap_btBulletSerializedArrays_m_collisionObjectDataFloat_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btCollisionObjectFloatData * > *result = 0 ;
  btAlignedObjectArray< btCollisionObjectFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btCollisionObjectFloatData * > *)& ((arg1)->m_collisionObjectDataFloat);
  *(btAlignedObjectArray< btCollisionObjectFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btCollisionObjectFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_constraintDataFloat_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btTypedConstraintFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintFloatData * > *arg2 = (btAlignedObjectArray< btTypedConstraintFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btTypedConstraintFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_constraintDataFloat = *arg2;
  
}


btAlignedObjectArray< btTypedConstraintFloatData * > *_wrap_btBulletSerializedArrays_m_constraintDataFloat_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintFloatData * > *result = 0 ;
  btAlignedObjectArray< btTypedConstraintFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btTypedConstraintFloatData * > *)& ((arg1)->m_constraintDataFloat);
  *(btAlignedObjectArray< btTypedConstraintFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btTypedConstraintFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_constraintDataDouble_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btTypedConstraintDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintDoubleData * > *arg2 = (btAlignedObjectArray< btTypedConstraintDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btTypedConstraintDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_constraintDataDouble = *arg2;
  
}


btAlignedObjectArray< btTypedConstraintDoubleData * > *_wrap_btBulletSerializedArrays_m_constraintDataDouble_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintDoubleData * > *result = 0 ;
  btAlignedObjectArray< btTypedConstraintDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btTypedConstraintDoubleData * > *)& ((arg1)->m_constraintDataDouble);
  *(btAlignedObjectArray< btTypedConstraintDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btTypedConstraintDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_constraintData_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btTypedConstraintData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintData * > *arg2 = (btAlignedObjectArray< btTypedConstraintData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btTypedConstraintData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_constraintData = *arg2;
  
}


btAlignedObjectArray< btTypedConstraintData * > *_wrap_btBulletSerializedArrays_m_constraintData_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btTypedConstraintData * > *result = 0 ;
  btAlignedObjectArray< btTypedConstraintData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btTypedConstraintData * > *)& ((arg1)->m_constraintData);
  *(btAlignedObjectArray< btTypedConstraintData * > **)&_swig_go_result = (btAlignedObjectArray< btTypedConstraintData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_softBodyFloatData_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btSoftBodyFloatData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btSoftBodyFloatData * > *arg2 = (btAlignedObjectArray< btSoftBodyFloatData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btSoftBodyFloatData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_softBodyFloatData = *arg2;
  
}


btAlignedObjectArray< btSoftBodyFloatData * > *_wrap_btBulletSerializedArrays_m_softBodyFloatData_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btSoftBodyFloatData * > *result = 0 ;
  btAlignedObjectArray< btSoftBodyFloatData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btSoftBodyFloatData * > *)& ((arg1)->m_softBodyFloatData);
  *(btAlignedObjectArray< btSoftBodyFloatData * > **)&_swig_go_result = (btAlignedObjectArray< btSoftBodyFloatData * > *)result; 
  return _swig_go_result;
}


void _wrap_btBulletSerializedArrays_m_softBodyDoubleData_set_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0, btAlignedObjectArray< btSoftBodyDoubleData * > *_swig_go_1) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btSoftBodyDoubleData * > *arg2 = (btAlignedObjectArray< btSoftBodyDoubleData * > *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btSoftBodyDoubleData * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_softBodyDoubleData = *arg2;
  
}


btAlignedObjectArray< btSoftBodyDoubleData * > *_wrap_btBulletSerializedArrays_m_softBodyDoubleData_get_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  btAlignedObjectArray< btSoftBodyDoubleData * > *result = 0 ;
  btAlignedObjectArray< btSoftBodyDoubleData * > *_swig_go_result;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btSoftBodyDoubleData * > *)& ((arg1)->m_softBodyDoubleData);
  *(btAlignedObjectArray< btSoftBodyDoubleData * > **)&_swig_go_result = (btAlignedObjectArray< btSoftBodyDoubleData * > *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBulletSerializedArrays_bt_e001408c92acdfd7(btBulletSerializedArrays *_swig_go_0) {
  btBulletSerializedArrays *arg1 = (btBulletSerializedArrays *) 0 ;
  
  arg1 = *(btBulletSerializedArrays **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDefaultSerializer_m_skipPointers_set_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, btHashMap< btHashPtr,void * > *_swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  btHashMap< btHashPtr,void * > *arg2 = (btHashMap< btHashPtr,void * > *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(btHashMap< btHashPtr,void * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_skipPointers = *arg2;
  
}


btHashMap< btHashPtr,void * > *_wrap_btDefaultSerializer_m_skipPointers_get_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  btHashMap< btHashPtr,void * > *result = 0 ;
  btHashMap< btHashPtr,void * > *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  result = (btHashMap< btHashPtr,void * > *)& ((arg1)->m_skipPointers);
  *(btHashMap< btHashPtr,void * > **)&_swig_go_result = (btHashMap< btHashPtr,void * > *)result; 
  return _swig_go_result;
}


btDefaultSerializer *_wrap_new_btDefaultSerializer__SWIG_0_bt_e001408c92acdfd7(intgo _swig_go_0, char *_swig_go_1) {
  int arg1 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  btDefaultSerializer *result = 0 ;
  btDefaultSerializer *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  result = (btDefaultSerializer *)new btDefaultSerializer(arg1,arg2);
  *(btDefaultSerializer **)&_swig_go_result = (btDefaultSerializer *)result; 
  return _swig_go_result;
}


btDefaultSerializer *_wrap_new_btDefaultSerializer__SWIG_1_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  btDefaultSerializer *result = 0 ;
  btDefaultSerializer *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (btDefaultSerializer *)new btDefaultSerializer(arg1);
  *(btDefaultSerializer **)&_swig_go_result = (btDefaultSerializer *)result; 
  return _swig_go_result;
}


btDefaultSerializer *_wrap_new_btDefaultSerializer__SWIG_2_bt_e001408c92acdfd7() {
  btDefaultSerializer *result = 0 ;
  btDefaultSerializer *_swig_go_result;
  
  
  result = (btDefaultSerializer *)new btDefaultSerializer();
  *(btDefaultSerializer **)&_swig_go_result = (btDefaultSerializer *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDefaultSerializer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btDefaultSerializer_getMemoryDnaSizeInBytes_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)btDefaultSerializer::getMemoryDnaSizeInBytes();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btDefaultSerializer_getMemoryDna_bt_e001408c92acdfd7() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)btDefaultSerializer::getMemoryDna();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btDefaultSerializer_insertHeader_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  (arg1)->insertHeader();
  
}


void _wrap_btDefaultSerializer_writeHeader_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, char *_swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  ((btDefaultSerializer const *)arg1)->writeHeader(arg2);
  
}


void _wrap_btDefaultSerializer_startSerialization_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  (arg1)->startSerialization();
  
}


void _wrap_btDefaultSerializer_finishSerialization_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  (arg1)->finishSerialization();
  
}


void *_wrap_btDefaultSerializer_getUniquePointer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, void *_swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (void *)(arg1)->getUniquePointer(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


char *_wrap_btDefaultSerializer_getBufferPointer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  result = (unsigned char *)((btDefaultSerializer const *)arg1)->getBufferPointer();
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


intgo _wrap_btDefaultSerializer_getCurrentBufferSize_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  result = (int)((btDefaultSerializer const *)arg1)->getCurrentBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDefaultSerializer_finalizeChunk_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, btChunk *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, void *_swig_go_4) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  btChunk *arg2 = (btChunk *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(btChunk **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  (arg1)->finalizeChunk(arg2,(char const *)arg3,arg4,arg5);
  
  free(arg3); 
}


char *_wrap_btDefaultSerializer_internalAlloc_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, long long _swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  size_t arg2 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (unsigned char *)(arg1)->internalAlloc(arg2);
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


btChunk *_wrap_btDefaultSerializer_allocate_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, long long _swig_go_1, intgo _swig_go_2) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  size_t arg2 ;
  int arg3 ;
  btChunk *result = 0 ;
  btChunk *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btChunk *)(arg1)->allocate(arg2,arg3);
  *(btChunk **)&_swig_go_result = (btChunk *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_btDefaultSerializer_findNameForPointer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, void *_swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (char *)((btDefaultSerializer const *)arg1)->findNameForPointer((void const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btDefaultSerializer_registerNameForPointer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, void *_swig_go_1, _gostring_ _swig_go_2) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->registerNameForPointer((void const *)arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_btDefaultSerializer_serializeName_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, _gostring_ _swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->serializeName((char const *)arg2);
  
  free(arg2); 
}


intgo _wrap_btDefaultSerializer_getSerializationFlags_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  result = (int)((btDefaultSerializer const *)arg1)->getSerializationFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDefaultSerializer_setSerializationFlags_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, intgo _swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setSerializationFlags(arg2);
  
}


intgo _wrap_btDefaultSerializer_getNumChunks_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  
  result = (int)((btDefaultSerializer const *)arg1)->getNumChunks();
  _swig_go_result = result; 
  return _swig_go_result;
}


btChunk *_wrap_btDefaultSerializer_getChunk_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, intgo _swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  int arg2 ;
  btChunk *result = 0 ;
  btChunk *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btChunk *)((btDefaultSerializer const *)arg1)->getChunk(arg2);
  *(btChunk **)&_swig_go_result = (btChunk *)result; 
  return _swig_go_result;
}


void *_wrap_btDefaultSerializer_findPointer_bt_e001408c92acdfd7(btDefaultSerializer *_swig_go_0, void *_swig_go_1) {
  btDefaultSerializer *arg1 = (btDefaultSerializer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDefaultSerializer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btSerializer *swig_b0 = (btSerializer *)arg1;
  result = (void *)(swig_b0)->findPointer(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_uniqueId_set_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  uniqueId = arg1;
  
}


intgo _wrap_uniqueId_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)uniqueId;
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_evalEulerEqn_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, btMatrix3x3 *_swig_go_4) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  btMatrix3x3 *arg5 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = *(btMatrix3x3 **)&_swig_go_4; 
  
  result = evalEulerEqn((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,(btMatrix3x3 const &)*arg5);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btMatrix3x3 *_wrap_evalEulerEqnDeriv_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btMatrix3x3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btMatrix3x3 *arg4 = 0 ;
  btMatrix3x3 result;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btMatrix3x3 **)&_swig_go_3; 
  
  result = evalEulerEqnDeriv((btVector3 const &)*arg1,(btVector3 const &)*arg2,arg3,(btMatrix3x3 const &)*arg4);
  *(btMatrix3x3 **)&_swig_go_result = new btMatrix3x3(result); 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_new_btDbvtAabbMm_bt_e001408c92acdfd7() {
  btDbvtAabbMm *result = 0 ;
  btDbvtAabbMm *_swig_go_result;
  
  
  result = (btDbvtAabbMm *)new btDbvtAabbMm();
  *(btDbvtAabbMm **)&_swig_go_result = (btDbvtAabbMm *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_Center_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = ((btDbvtAabbMm const *)arg1)->Center();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_Lengths_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = ((btDbvtAabbMm const *)arg1)->Lengths();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_Extents_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = ((btDbvtAabbMm const *)arg1)->Extents();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_Mins_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = (btVector3 *) &((btDbvtAabbMm const *)arg1)->Mins();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_Maxs_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = (btVector3 *) &((btDbvtAabbMm const *)arg1)->Maxs();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_btDbvtAabbMm_FromCE_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btDbvtAabbMm result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = btDbvtAabbMm::FromCE((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btDbvtAabbMm **)&_swig_go_result = new btDbvtAabbMm(result); 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_btDbvtAabbMm_FromCR_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = 0 ;
  btScalar arg2 ;
  btDbvtAabbMm result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = btDbvtAabbMm::FromCR((btVector3 const &)*arg1,arg2);
  *(btDbvtAabbMm **)&_swig_go_result = new btDbvtAabbMm(result); 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_btDbvtAabbMm_FromMM_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btDbvtAabbMm result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = btDbvtAabbMm::FromMM((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btDbvtAabbMm **)&_swig_go_result = new btDbvtAabbMm(result); 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_btDbvtAabbMm_FromPoints__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, intgo _swig_go_1) {
  btVector3 *arg1 = (btVector3 *) 0 ;
  int arg2 ;
  btDbvtAabbMm result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = btDbvtAabbMm::FromPoints((btVector3 const *)arg1,arg2);
  *(btDbvtAabbMm **)&_swig_go_result = new btDbvtAabbMm(result); 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_btDbvtAabbMm_FromPoints__SWIG_1_bt_e001408c92acdfd7(btVector3 **_swig_go_0, intgo _swig_go_1) {
  btVector3 **arg1 = (btVector3 **) 0 ;
  int arg2 ;
  btDbvtAabbMm result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btVector3 ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = btDbvtAabbMm::FromPoints((btVector3 const **)arg1,arg2);
  *(btDbvtAabbMm **)&_swig_go_result = new btDbvtAabbMm(result); 
  return _swig_go_result;
}


void _wrap_btDbvtAabbMm_Expand_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->Expand((btVector3 const &)*arg2);
  
}


void _wrap_btDbvtAabbMm_SignedExpand_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->SignedExpand((btVector3 const &)*arg2);
  
}


bool _wrap_btDbvtAabbMm_Contain_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  
  result = (bool)((btDbvtAabbMm const *)arg1)->Contain((btDbvtAabbMm const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDbvtAabbMm_Classify_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)((btDbvtAabbMm const *)arg1)->Classify((btVector3 const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btDbvtAabbMm_ProjectMinimum_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *arg2 = 0 ;
  unsigned int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (btScalar)((btDbvtAabbMm const *)arg1)->ProjectMinimum((btVector3 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Intersect__SWIG_0_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvtAabbMm *arg1 = 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  
  result = (bool)Intersect((btDbvtAabbMm const &)*arg1,(btDbvtAabbMm const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Intersect__SWIG_1_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvtAabbMm *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (bool)Intersect((btDbvtAabbMm const &)*arg1,(btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_Proximity_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvtAabbMm *arg1 = 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  
  result = (btScalar)Proximity((btDbvtAabbMm const &)*arg1,(btDbvtAabbMm const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Select_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1, btDbvtAabbMm *_swig_go_2) {
  btDbvtAabbMm *arg1 = 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  btDbvtAabbMm *arg3 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  arg3 = *(btDbvtAabbMm **)&_swig_go_2; 
  
  result = (int)Select((btDbvtAabbMm const &)*arg1,(btDbvtAabbMm const &)*arg2,(btDbvtAabbMm const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Merge_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1, btDbvtAabbMm *_swig_go_2) {
  btDbvtAabbMm *arg1 = 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  btDbvtAabbMm *arg3 = 0 ;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  arg3 = *(btDbvtAabbMm **)&_swig_go_2; 
  
  Merge((btDbvtAabbMm const &)*arg1,(btDbvtAabbMm const &)*arg2,*arg3);
  
}


bool _wrap_NotEqual_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvtAabbMm *arg1 = 0 ;
  btDbvtAabbMm *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  arg2 = *(btDbvtAabbMm **)&_swig_go_1; 
  
  result = (bool)NotEqual((btDbvtAabbMm const &)*arg1,(btDbvtAabbMm const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_tMins_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->tMins();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btDbvtAabbMm_tMaxs_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  result = (btVector3 *) &(arg1)->tMaxs();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvtAabbMm_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtAabbMm *arg1 = (btDbvtAabbMm *) 0 ;
  
  arg1 = *(btDbvtAabbMm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDbvtNode_volume_set_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg2 = (btDbvtVolume *) 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvtVolume **)&_swig_go_1; 
  
  if (arg1) (arg1)->volume = *arg2;
  
}


btDbvtAabbMm *_wrap_btDbvtNode_volume_get_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvtVolume *result = 0 ;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (btDbvtVolume *)& ((arg1)->volume);
  *(btDbvtVolume **)&_swig_go_result = (btDbvtVolume *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtNode_parent_set_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->parent = arg2;
  
}


btDbvtNode *_wrap_btDbvtNode_parent_get_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (btDbvtNode *) ((arg1)->parent);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


bool _wrap_btDbvtNode_isleaf_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (bool)((btDbvtNode const *)arg1)->isleaf();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtNode_isinternal_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (bool)((btDbvtNode const *)arg1)->isinternal();
  _swig_go_result = result; 
  return _swig_go_result;
}


btDbvtNode *_wrap_new_btDbvtNode_bt_e001408c92acdfd7() {
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  
  result = (btDbvtNode *)new btDbvtNode();
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvtNode_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDbvntNode_volume_set_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0, btDbvtAabbMm *_swig_go_1) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btDbvtVolume *arg2 = (btDbvtVolume *) 0 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  arg2 = *(btDbvtVolume **)&_swig_go_1; 
  
  if (arg1) (arg1)->volume = *arg2;
  
}


btDbvtAabbMm *_wrap_btDbvntNode_volume_get_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btDbvtVolume *result = 0 ;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (btDbvtVolume *)& ((arg1)->volume);
  *(btDbvtVolume **)&_swig_go_result = (btDbvtVolume *)result; 
  return _swig_go_result;
}


void _wrap_btDbvntNode_normal_set_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->normal = *arg2;
  
}


btVector3 *_wrap_btDbvntNode_normal_get_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->normal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btDbvntNode_angle_set_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0, float _swig_go_1) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->angle = arg2;
  
}


float _wrap_btDbvntNode_angle_get_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvntNode_isleaf_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (bool)((btDbvntNode const *)arg1)->isleaf();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvntNode_isinternal_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (bool)((btDbvntNode const *)arg1)->isinternal();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvntNode_childs_set_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0, btDbvntNode *(*_swig_go_1)[2]) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btDbvntNode **arg2 = (btDbvntNode **) (btDbvntNode **)0 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  arg2 = *(btDbvntNode ***)&_swig_go_1; 
  
  {
    size_t ii;
    btDbvntNode * *b = (btDbvntNode * *) arg1->childs;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((btDbvntNode * *) arg2 + ii);
  }
  
}


btDbvntNode *(*_wrap_btDbvntNode_childs_get_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0))[2] {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  btDbvntNode **result = 0 ;
  btDbvntNode *(*_swig_go_result)[2];
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (btDbvntNode **)(btDbvntNode **) ((arg1)->childs);
  *(btDbvntNode ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvntNode_data_set_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0, void *_swig_go_1) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->data = arg2;
  
}


void *_wrap_btDbvntNode_data_get_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  result = (void *) ((arg1)->data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


btDbvntNode *_wrap_new_btDbvntNode_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvntNode *result = 0 ;
  btDbvntNode *_swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (btDbvntNode *)new btDbvntNode((btDbvtNode const *)arg1);
  *(btDbvntNode **)&_swig_go_result = (btDbvntNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvntNode_bt_e001408c92acdfd7(btDbvntNode *_swig_go_0) {
  btDbvntNode *arg1 = (btDbvntNode *) 0 ;
  
  arg1 = *(btDbvntNode **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_SIMPLE_STACKSIZE_btDbvt_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = btDbvt::SIMPLE_STACKSIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DOUBLE_STACKSIZE_btDbvt_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = btDbvt::DOUBLE_STACKSIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_root_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_root = arg2;
  
}


btDbvtNode *_wrap_btDbvt_m_root_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (btDbvtNode *) ((arg1)->m_root);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_free_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_free = arg2;
  
}


btDbvtNode *_wrap_btDbvt_m_free_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (btDbvtNode *) ((arg1)->m_free);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_lkhd_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, intgo _swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_lkhd = arg2;
  
}


intgo _wrap_btDbvt_m_lkhd_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_lkhd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_leaves_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, intgo _swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_leaves = arg2;
  
}


intgo _wrap_btDbvt_m_leaves_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_leaves);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_opath_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, intgo _swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->m_opath = arg2;
  
}


intgo _wrap_btDbvt_m_opath_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->m_opath);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_m_stkStack_set_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btAlignedObjectArray< btDbvt::sStkNN > *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btAlignedObjectArray< btDbvt::sStkNN > *arg2 = (btAlignedObjectArray< btDbvt::sStkNN > *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btDbvt::sStkNN > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_stkStack = *arg2;
  
}


btAlignedObjectArray< btDbvt::sStkNN > *_wrap_btDbvt_m_stkStack_get_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btAlignedObjectArray< btDbvt::sStkNN > *result = 0 ;
  btAlignedObjectArray< btDbvt::sStkNN > *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btDbvt::sStkNN > *)& ((arg1)->m_stkStack);
  *(btAlignedObjectArray< btDbvt::sStkNN > **)&_swig_go_result = (btAlignedObjectArray< btDbvt::sStkNN > *)result; 
  return _swig_go_result;
}


btDbvt *_wrap_new_btDbvt_bt_e001408c92acdfd7() {
  btDbvt *result = 0 ;
  btDbvt *_swig_go_result;
  
  
  result = (btDbvt *)new btDbvt();
  *(btDbvt **)&_swig_go_result = (btDbvt *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvt_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDbvt_clear_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


bool _wrap_btDbvt_empty_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  result = (bool)((btDbvt const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_optimizeBottomUp_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  (arg1)->optimizeBottomUp();
  
}


void _wrap_btDbvt_optimizeTopDown__SWIG_0_bt_e001408c92acdfd7(btDbvt *_swig_go_0, intgo _swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->optimizeTopDown(arg2);
  
}


void _wrap_btDbvt_optimizeTopDown__SWIG_1_bt_e001408c92acdfd7(btDbvt *_swig_go_0) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  
  (arg1)->optimizeTopDown();
  
}


void _wrap_btDbvt_optimizeIncremental_bt_e001408c92acdfd7(btDbvt *_swig_go_0, intgo _swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->optimizeIncremental(arg2);
  
}


btDbvtNode *_wrap_btDbvt_insert_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtAabbMm *_swig_go_1, void *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtVolume *arg2 = 0 ;
  void *arg3 = (void *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtVolume **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (btDbvtNode *)(arg1)->insert((btDbvtVolume const &)*arg2,arg3);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_btDbvt_update__SWIG_0_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, intgo _swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  int arg3 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->update(arg2,arg3);
  
}


void _wrap_btDbvt_update__SWIG_1_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->update(arg2);
  
}


void _wrap_btDbvt_update__SWIG_2_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  
  (arg1)->update(arg2,*arg3);
  
}


bool _wrap_btDbvt_update__SWIG_3_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  result = (bool)(arg1)->update(arg2,*arg3,(btVector3 const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvt_update__SWIG_4_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, btVector3 *_swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (bool)(arg1)->update(arg2,*arg3,(btVector3 const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvt_update__SWIG_5_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, float _swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btScalar arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  result = (bool)(arg1)->update(arg2,*arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_remove_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->remove(arg2);
  
}


void _wrap_btDbvt_write_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvt::IWriter *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvt::IWriter *arg2 = (btDbvt::IWriter *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvt::IWriter **)&_swig_go_1; 
  
  ((btDbvt const *)arg1)->write(arg2);
  
}


void _wrap_btDbvt_clone__SWIG_0_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvt *_swig_go_1, btDbvt::IClone *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvt *arg2 = 0 ;
  btDbvt::IClone *arg3 = (btDbvt::IClone *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvt **)&_swig_go_1; 
  arg3 = *(btDbvt::IClone **)&_swig_go_2; 
  
  ((btDbvt const *)arg1)->clone(*arg2,arg3);
  
}


void _wrap_btDbvt_clone__SWIG_1_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvt *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvt *arg2 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvt **)&_swig_go_1; 
  
  ((btDbvt const *)arg1)->clone(*arg2);
  
}


intgo _wrap_btDbvt_maxdepth_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (int)btDbvt::maxdepth((btDbvtNode const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDbvt_countLeaves_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (int)btDbvt::countLeaves((btDbvtNode const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvt_extractLeaves_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btAlignedObjectArray< btDbvtNode const * > *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btAlignedObjectArray< btDbvtNode const * > *arg2 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btDbvtNode const * > **)&_swig_go_1; 
  
  btDbvt::extractLeaves((btDbvtNode const *)arg1,*arg2);
  
}


void _wrap_btDbvt_benchmark_bt_e001408c92acdfd7() {
  btDbvt::benchmark();
  
}


void _wrap_btDbvt_enumNodes_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvt::ICollide *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg2 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvt::ICollide **)&_swig_go_1; 
  
  btDbvt::enumNodes((btDbvtNode const *)arg1,*arg2);
  
}


void _wrap_btDbvt_enumLeaves_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvt::ICollide *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg2 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvt::ICollide **)&_swig_go_1; 
  
  btDbvt::enumLeaves((btDbvtNode const *)arg1,*arg2);
  
}


void _wrap_btDbvt_collideTT_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtNode *_swig_go_2, btDbvt::ICollide *_swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtNode *arg3 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg4 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtNode **)&_swig_go_2; 
  arg4 = *(btDbvt::ICollide **)&_swig_go_3; 
  
  (arg1)->collideTT((btDbvtNode const *)arg2,(btDbvtNode const *)arg3,*arg4);
  
}


void _wrap_btDbvt_selfCollideT_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvntNode *_swig_go_1, btDbvt::ICollide *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvntNode *arg2 = (btDbvntNode *) 0 ;
  btDbvt::ICollide *arg3 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvntNode **)&_swig_go_1; 
  arg3 = *(btDbvt::ICollide **)&_swig_go_2; 
  
  (arg1)->selfCollideT((btDbvntNode const *)arg2,*arg3);
  
}


void _wrap_btDbvt_selfCollideTT_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvt::ICollide *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg3 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvt::ICollide **)&_swig_go_2; 
  
  (arg1)->selfCollideTT((btDbvtNode const *)arg2,*arg3);
  
}


void _wrap_btDbvt_collideTTpersistentStack_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtNode *_swig_go_2, btDbvt::ICollide *_swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtNode *arg3 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg4 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtNode **)&_swig_go_2; 
  arg4 = *(btDbvt::ICollide **)&_swig_go_3; 
  
  (arg1)->collideTTpersistentStack((btDbvtNode const *)arg2,(btDbvtNode const *)arg3,*arg4);
  
}


void _wrap_btDbvt_collideTV_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, btDbvt::ICollide *_swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btDbvt::ICollide *arg4 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(btDbvt::ICollide **)&_swig_go_3; 
  
  ((btDbvt const *)arg1)->collideTV((btDbvtNode const *)arg2,(btDbvtVolume const &)*arg3,*arg4);
  
}


void _wrap_btDbvt_collideTVNoStackAlloc_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, btAlignedObjectArray< btDbvtNode const * > *_swig_go_3, btDbvt::ICollide *_swig_go_4) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btNodeStack *arg4 = 0 ;
  btDbvt::ICollide *arg5 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(btNodeStack **)&_swig_go_3; 
  arg5 = *(btDbvt::ICollide **)&_swig_go_4; 
  
  ((btDbvt const *)arg1)->collideTVNoStackAlloc((btDbvtNode const *)arg2,(btDbvtVolume const &)*arg3,*arg4,*arg5);
  
}


void _wrap_btDbvt_rayTest_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btDbvt::ICollide *_swig_go_3) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btDbvt::ICollide *arg4 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btDbvt::ICollide **)&_swig_go_3; 
  
  btDbvt::rayTest((btDbvtNode const *)arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btDbvt_rayTestInternal_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, intgo *_swig_go_5, float _swig_go_6, btVector3 *_swig_go_7, btVector3 *_swig_go_8, btAlignedObjectArray< btDbvtNode const * > *_swig_go_9, btDbvt::ICollide *_swig_go_10) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  unsigned int *arg6 = (unsigned int *) (unsigned int *)0 ;
  btScalar arg7 ;
  btVector3 *arg8 = 0 ;
  btVector3 *arg9 = 0 ;
  btAlignedObjectArray< btDbvtNode const * > *arg10 = 0 ;
  btDbvt::ICollide *arg11 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(unsigned int **)&_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = *(btAlignedObjectArray< btDbvtNode const * > **)&_swig_go_9; 
  arg11 = *(btDbvt::ICollide **)&_swig_go_10; 
  
  ((btDbvt const *)arg1)->rayTestInternal((btDbvtNode const *)arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,arg6,arg7,(btVector3 const &)*arg8,(btVector3 const &)*arg9,*arg10,*arg11);
  
}


void _wrap_btDbvt_collideKDOP_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2, intgo _swig_go_3, btDbvt::ICollide *_swig_go_4) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btScalar *arg3 = (btScalar *) 0 ;
  int arg4 ;
  btDbvt::ICollide *arg5 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btDbvt::ICollide **)&_swig_go_4; 
  
  btDbvt::collideKDOP((btDbvtNode const *)arg1,(btVector3 const *)arg2,(float const *)arg3,arg4,*arg5);
  
}


void _wrap_btDbvt_collideOCL__SWIG_0_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2, btVector3 *_swig_go_3, intgo _swig_go_4, btDbvt::ICollide *_swig_go_5, bool _swig_go_6) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btScalar *arg3 = (btScalar *) 0 ;
  btVector3 *arg4 = 0 ;
  int arg5 ;
  btDbvt::ICollide *arg6 = 0 ;
  bool arg7 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btDbvt::ICollide **)&_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  btDbvt::collideOCL((btDbvtNode const *)arg1,(btVector3 const *)arg2,(float const *)arg3,(btVector3 const &)*arg4,arg5,*arg6,arg7);
  
}


void _wrap_btDbvt_collideOCL__SWIG_1_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2, btVector3 *_swig_go_3, intgo _swig_go_4, btDbvt::ICollide *_swig_go_5) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btScalar *arg3 = (btScalar *) 0 ;
  btVector3 *arg4 = 0 ;
  int arg5 ;
  btDbvt::ICollide *arg6 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btDbvt::ICollide **)&_swig_go_5; 
  
  btDbvt::collideOCL((btDbvtNode const *)arg1,(btVector3 const *)arg2,(float const *)arg3,(btVector3 const &)*arg4,arg5,*arg6);
  
}


void _wrap_btDbvt_collideTU_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvt::ICollide *_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvt::ICollide *arg2 = 0 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvt::ICollide **)&_swig_go_1; 
  
  btDbvt::collideTU((btDbvtNode const *)arg1,*arg2);
  
}


intgo _wrap_btDbvt_nearest_bt_e001408c92acdfd7(intgo *_swig_go_0, btDbvt::sStkNPS *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  int *arg1 = (int *) 0 ;
  btDbvt::sStkNPS *arg2 = (btDbvt::sStkNPS *) 0 ;
  btScalar arg3 ;
  int arg4 ;
  int arg5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(int **)&_swig_go_0; 
  arg2 = *(btDbvt::sStkNPS **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (int)btDbvt::nearest((int const *)arg1,(btDbvt::sStkNPS const *)arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDbvt_allocate_bt_e001408c92acdfd7(btAlignedObjectArray< int > *_swig_go_0, btAlignedObjectArray< btDbvt::sStkNPS > *_swig_go_1, btDbvt::sStkNPS *_swig_go_2) {
  btAlignedObjectArray< int > *arg1 = 0 ;
  btAlignedObjectArray< btDbvt::sStkNPS > *arg2 = 0 ;
  btDbvt::sStkNPS *arg3 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btAlignedObjectArray< int > **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btDbvt::sStkNPS > **)&_swig_go_1; 
  arg3 = *(btDbvt::sStkNPS **)&_swig_go_2; 
  
  result = (int)btDbvt::allocate(*arg1,*arg2,(btDbvt::sStkNPS const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtNodeEnumerator_nodes_set_bt_e001408c92acdfd7(btDbvtNodeEnumerator *_swig_go_0, btAlignedObjectArray< btDbvtNode const * > *_swig_go_1) {
  btDbvtNodeEnumerator *arg1 = (btDbvtNodeEnumerator *) 0 ;
  tConstNodeArray *arg2 = (tConstNodeArray *) 0 ;
  
  arg1 = *(btDbvtNodeEnumerator **)&_swig_go_0; 
  arg2 = *(tConstNodeArray **)&_swig_go_1; 
  
  if (arg1) (arg1)->nodes = *arg2;
  
}


btAlignedObjectArray< btDbvtNode const * > *_wrap_btDbvtNodeEnumerator_nodes_get_bt_e001408c92acdfd7(btDbvtNodeEnumerator *_swig_go_0) {
  btDbvtNodeEnumerator *arg1 = (btDbvtNodeEnumerator *) 0 ;
  tConstNodeArray *result = 0 ;
  btAlignedObjectArray< btDbvtNode const * > *_swig_go_result;
  
  arg1 = *(btDbvtNodeEnumerator **)&_swig_go_0; 
  
  result = (tConstNodeArray *)& ((arg1)->nodes);
  *(tConstNodeArray **)&_swig_go_result = (tConstNodeArray *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtNodeEnumerator_Process_bt_e001408c92acdfd7(btDbvtNodeEnumerator *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvtNodeEnumerator *arg1 = (btDbvtNodeEnumerator *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtNodeEnumerator **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->Process((btDbvtNode const *)arg2);
  
}


btDbvtNodeEnumerator *_wrap_new_btDbvtNodeEnumerator_bt_e001408c92acdfd7() {
  btDbvtNodeEnumerator *result = 0 ;
  btDbvtNodeEnumerator *_swig_go_result;
  
  
  result = (btDbvtNodeEnumerator *)new btDbvtNodeEnumerator();
  *(btDbvtNodeEnumerator **)&_swig_go_result = (btDbvtNodeEnumerator *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvtNodeEnumerator_bt_e001408c92acdfd7(btDbvtNodeEnumerator *_swig_go_0) {
  btDbvtNodeEnumerator *arg1 = (btDbvtNodeEnumerator *) 0 ;
  
  arg1 = *(btDbvtNodeEnumerator **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_indexof_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  
  result = (int)indexof((btDbvtNode const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_size_bt_e001408c92acdfd7(btDbvtAabbMm *_swig_go_0) {
  btDbvtVolume *arg1 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtVolume **)&_swig_go_0; 
  
  result = (btScalar)size((btDbvtAabbMm const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_getmaxdepth_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int e3 ;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  e3 = (int)*_swig_go_2;
  arg3 = &e3;
  
  
  getmaxdepth((btDbvtNode const *)arg1,arg2,*arg3);
  
  *_swig_go_2 = (intgo)e3; 
}


void _wrap_deletenode_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  deletenode(arg1,arg2);
  
}


void _wrap_recursedeletenode_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  recursedeletenode(arg1,arg2);
  
}


btDbvtNode *_wrap_createnode__SWIG_0_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, void *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  void *arg3 = (void *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (btDbvtNode *)createnode(arg1,arg2,arg3);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


btDbvtNode *_wrap_createnode__SWIG_1_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, void *_swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  void *arg4 = (void *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  result = (btDbvtNode *)createnode(arg1,arg2,(btDbvtAabbMm const &)*arg3,arg4);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


btDbvtNode *_wrap_createnode__SWIG_2_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtAabbMm *_swig_go_2, btDbvtAabbMm *_swig_go_3, void *_swig_go_4) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtVolume *arg3 = 0 ;
  btDbvtVolume *arg4 = 0 ;
  void *arg5 = (void *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtVolume **)&_swig_go_2; 
  arg4 = *(btDbvtVolume **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  result = (btDbvtNode *)createnode(arg1,arg2,(btDbvtAabbMm const &)*arg3,(btDbvtAabbMm const &)*arg4,arg5);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_insertleaf_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtNode *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtNode *arg3 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtNode **)&_swig_go_2; 
  
  insertleaf(arg1,arg2,arg3);
  
}


btDbvtNode *_wrap_removeleaf_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  result = (btDbvtNode *)removeleaf(arg1,arg2);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_fetchleaves__SWIG_0_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btAlignedObjectArray< btDbvtNode * > *_swig_go_2, intgo _swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  tNodeArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(tNodeArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  fetchleaves(arg1,arg2,*arg3,arg4);
  
}


void _wrap_fetchleaves__SWIG_1_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode *_swig_go_1, btAlignedObjectArray< btDbvtNode * > *_swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  tNodeArray *arg3 = 0 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(tNodeArray **)&_swig_go_2; 
  
  fetchleaves(arg1,arg2,*arg3);
  
}


bool _wrap_leftOfAxis_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (bool)leftOfAxis((btDbvtNode const *)arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_split_bt_e001408c92acdfd7(btDbvtNode **_swig_go_0, intgo _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btDbvtNode **arg1 = (btDbvtNode **) 0 ;
  int arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtNode ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (int)split(arg1,arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btDbvtAabbMm *_wrap_bounds_bt_e001408c92acdfd7(btDbvtNode **_swig_go_0, intgo _swig_go_1) {
  btDbvtNode **arg1 = (btDbvtNode **) 0 ;
  int arg2 ;
  btDbvtVolume result;
  btDbvtAabbMm *_swig_go_result;
  
  arg1 = *(btDbvtNode ***)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = bounds(arg1,arg2);
  *(btDbvtVolume **)&_swig_go_result = new btDbvtVolume(result); 
  return _swig_go_result;
}


void _wrap_bottomup_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode **_swig_go_1, intgo _swig_go_2) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode **arg2 = (btDbvtNode **) 0 ;
  int arg3 ;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  bottomup(arg1,arg2,arg3);
  
}


btDbvtNode *_wrap_topdown_bt_e001408c92acdfd7(btDbvt *_swig_go_0, btDbvtNode **_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btDbvt *arg1 = (btDbvt *) 0 ;
  btDbvtNode **arg2 = (btDbvtNode **) 0 ;
  int arg3 ;
  int arg4 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvt **)&_swig_go_0; 
  arg2 = *(btDbvtNode ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (btDbvtNode *)topdown(arg1,arg2,arg3,arg4);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


btDbvtNode *_wrap_sort_bt_e001408c92acdfd7(btDbvtNode *_swig_go_0, btDbvtNode **_swig_go_1) {
  btDbvtNode *arg1 = (btDbvtNode *) 0 ;
  btDbvtNode **arg2 = 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvtNode **)&_swig_go_0; 
  arg2 = *(btDbvtNode ***)&_swig_go_1; 
  
  result = (btDbvtNode *)sort(arg1,*arg2);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphaseAabbCallback_bt_e001408c92acdfd7(btBroadphaseAabbCallback *_swig_go_0) {
  btBroadphaseAabbCallback *arg1 = (btBroadphaseAabbCallback *) 0 ;
  
  arg1 = *(btBroadphaseAabbCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btBroadphaseAabbCallback_process_bt_e001408c92acdfd7(btBroadphaseAabbCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btBroadphaseAabbCallback *arg1 = (btBroadphaseAabbCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBroadphaseAabbCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (bool)(arg1)->process((btBroadphaseProxy const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseRayCallback_m_rayDirectionInverse_set_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayDirectionInverse = *arg2;
  
}


btVector3 *_wrap_btBroadphaseRayCallback_m_rayDirectionInverse_get_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_rayDirectionInverse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseRayCallback_m_signs_set_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0, intgo *_swig_go_1) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->m_signs;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_btBroadphaseRayCallback_m_signs_get_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->m_signs);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseRayCallback_m_lambda_max_set_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0, float _swig_go_1) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_lambda_max = arg2;
  
}


float _wrap_btBroadphaseRayCallback_m_lambda_max_get_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_lambda_max);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphaseRayCallback_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btBroadphaseRayCallback_process_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btBroadphaseRayCallback *arg1 = (btBroadphaseRayCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  btBroadphaseAabbCallback *swig_b0 = (btBroadphaseAabbCallback *)arg1;
  result = (bool)(swig_b0)->process((btBroadphaseProxy const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btBroadphaseInterface_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  
  delete arg1;
  
}


btBroadphaseProxy *_wrap_btBroadphaseInterface_createProxy_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, btDispatcher *_swig_go_7) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  int arg6 ;
  int arg7 ;
  btDispatcher *arg8 = (btDispatcher *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(btDispatcher **)&_swig_go_7; 
  
  result = (btBroadphaseProxy *)(arg1)->createProxy((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseInterface_destroyProxy_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->destroyProxy(arg2,arg3);
  
}


void _wrap_btBroadphaseInterface_setAabb_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btBroadphaseProxy *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btDispatcher *_swig_go_4) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btDispatcher *arg5 = (btDispatcher *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btDispatcher **)&_swig_go_4; 
  
  (arg1)->setAabb(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5);
  
}


void _wrap_btBroadphaseInterface_getAabb_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btBroadphaseProxy *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btBroadphaseInterface const *)arg1)->getAabb(arg2,*arg3,*arg4);
  
}


void _wrap_btBroadphaseInterface_rayTest__SWIG_0_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btBroadphaseInterface_rayTest__SWIG_1_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3, btVector3 *_swig_go_4) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btBroadphaseInterface_rayTest__SWIG_2_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btBroadphaseInterface_aabbTest_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseAabbCallback *_swig_go_3) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseAabbCallback *arg4 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseAabbCallback **)&_swig_go_3; 
  
  (arg1)->aabbTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btBroadphaseInterface_calculateOverlappingPairs_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btDispatcher *_swig_go_1) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->calculateOverlappingPairs(arg2);
  
}


btOverlappingPairCache *_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_0_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *)(arg1)->getOverlappingPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


btOverlappingPairCache *_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_1_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *)((btBroadphaseInterface const *)arg1)->getOverlappingPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_btBroadphaseInterface_getBroadphaseAabb_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btBroadphaseInterface const *)arg1)->getBroadphaseAabb(*arg2,*arg3);
  
}


void _wrap_btBroadphaseInterface_resetPool_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0, btDispatcher *_swig_go_1) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->resetPool(arg2);
  
}


void _wrap_btBroadphaseInterface_printStats_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  
  (arg1)->printStats();
  
}


void _wrap_delete_btOverlappingPairCallback_bt_e001408c92acdfd7(btOverlappingPairCallback *_swig_go_0) {
  btOverlappingPairCallback *arg1 = (btOverlappingPairCallback *) 0 ;
  
  arg1 = *(btOverlappingPairCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


btBroadphasePair *_wrap_btOverlappingPairCallback_addOverlappingPair_bt_e001408c92acdfd7(btOverlappingPairCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btOverlappingPairCallback *arg1 = (btOverlappingPairCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btOverlappingPairCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->addOverlappingPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void *_wrap_btOverlappingPairCallback_removeOverlappingPair_bt_e001408c92acdfd7(btOverlappingPairCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2, btDispatcher *_swig_go_3) {
  btOverlappingPairCallback *arg1 = (btOverlappingPairCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btOverlappingPairCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  result = (void *)(arg1)->removeOverlappingPair(arg2,arg3,arg4);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btOverlappingPairCallback_removeOverlappingPairsContainingProxy_bt_e001408c92acdfd7(btOverlappingPairCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btOverlappingPairCallback *arg1 = (btOverlappingPairCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->removeOverlappingPairsContainingProxy(arg2,arg3);
  
}


void _wrap_delete_btOverlapCallback_bt_e001408c92acdfd7(btOverlapCallback *_swig_go_0) {
  btOverlapCallback *arg1 = (btOverlapCallback *) 0 ;
  
  arg1 = *(btOverlapCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btOverlapCallback_processOverlap_bt_e001408c92acdfd7(btOverlapCallback *_swig_go_0, btBroadphasePair *_swig_go_1) {
  btOverlapCallback *arg1 = (btOverlapCallback *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOverlapCallback **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  
  result = (bool)(arg1)->processOverlap(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btOverlapFilterCallback_bt_e001408c92acdfd7(btOverlapFilterCallback *_swig_go_0) {
  btOverlapFilterCallback *arg1 = (btOverlapFilterCallback *) 0 ;
  
  arg1 = *(btOverlapFilterCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btOverlapFilterCallback_needBroadphaseCollision_bt_e001408c92acdfd7(btOverlapFilterCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btOverlapFilterCallback *arg1 = (btOverlapFilterCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOverlapFilterCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (bool)((btOverlapFilterCallback const *)arg1)->needBroadphaseCollision(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_BT_NULL_PAIR_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)BT_NULL_PAIR;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btOverlappingPairCache_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  delete arg1;
  
}


btBroadphasePair *_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)(arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)((btOverlappingPairCache const *)arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btOverlappingPairCache_getOverlappingPairArray_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &(arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOverlappingPairCache_cleanOverlappingPair_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphasePair *_swig_go_1, btDispatcher *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanOverlappingPair(*arg2,arg3);
  
}


intgo _wrap_btOverlappingPairCache_getNumOverlappingPairs_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (int)((btOverlappingPairCache const *)arg1)->getNumOverlappingPairs();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btOverlappingPairCache_needsBroadphaseCollision_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (bool)((btOverlappingPairCache const *)arg1)->needsBroadphaseCollision(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btOverlapFilterCallback *_wrap_btOverlappingPairCache_getOverlapFilterCallback_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *result = 0 ;
  btOverlapFilterCallback *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (btOverlapFilterCallback *)(arg1)->getOverlapFilterCallback();
  *(btOverlapFilterCallback **)&_swig_go_result = (btOverlapFilterCallback *)result; 
  return _swig_go_result;
}


void _wrap_btOverlappingPairCache_cleanProxyFromPairs_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanProxyFromPairs(arg2,arg3);
  
}


void _wrap_btOverlappingPairCache_setOverlapFilterCallback_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btOverlapFilterCallback *_swig_go_1) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *arg2 = (btOverlapFilterCallback *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapFilterCallback **)&_swig_go_1; 
  
  (arg1)->setOverlapFilterCallback(arg2);
  
}


void _wrap_btOverlappingPairCache_processAllOverlappingPairs__SWIG_0_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3);
  
}


void _wrap_btOverlappingPairCache_processAllOverlappingPairs__SWIG_1_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2, btDispatcherInfo *_swig_go_3) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3,(btDispatcherInfo const &)*arg4);
  
}


btBroadphasePair *_wrap_btOverlappingPairCache_findPair_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->findPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


bool _wrap_btOverlappingPairCache_hasDeferredRemoval_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (bool)(arg1)->hasDeferredRemoval();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOverlappingPairCache_setInternalGhostPairCallback_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btOverlappingPairCallback *_swig_go_1) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btOverlappingPairCallback *arg2 = (btOverlappingPairCallback *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCallback **)&_swig_go_1; 
  
  (arg1)->setInternalGhostPairCallback(arg2);
  
}


void _wrap_btOverlappingPairCache_sortOverlappingPairs_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btDispatcher *_swig_go_1) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->sortOverlappingPairs(arg2);
  
}


btBroadphasePair *_wrap_btOverlappingPairCache_addOverlappingPair_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  btOverlappingPairCallback *swig_b0 = (btOverlappingPairCallback *)arg1;
  result = (btBroadphasePair *)(swig_b0)->addOverlappingPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void *_wrap_btOverlappingPairCache_removeOverlappingPair_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2, btDispatcher *_swig_go_3) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  btOverlappingPairCallback *swig_b0 = (btOverlappingPairCallback *)arg1;
  result = (void *)(swig_b0)->removeOverlappingPair(arg2,arg3,arg4);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btOverlappingPairCache_removeOverlappingPairsContainingProxy_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  btOverlappingPairCallback *swig_b0 = (btOverlappingPairCallback *)arg1;
  (swig_b0)->removeOverlappingPairsContainingProxy(arg2,arg3);
  
}


btHashedOverlappingPairCache *_wrap_new_btHashedOverlappingPairCache_bt_e001408c92acdfd7() {
  btHashedOverlappingPairCache *result = 0 ;
  btHashedOverlappingPairCache *_swig_go_result;
  
  
  result = (btHashedOverlappingPairCache *)new btHashedOverlappingPairCache();
  *(btHashedOverlappingPairCache **)&_swig_go_result = (btHashedOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_delete_btHashedOverlappingPairCache_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btHashedOverlappingPairCache_removeOverlappingPairsContainingProxy_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->removeOverlappingPairsContainingProxy(arg2,arg3);
  
}


void *_wrap_btHashedOverlappingPairCache_removeOverlappingPair_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2, btDispatcher *_swig_go_3) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  result = (void *)(arg1)->removeOverlappingPair(arg2,arg3,arg4);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


bool _wrap_btHashedOverlappingPairCache_needsBroadphaseCollision_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (bool)((btHashedOverlappingPairCache const *)arg1)->needsBroadphaseCollision(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btHashedOverlappingPairCache_addOverlappingPair_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->addOverlappingPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void _wrap_btHashedOverlappingPairCache_cleanProxyFromPairs_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanProxyFromPairs(arg2,arg3);
  
}


void _wrap_btHashedOverlappingPairCache_processAllOverlappingPairs__SWIG_0_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3);
  
}


void _wrap_btHashedOverlappingPairCache_processAllOverlappingPairs__SWIG_1_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2, btDispatcherInfo *_swig_go_3) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3,(btDispatcherInfo const &)*arg4);
  
}


btBroadphasePair *_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)(arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)((btHashedOverlappingPairCache const *)arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &(arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_1_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &((btHashedOverlappingPairCache const *)arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHashedOverlappingPairCache_cleanOverlappingPair_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphasePair *_swig_go_1, btDispatcher *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanOverlappingPair(*arg2,arg3);
  
}


btBroadphasePair *_wrap_btHashedOverlappingPairCache_findPair_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->findPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


intgo _wrap_btHashedOverlappingPairCache_GetCount_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (int)((btHashedOverlappingPairCache const *)arg1)->GetCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


btOverlapFilterCallback *_wrap_btHashedOverlappingPairCache_getOverlapFilterCallback_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *result = 0 ;
  btOverlapFilterCallback *_swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btOverlapFilterCallback *)(arg1)->getOverlapFilterCallback();
  *(btOverlapFilterCallback **)&_swig_go_result = (btOverlapFilterCallback *)result; 
  return _swig_go_result;
}


void _wrap_btHashedOverlappingPairCache_setOverlapFilterCallback_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btOverlapFilterCallback *_swig_go_1) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *arg2 = (btOverlapFilterCallback *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapFilterCallback **)&_swig_go_1; 
  
  (arg1)->setOverlapFilterCallback(arg2);
  
}


intgo _wrap_btHashedOverlappingPairCache_getNumOverlappingPairs_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  result = (int)((btHashedOverlappingPairCache const *)arg1)->getNumOverlappingPairs();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHashedOverlappingPairCache_hasDeferredRemoval_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  
  btOverlappingPairCache *swig_b0 = (btOverlappingPairCache *)arg1;
  result = (bool)(swig_b0)->hasDeferredRemoval();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHashedOverlappingPairCache_setInternalGhostPairCallback_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btOverlappingPairCallback *_swig_go_1) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btOverlappingPairCallback *arg2 = (btOverlappingPairCallback *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCallback **)&_swig_go_1; 
  
  btOverlappingPairCache *swig_b0 = (btOverlappingPairCache *)arg1;
  (swig_b0)->setInternalGhostPairCallback(arg2);
  
}


void _wrap_btHashedOverlappingPairCache_sortOverlappingPairs_bt_e001408c92acdfd7(btHashedOverlappingPairCache *_swig_go_0, btDispatcher *_swig_go_1) {
  btHashedOverlappingPairCache *arg1 = (btHashedOverlappingPairCache *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btHashedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  btOverlappingPairCache *swig_b0 = (btOverlappingPairCache *)arg1;
  (swig_b0)->sortOverlappingPairs(arg2);
  
}


btSortedOverlappingPairCache *_wrap_new_btSortedOverlappingPairCache_bt_e001408c92acdfd7() {
  btSortedOverlappingPairCache *result = 0 ;
  btSortedOverlappingPairCache *_swig_go_result;
  
  
  result = (btSortedOverlappingPairCache *)new btSortedOverlappingPairCache();
  *(btSortedOverlappingPairCache **)&_swig_go_result = (btSortedOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSortedOverlappingPairCache_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSortedOverlappingPairCache_processAllOverlappingPairs_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3);
  
}


void *_wrap_btSortedOverlappingPairCache_removeOverlappingPair_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2, btDispatcher *_swig_go_3) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  result = (void *)(arg1)->removeOverlappingPair(arg2,arg3,arg4);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btSortedOverlappingPairCache_cleanOverlappingPair_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphasePair *_swig_go_1, btDispatcher *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanOverlappingPair(*arg2,arg3);
  
}


btBroadphasePair *_wrap_btSortedOverlappingPairCache_addOverlappingPair_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->addOverlappingPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btSortedOverlappingPairCache_findPair_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->findPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void _wrap_btSortedOverlappingPairCache_cleanProxyFromPairs_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanProxyFromPairs(arg2,arg3);
  
}


void _wrap_btSortedOverlappingPairCache_removeOverlappingPairsContainingProxy_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->removeOverlappingPairsContainingProxy(arg2,arg3);
  
}


bool _wrap_btSortedOverlappingPairCache_needsBroadphaseCollision_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (bool)((btSortedOverlappingPairCache const *)arg1)->needsBroadphaseCollision(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &(arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_1_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &((btSortedOverlappingPairCache const *)arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)(arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)((btSortedOverlappingPairCache const *)arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


intgo _wrap_btSortedOverlappingPairCache_getNumOverlappingPairs_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (int)((btSortedOverlappingPairCache const *)arg1)->getNumOverlappingPairs();
  _swig_go_result = result; 
  return _swig_go_result;
}


btOverlapFilterCallback *_wrap_btSortedOverlappingPairCache_getOverlapFilterCallback_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *result = 0 ;
  btOverlapFilterCallback *_swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (btOverlapFilterCallback *)(arg1)->getOverlapFilterCallback();
  *(btOverlapFilterCallback **)&_swig_go_result = (btOverlapFilterCallback *)result; 
  return _swig_go_result;
}


void _wrap_btSortedOverlappingPairCache_setOverlapFilterCallback_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btOverlapFilterCallback *_swig_go_1) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btOverlapFilterCallback *arg2 = (btOverlapFilterCallback *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapFilterCallback **)&_swig_go_1; 
  
  (arg1)->setOverlapFilterCallback(arg2);
  
}


bool _wrap_btSortedOverlappingPairCache_hasDeferredRemoval_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  
  result = (bool)(arg1)->hasDeferredRemoval();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSortedOverlappingPairCache_setInternalGhostPairCallback_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btOverlappingPairCallback *_swig_go_1) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btOverlappingPairCallback *arg2 = (btOverlappingPairCallback *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCallback **)&_swig_go_1; 
  
  (arg1)->setInternalGhostPairCallback(arg2);
  
}


void _wrap_btSortedOverlappingPairCache_sortOverlappingPairs_bt_e001408c92acdfd7(btSortedOverlappingPairCache *_swig_go_0, btDispatcher *_swig_go_1) {
  btSortedOverlappingPairCache *arg1 = (btSortedOverlappingPairCache *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btSortedOverlappingPairCache **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->sortOverlappingPairs(arg2);
  
}


btBroadphasePair *_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_0_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)(arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btBroadphasePair *_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_1_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePair *)((btNullPairCache const *)arg1)->getOverlappingPairArrayPtr();
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBroadphasePair > *_wrap_btNullPairCache_getOverlappingPairArray_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphasePairArray *result = 0 ;
  btAlignedObjectArray< btBroadphasePair > *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (btBroadphasePairArray *) &(arg1)->getOverlappingPairArray();
  *(btBroadphasePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btNullPairCache_cleanOverlappingPair_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphasePair *_swig_go_1, btDispatcher *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanOverlappingPair(*arg2,arg3);
  
}


intgo _wrap_btNullPairCache_getNumOverlappingPairs_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (int)((btNullPairCache const *)arg1)->getNumOverlappingPairs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btNullPairCache_cleanProxyFromPairs_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->cleanProxyFromPairs(arg2,arg3);
  
}


bool _wrap_btNullPairCache_needsBroadphaseCollision_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (bool)((btNullPairCache const *)arg1)->needsBroadphaseCollision(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


btOverlapFilterCallback *_wrap_btNullPairCache_getOverlapFilterCallback_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btOverlapFilterCallback *result = 0 ;
  btOverlapFilterCallback *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (btOverlapFilterCallback *)(arg1)->getOverlapFilterCallback();
  *(btOverlapFilterCallback **)&_swig_go_result = (btOverlapFilterCallback *)result; 
  return _swig_go_result;
}


void _wrap_btNullPairCache_setOverlapFilterCallback_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btOverlapFilterCallback *_swig_go_1) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btOverlapFilterCallback *arg2 = (btOverlapFilterCallback *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapFilterCallback **)&_swig_go_1; 
  
  (arg1)->setOverlapFilterCallback(arg2);
  
}


void _wrap_btNullPairCache_processAllOverlappingPairs_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btOverlapCallback *_swig_go_1, btDispatcher *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btOverlapCallback *arg2 = (btOverlapCallback *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btOverlapCallback **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->processAllOverlappingPairs(arg2,arg3);
  
}


btBroadphasePair *_wrap_btNullPairCache_findPair_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->findPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


bool _wrap_btNullPairCache_hasDeferredRemoval_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  result = (bool)(arg1)->hasDeferredRemoval();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btNullPairCache_setInternalGhostPairCallback_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btOverlappingPairCallback *_swig_go_1) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btOverlappingPairCallback *arg2 = (btOverlappingPairCallback *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCallback **)&_swig_go_1; 
  
  (arg1)->setInternalGhostPairCallback(arg2);
  
}


btBroadphasePair *_wrap_btNullPairCache_addOverlappingPair_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btBroadphasePair *result = 0 ;
  btBroadphasePair *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  
  result = (btBroadphasePair *)(arg1)->addOverlappingPair(arg2,arg3);
  *(btBroadphasePair **)&_swig_go_result = (btBroadphasePair *)result; 
  return _swig_go_result;
}


void *_wrap_btNullPairCache_removeOverlappingPair_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btBroadphaseProxy *_swig_go_2, btDispatcher *_swig_go_3) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btBroadphaseProxy *arg3 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btBroadphaseProxy **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  result = (void *)(arg1)->removeOverlappingPair(arg2,arg3,arg4);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btNullPairCache_removeOverlappingPairsContainingProxy_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->removeOverlappingPairsContainingProxy(arg2,arg3);
  
}


void _wrap_btNullPairCache_sortOverlappingPairs_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0, btDispatcher *_swig_go_1) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->sortOverlappingPairs(arg2);
  
}


btNullPairCache *_wrap_new_btNullPairCache_bt_e001408c92acdfd7() {
  btNullPairCache *result = 0 ;
  btNullPairCache *_swig_go_result;
  
  
  result = (btNullPairCache *)new btNullPairCache();
  *(btNullPairCache **)&_swig_go_result = (btNullPairCache *)result; 
  return _swig_go_result;
}


void _wrap_delete_btNullPairCache_bt_e001408c92acdfd7(btNullPairCache *_swig_go_0) {
  btNullPairCache *arg1 = (btNullPairCache *) 0 ;
  
  arg1 = *(btNullPairCache **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_MyPairIndex_m_orgIndex_set_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0, intgo _swig_go_1) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int arg2 ;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_orgIndex = arg2;
  
}


intgo _wrap_MyPairIndex_m_orgIndex_get_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_orgIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MyPairIndex_m_uidA0_set_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0, intgo _swig_go_1) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int arg2 ;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_uidA0 = arg2;
  
}


intgo _wrap_MyPairIndex_m_uidA0_get_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_uidA0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MyPairIndex_m_uidA1_set_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0, intgo _swig_go_1) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int arg2 ;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_uidA1 = arg2;
  
}


intgo _wrap_MyPairIndex_m_uidA1_get_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_uidA1);
  _swig_go_result = result; 
  return _swig_go_result;
}


MyPairIndex *_wrap_new_MyPairIndex_bt_e001408c92acdfd7() {
  MyPairIndex *result = 0 ;
  MyPairIndex *_swig_go_result;
  
  
  result = (MyPairIndex *)new MyPairIndex();
  *(MyPairIndex **)&_swig_go_result = (MyPairIndex *)result; 
  return _swig_go_result;
}


void _wrap_delete_MyPairIndex_bt_e001408c92acdfd7(MyPairIndex *_swig_go_0) {
  MyPairIndex *arg1 = (MyPairIndex *) 0 ;
  
  arg1 = *(MyPairIndex **)&_swig_go_0; 
  
  delete arg1;
  
}


MyPairIndeSortPredicate *_wrap_new_MyPairIndeSortPredicate_bt_e001408c92acdfd7() {
  MyPairIndeSortPredicate *result = 0 ;
  MyPairIndeSortPredicate *_swig_go_result;
  
  
  result = (MyPairIndeSortPredicate *)new MyPairIndeSortPredicate();
  *(MyPairIndeSortPredicate **)&_swig_go_result = (MyPairIndeSortPredicate *)result; 
  return _swig_go_result;
}


void _wrap_delete_MyPairIndeSortPredicate_bt_e001408c92acdfd7(MyPairIndeSortPredicate *_swig_go_0) {
  MyPairIndeSortPredicate *arg1 = (MyPairIndeSortPredicate *) 0 ;
  
  arg1 = *(MyPairIndeSortPredicate **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_gDbvtMargin_set_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  
  arg1 = (btScalar)_swig_go_0; 
  
  gDbvtMargin = arg1;
  
}


float _wrap_gDbvtMargin_get_bt_e001408c92acdfd7() {
  btScalar result;
  float _swig_go_result;
  
  
  result = (btScalar)gDbvtMargin;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtProxy_leaf_set_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->leaf = arg2;
  
}


btDbvtNode *_wrap_btDbvtProxy_leaf_get_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btDbvtNode *result = 0 ;
  btDbvtNode *_swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  result = (btDbvtNode *) ((arg1)->leaf);
  *(btDbvtNode **)&_swig_go_result = (btDbvtNode *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtProxy_links_set_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, btDbvtProxy *(*_swig_go_1)[2]) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btDbvtProxy **arg2 = (btDbvtProxy **) (btDbvtProxy **)0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = *(btDbvtProxy ***)&_swig_go_1; 
  
  {
    size_t ii;
    btDbvtProxy * *b = (btDbvtProxy * *) arg1->links;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((btDbvtProxy * *) arg2 + ii);
  }
  
}


btDbvtProxy *(*_wrap_btDbvtProxy_links_get_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0))[2] {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btDbvtProxy **result = 0 ;
  btDbvtProxy *(*_swig_go_result)[2];
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  result = (btDbvtProxy **)(btDbvtProxy **) ((arg1)->links);
  *(btDbvtProxy ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtProxy_stage_set_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, intgo _swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->stage = arg2;
  
}


intgo _wrap_btDbvtProxy_stage_get_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  result = (int) ((arg1)->stage);
  _swig_go_result = result; 
  return _swig_go_result;
}


btDbvtProxy *_wrap_new_btDbvtProxy_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  btDbvtProxy *result = 0 ;
  btDbvtProxy *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (btDbvtProxy *)new btDbvtProxy((btVector3 const &)*arg1,(btVector3 const &)*arg2,arg3,arg4,arg5);
  *(btDbvtProxy **)&_swig_go_result = (btDbvtProxy *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvtProxy_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtDbvtProxy_M_clientObject_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, void *_swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_clientObject = arg2;
  
}


void *_wrap_GetbtDbvtProxy_M_clientObject_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (void *) ((swig_b0)->m_clientObject);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_SetbtDbvtProxy_M_collisionFilterGroup_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, intgo _swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_collisionFilterGroup = arg2;
  
}


intgo _wrap_GetbtDbvtProxy_M_collisionFilterGroup_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (int) ((swig_b0)->m_collisionFilterGroup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtDbvtProxy_M_collisionFilterMask_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, intgo _swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_collisionFilterMask = arg2;
  
}


intgo _wrap_GetbtDbvtProxy_M_collisionFilterMask_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (int) ((swig_b0)->m_collisionFilterMask);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtDbvtProxy_M_uniqueId_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, intgo _swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_uniqueId = arg2;
  
}


intgo _wrap_GetbtDbvtProxy_M_uniqueId_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (int) ((swig_b0)->m_uniqueId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtDbvtProxy_M_aabbMin_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_aabbMin = *arg2;
  
}


btVector3 *_wrap_GetbtDbvtProxy_M_aabbMin_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (btVector3 *)& ((swig_b0)->m_aabbMin);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_SetbtDbvtProxy_M_aabbMax_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0, btVector3 *_swig_go_1) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  if (swig_b0) (swig_b0)->m_aabbMax = *arg2;
  
}


btVector3 *_wrap_GetbtDbvtProxy_M_aabbMax_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (btVector3 *)& ((swig_b0)->m_aabbMax);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


intgo _wrap_btDbvtProxy_getUid_bt_e001408c92acdfd7(btDbvtProxy *_swig_go_0) {
  btDbvtProxy *arg1 = (btDbvtProxy *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtProxy **)&_swig_go_0; 
  
  btBroadphaseProxy *swig_b0 = (btBroadphaseProxy *)arg1;
  result = (int)((btBroadphaseProxy const *)swig_b0)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isPolyhedral_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isPolyhedral(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isConvex_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConvex(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isNonMoving_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isNonMoving(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isConcave_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConcave(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isCompound_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isCompound(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isSoftBody_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isSoftBody(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isInfinite_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isInfinite(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDbvtProxy_isConvex2d_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)btBroadphaseProxy::isConvex2d(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_DYNAMIC_SET_btDbvtBroadphase_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = btDbvtBroadphase::DYNAMIC_SET;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FIXED_SET_btDbvtBroadphase_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = btDbvtBroadphase::FIXED_SET;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STAGECOUNT_btDbvtBroadphase_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = btDbvtBroadphase::STAGECOUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_sets_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDbvt (*_swig_go_1)[2]) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDbvt *arg2 = (btDbvt *) (btDbvt *)0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDbvt **)&_swig_go_1; 
  
  {
    size_t ii;
    btDbvt *b = (btDbvt *) arg1->m_sets;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((btDbvt *) arg2 + ii);
  }
  
}


btDbvt (*_wrap_btDbvtBroadphase_m_sets_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0))[2] {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDbvt *result = 0 ;
  btDbvt (*_swig_go_result)[2];
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btDbvt *)(btDbvt *) ((arg1)->m_sets);
  *(btDbvt **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_stageRoots_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDbvtProxy *(*_swig_go_1)[btDbvtBroadphase::STAGECOUNT+1]) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDbvtProxy **arg2 = (btDbvtProxy **) (btDbvtProxy **)0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDbvtProxy ***)&_swig_go_1; 
  
  {
    size_t ii;
    btDbvtProxy * *b = (btDbvtProxy * *) arg1->m_stageRoots;
    for (ii = 0; ii < (size_t)btDbvtBroadphase::STAGECOUNT+1; ii++) b[ii] = *((btDbvtProxy * *) arg2 + ii);
  }
  
}


btDbvtProxy *(*_wrap_btDbvtBroadphase_m_stageRoots_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0))[btDbvtBroadphase::STAGECOUNT+1] {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDbvtProxy **result = 0 ;
  btDbvtProxy *(*_swig_go_result)[btDbvtBroadphase::STAGECOUNT+1];
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btDbvtProxy **)(btDbvtProxy **) ((arg1)->m_stageRoots);
  *(btDbvtProxy ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_paircache_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btOverlappingPairCache *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btOverlappingPairCache *arg2 = (btOverlappingPairCache *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCache **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_paircache = arg2;
  
}


btOverlappingPairCache *_wrap_btDbvtBroadphase_m_paircache_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *) ((arg1)->m_paircache);
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_prediction_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, float _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_prediction = arg2;
  
}


float _wrap_btDbvtBroadphase_m_prediction_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_prediction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_stageCurrent_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_stageCurrent = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_stageCurrent_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_stageCurrent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_fupdates_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_fupdates = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_fupdates_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_fupdates);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_dupdates_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_dupdates = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_dupdates_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_dupdates);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_cupdates_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_cupdates = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_cupdates_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_cupdates);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_newpairs_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_newpairs = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_newpairs_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_newpairs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_fixedleft_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_fixedleft = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_fixedleft_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_fixedleft);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_updates_call_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->m_updates_call = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_updates_call_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->m_updates_call);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_updates_done_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->m_updates_done = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_updates_done_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->m_updates_done);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_updates_ratio_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, float _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_updates_ratio = arg2;
  
}


float _wrap_btDbvtBroadphase_m_updates_ratio_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_updates_ratio);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_pid_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_pid = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_pid_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_pid);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_cid_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_cid = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_cid_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_cid);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_gid_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, intgo _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_gid = arg2;
  
}


intgo _wrap_btDbvtBroadphase_m_gid_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_gid);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_releasepaircache_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, bool _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_releasepaircache = arg2;
  
}


bool _wrap_btDbvtBroadphase_m_releasepaircache_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_releasepaircache);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_deferedcollide_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, bool _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_deferedcollide = arg2;
  
}


bool _wrap_btDbvtBroadphase_m_deferedcollide_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_deferedcollide);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_needcleanup_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, bool _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_needcleanup = arg2;
  
}


bool _wrap_btDbvtBroadphase_m_needcleanup_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_needcleanup);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_m_rayTestStacks_set_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *arg2 = (btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayTestStacks = *arg2;
  
}


btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *_wrap_btDbvtBroadphase_m_rayTestStacks_get_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *result = 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *)& ((arg1)->m_rayTestStacks);
  *(btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > **)&_swig_go_result = (btAlignedObjectArray< btAlignedObjectArray< btDbvtNode const * > > *)result; 
  return _swig_go_result;
}


btDbvtBroadphase *_wrap_new_btDbvtBroadphase__SWIG_0_bt_e001408c92acdfd7(btOverlappingPairCache *_swig_go_0) {
  btOverlappingPairCache *arg1 = (btOverlappingPairCache *) 0 ;
  btDbvtBroadphase *result = 0 ;
  btDbvtBroadphase *_swig_go_result;
  
  arg1 = *(btOverlappingPairCache **)&_swig_go_0; 
  
  result = (btDbvtBroadphase *)new btDbvtBroadphase(arg1);
  *(btDbvtBroadphase **)&_swig_go_result = (btDbvtBroadphase *)result; 
  return _swig_go_result;
}


btDbvtBroadphase *_wrap_new_btDbvtBroadphase__SWIG_1_bt_e001408c92acdfd7() {
  btDbvtBroadphase *result = 0 ;
  btDbvtBroadphase *_swig_go_result;
  
  
  result = (btDbvtBroadphase *)new btDbvtBroadphase();
  *(btDbvtBroadphase **)&_swig_go_result = (btDbvtBroadphase *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDbvtBroadphase_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDbvtBroadphase_collide_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDispatcher *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->collide(arg2);
  
}


void _wrap_btDbvtBroadphase_optimize_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  (arg1)->optimize();
  
}


btBroadphaseProxy *_wrap_btDbvtBroadphase_createProxy_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, btDispatcher *_swig_go_7) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  int arg6 ;
  int arg7 ;
  btDispatcher *arg8 = (btDispatcher *) 0 ;
  btBroadphaseProxy *result = 0 ;
  btBroadphaseProxy *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(btDispatcher **)&_swig_go_7; 
  
  result = (btBroadphaseProxy *)(arg1)->createProxy((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  *(btBroadphaseProxy **)&_swig_go_result = (btBroadphaseProxy *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_destroyProxy_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btBroadphaseProxy *_swig_go_1, btDispatcher *_swig_go_2) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->destroyProxy(arg2,arg3);
  
}


void _wrap_btDbvtBroadphase_setAabb_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btBroadphaseProxy *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btDispatcher *_swig_go_4) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btDispatcher *arg5 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btDispatcher **)&_swig_go_4; 
  
  (arg1)->setAabb(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5);
  
}


void _wrap_btDbvtBroadphase_rayTest__SWIG_0_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btDbvtBroadphase_rayTest__SWIG_1_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3, btVector3 *_swig_go_4) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btDbvtBroadphase_rayTest__SWIG_2_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseRayCallback *_swig_go_3) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseRayCallback *arg4 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseRayCallback **)&_swig_go_3; 
  
  (arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btDbvtBroadphase_aabbTest_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btBroadphaseAabbCallback *_swig_go_3) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btBroadphaseAabbCallback *arg4 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btBroadphaseAabbCallback **)&_swig_go_3; 
  
  (arg1)->aabbTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btDbvtBroadphase_getAabb_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btBroadphaseProxy *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btDbvtBroadphase const *)arg1)->getAabb(arg2,*arg3,*arg4);
  
}


void _wrap_btDbvtBroadphase_calculateOverlappingPairs_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDispatcher *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->calculateOverlappingPairs(arg2);
  
}


btOverlappingPairCache *_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_0_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *)(arg1)->getOverlappingPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


btOverlappingPairCache *_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_1_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *)((btDbvtBroadphase const *)arg1)->getOverlappingPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_getBroadphaseAabb_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btDbvtBroadphase const *)arg1)->getBroadphaseAabb(*arg2,*arg3);
  
}


void _wrap_btDbvtBroadphase_printStats_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  (arg1)->printStats();
  
}


void _wrap_btDbvtBroadphase_resetPool_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDispatcher *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->resetPool(arg2);
  
}


void _wrap_btDbvtBroadphase_performDeferredRemoval_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btDispatcher *_swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  (arg1)->performDeferredRemoval(arg2);
  
}


void _wrap_btDbvtBroadphase_setVelocityPrediction_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, float _swig_go_1) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setVelocityPrediction(arg2);
  
}


float _wrap_btDbvtBroadphase_getVelocityPrediction_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btScalar)((btDbvtBroadphase const *)arg1)->getVelocityPrediction();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDbvtBroadphase_setAabbForceUpdate_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0, btBroadphaseProxy *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btDispatcher *_swig_go_4) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btDispatcher *arg5 = (btDispatcher *) 0 ;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btDispatcher **)&_swig_go_4; 
  
  (arg1)->setAabbForceUpdate(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5);
  
}


void _wrap_btDbvtBroadphase_benchmark_bt_e001408c92acdfd7(btBroadphaseInterface *_swig_go_0) {
  btBroadphaseInterface *arg1 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btBroadphaseInterface **)&_swig_go_0; 
  
  btDbvtBroadphase::benchmark(arg1);
  
}


intgo _wrap_BT_MAX_THREAD_COUNT_get_bt_e001408c92acdfd7() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)(unsigned int)BT_MAX_THREAD_COUNT;
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btIsMainThread_bt_e001408c92acdfd7() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)btIsMainThread();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btThreadsAreRunning_bt_e001408c92acdfd7() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)btThreadsAreRunning();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGetCurrentThreadIndex_bt_e001408c92acdfd7() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)btGetCurrentThreadIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btResetThreadIndexCounter_bt_e001408c92acdfd7() {
  btResetThreadIndexCounter();
  
}


btSpinMutex *_wrap_new_btSpinMutex_bt_e001408c92acdfd7() {
  btSpinMutex *result = 0 ;
  btSpinMutex *_swig_go_result;
  
  
  result = (btSpinMutex *)new btSpinMutex();
  *(btSpinMutex **)&_swig_go_result = (btSpinMutex *)result; 
  return _swig_go_result;
}


void _wrap_btSpinMutex_lock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  (arg1)->lock();
  
}


void _wrap_btSpinMutex_unlock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  (arg1)->unlock();
  
}


bool _wrap_btSpinMutex_tryLock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  result = (bool)(arg1)->tryLock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSpinMutex_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMutexLock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  btMutexLock(arg1);
  
}


void _wrap_btMutexUnlock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  btMutexUnlock(arg1);
  
}


bool _wrap_btMutexTryLock_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  result = (bool)btMutexTryLock(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btIParallelForBody_bt_e001408c92acdfd7(btIParallelForBody *_swig_go_0) {
  btIParallelForBody *arg1 = (btIParallelForBody *) 0 ;
  
  arg1 = *(btIParallelForBody **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btIParallelForBody_forLoop_bt_e001408c92acdfd7(btIParallelForBody *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btIParallelForBody *arg1 = (btIParallelForBody *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btIParallelForBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((btIParallelForBody const *)arg1)->forLoop(arg2,arg3);
  
}


void _wrap_delete_btIParallelSumBody_bt_e001408c92acdfd7(btIParallelSumBody *_swig_go_0) {
  btIParallelSumBody *arg1 = (btIParallelSumBody *) 0 ;
  
  arg1 = *(btIParallelSumBody **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_btIParallelSumBody_sumLoop_bt_e001408c92acdfd7(btIParallelSumBody *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btIParallelSumBody *arg1 = (btIParallelSumBody *) 0 ;
  int arg2 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btIParallelSumBody **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btScalar)((btIParallelSumBody const *)arg1)->sumLoop(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btITaskScheduler_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  delete arg1;
  
}


_gostring_ _wrap_btITaskScheduler_getName_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  result = (char *)((btITaskScheduler const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btITaskScheduler_getMaxNumThreads_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  result = (int)((btITaskScheduler const *)arg1)->getMaxNumThreads();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btITaskScheduler_getNumThreads_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  result = (int)((btITaskScheduler const *)arg1)->getNumThreads();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btITaskScheduler_setNumThreads_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0, intgo _swig_go_1) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  int arg2 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setNumThreads(arg2);
  
}


void _wrap_btITaskScheduler_parallelFor_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, btIParallelForBody *_swig_go_4) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  btIParallelForBody *arg5 = 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btIParallelForBody **)&_swig_go_4; 
  
  (arg1)->parallelFor(arg2,arg3,arg4,(btIParallelForBody const &)*arg5);
  
}


float _wrap_btITaskScheduler_parallelSum_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, btIParallelSumBody *_swig_go_4) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  btIParallelSumBody *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btIParallelSumBody **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->parallelSum(arg2,arg3,arg4,(btIParallelSumBody const &)*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btITaskScheduler_sleepWorkerThreadsHint_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  (arg1)->sleepWorkerThreadsHint();
  
}


void _wrap_btITaskScheduler_activate_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  (arg1)->activate();
  
}


void _wrap_btITaskScheduler_deactivate_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  (arg1)->deactivate();
  
}


void _wrap_btSetTaskScheduler_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  btSetTaskScheduler(arg1);
  
}


btITaskScheduler *_wrap_btGetTaskScheduler_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)btGetTaskScheduler();
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


btITaskScheduler *_wrap_btGetSequentialTaskScheduler_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)btGetSequentialTaskScheduler();
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


btITaskScheduler *_wrap_btGetOpenMPTaskScheduler_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)btGetOpenMPTaskScheduler();
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


btITaskScheduler *_wrap_btGetTBBTaskScheduler_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)btGetTBBTaskScheduler();
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


btITaskScheduler *_wrap_btGetPPLTaskScheduler_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)btGetPPLTaskScheduler();
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


void _wrap_btParallelFor_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, btIParallelForBody *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  btIParallelForBody *arg4 = 0 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btIParallelForBody **)&_swig_go_3; 
  
  btParallelFor(arg1,arg2,arg3,(btIParallelForBody const &)*arg4);
  
}


float _wrap_btParallelSum_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, btIParallelSumBody *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  btIParallelSumBody *arg4 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btIParallelSumBody **)&_swig_go_3; 
  
  result = (btScalar)btParallelSum(arg1,arg2,arg3,(btIParallelSumBody const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ThreadsafeCounter_mCounter_set_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0, intgo _swig_go_1) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->mCounter = arg2;
  
}


intgo _wrap_ThreadsafeCounter_mCounter_get_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->mCounter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ThreadsafeCounter_mMutex_set_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0, btSpinMutex *_swig_go_1) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  btSpinMutex *arg2 = (btSpinMutex *) 0 ;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  arg2 = *(btSpinMutex **)&_swig_go_1; 
  
  if (arg1) (arg1)->mMutex = *arg2;
  
}


btSpinMutex *_wrap_ThreadsafeCounter_mMutex_get_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  btSpinMutex *result = 0 ;
  btSpinMutex *_swig_go_result;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  
  result = (btSpinMutex *)& ((arg1)->mMutex);
  *(btSpinMutex **)&_swig_go_result = (btSpinMutex *)result; 
  return _swig_go_result;
}


ThreadsafeCounter *_wrap_new_ThreadsafeCounter_bt_e001408c92acdfd7() {
  ThreadsafeCounter *result = 0 ;
  ThreadsafeCounter *_swig_go_result;
  
  
  result = (ThreadsafeCounter *)new ThreadsafeCounter();
  *(ThreadsafeCounter **)&_swig_go_result = (ThreadsafeCounter *)result; 
  return _swig_go_result;
}


intgo _wrap_ThreadsafeCounter_getNext_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  
  result = (unsigned int)(arg1)->getNext();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ThreadsafeCounter_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_gBtTaskScheduler_set_bt_e001408c92acdfd7(btITaskScheduler *_swig_go_0) {
  btITaskScheduler *arg1 = (btITaskScheduler *) 0 ;
  
  arg1 = *(btITaskScheduler **)&_swig_go_0; 
  
  gBtTaskScheduler = arg1;
  
}


btITaskScheduler *_wrap_gBtTaskScheduler_get_bt_e001408c92acdfd7() {
  btITaskScheduler *result = 0 ;
  btITaskScheduler *_swig_go_result;
  
  
  result = (btITaskScheduler *)gBtTaskScheduler;
  *(btITaskScheduler **)&_swig_go_result = (btITaskScheduler *)result; 
  return _swig_go_result;
}


void _wrap_gThreadsRunningCounter_set_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  gThreadsRunningCounter = arg1;
  
}


intgo _wrap_gThreadsRunningCounter_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)gThreadsRunningCounter;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gThreadsRunningCounterMutex_set_bt_e001408c92acdfd7(btSpinMutex *_swig_go_0) {
  btSpinMutex *arg1 = (btSpinMutex *) 0 ;
  
  arg1 = *(btSpinMutex **)&_swig_go_0; 
  
  gThreadsRunningCounterMutex = *arg1;
  
}


btSpinMutex *_wrap_gThreadsRunningCounterMutex_get_bt_e001408c92acdfd7() {
  btSpinMutex *result = 0 ;
  btSpinMutex *_swig_go_result;
  
  
  result = (btSpinMutex *)&gThreadsRunningCounterMutex;
  *(btSpinMutex **)&_swig_go_result = (btSpinMutex *)result; 
  return _swig_go_result;
}


void _wrap_gThreadCounter_set_bt_e001408c92acdfd7(ThreadsafeCounter *_swig_go_0) {
  ThreadsafeCounter *arg1 = (ThreadsafeCounter *) 0 ;
  
  arg1 = *(ThreadsafeCounter **)&_swig_go_0; 
  
  gThreadCounter = *arg1;
  
}


ThreadsafeCounter *_wrap_gThreadCounter_get_bt_e001408c92acdfd7() {
  ThreadsafeCounter *result = 0 ;
  ThreadsafeCounter *_swig_go_result;
  
  
  result = (ThreadsafeCounter *)&gThreadCounter;
  *(ThreadsafeCounter **)&_swig_go_result = (ThreadsafeCounter *)result; 
  return _swig_go_result;
}


void _wrap_btPushThreadsAreRunning_bt_e001408c92acdfd7() {
  btPushThreadsAreRunning();
  
}


void _wrap_btPopThreadsAreRunning_bt_e001408c92acdfd7() {
  btPopThreadsAreRunning();
  
}


btTaskSchedulerSequential *_wrap_new_btTaskSchedulerSequential_bt_e001408c92acdfd7() {
  btTaskSchedulerSequential *result = 0 ;
  btTaskSchedulerSequential *_swig_go_result;
  
  
  result = (btTaskSchedulerSequential *)new btTaskSchedulerSequential();
  *(btTaskSchedulerSequential **)&_swig_go_result = (btTaskSchedulerSequential *)result; 
  return _swig_go_result;
}


intgo _wrap_btTaskSchedulerSequential_getMaxNumThreads_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  result = (int)((btTaskSchedulerSequential const *)arg1)->getMaxNumThreads();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTaskSchedulerSequential_getNumThreads_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  result = (int)((btTaskSchedulerSequential const *)arg1)->getNumThreads();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTaskSchedulerSequential_setNumThreads_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0, intgo _swig_go_1) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  int arg2 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setNumThreads(arg2);
  
}


void _wrap_btTaskSchedulerSequential_parallelFor_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, btIParallelForBody *_swig_go_4) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  btIParallelForBody *arg5 = 0 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btIParallelForBody **)&_swig_go_4; 
  
  (arg1)->parallelFor(arg2,arg3,arg4,(btIParallelForBody const &)*arg5);
  
}


float _wrap_btTaskSchedulerSequential_parallelSum_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, btIParallelSumBody *_swig_go_4) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  btIParallelSumBody *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btIParallelSumBody **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->parallelSum(arg2,arg3,arg4,(btIParallelSumBody const &)*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTaskSchedulerSequential_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  delete arg1;
  
}


_gostring_ _wrap_btTaskSchedulerSequential_getName_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  btITaskScheduler *swig_b0 = (btITaskScheduler *)arg1;
  result = (char *)((btITaskScheduler const *)swig_b0)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTaskSchedulerSequential_sleepWorkerThreadsHint_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  btITaskScheduler *swig_b0 = (btITaskScheduler *)arg1;
  (swig_b0)->sleepWorkerThreadsHint();
  
}


void _wrap_btTaskSchedulerSequential_activate_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  btITaskScheduler *swig_b0 = (btITaskScheduler *)arg1;
  (swig_b0)->activate();
  
}


void _wrap_btTaskSchedulerSequential_deactivate_bt_e001408c92acdfd7(btTaskSchedulerSequential *_swig_go_0) {
  btTaskSchedulerSequential *arg1 = (btTaskSchedulerSequential *) 0 ;
  
  arg1 = *(btTaskSchedulerSequential **)&_swig_go_0; 
  
  btITaskScheduler *swig_b0 = (btITaskScheduler *)arg1;
  (swig_b0)->deactivate();
  
}


void _wrap_btDbvtTreeCollider_pbp_set_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0, btDbvtBroadphase *_swig_go_1) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtBroadphase *arg2 = (btDbvtBroadphase *) 0 ;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  arg2 = *(btDbvtBroadphase **)&_swig_go_1; 
  
  if (arg1) (arg1)->pbp = arg2;
  
}


btDbvtBroadphase *_wrap_btDbvtTreeCollider_pbp_get_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtBroadphase *result = 0 ;
  btDbvtBroadphase *_swig_go_result;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  
  result = (btDbvtBroadphase *) ((arg1)->pbp);
  *(btDbvtBroadphase **)&_swig_go_result = (btDbvtBroadphase *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtTreeCollider_proxy_set_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0, btDbvtProxy *_swig_go_1) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtProxy *arg2 = (btDbvtProxy *) 0 ;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  arg2 = *(btDbvtProxy **)&_swig_go_1; 
  
  if (arg1) (arg1)->proxy = arg2;
  
}


btDbvtProxy *_wrap_btDbvtTreeCollider_proxy_get_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtProxy *result = 0 ;
  btDbvtProxy *_swig_go_result;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  
  result = (btDbvtProxy *) ((arg1)->proxy);
  *(btDbvtProxy **)&_swig_go_result = (btDbvtProxy *)result; 
  return _swig_go_result;
}


btDbvtTreeCollider *_wrap_new_btDbvtTreeCollider_bt_e001408c92acdfd7(btDbvtBroadphase *_swig_go_0) {
  btDbvtBroadphase *arg1 = (btDbvtBroadphase *) 0 ;
  btDbvtTreeCollider *result = 0 ;
  btDbvtTreeCollider *_swig_go_result;
  
  arg1 = *(btDbvtBroadphase **)&_swig_go_0; 
  
  result = (btDbvtTreeCollider *)new btDbvtTreeCollider(arg1);
  *(btDbvtTreeCollider **)&_swig_go_result = (btDbvtTreeCollider *)result; 
  return _swig_go_result;
}


void _wrap_btDbvtTreeCollider_Process__SWIG_0_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0, btDbvtNode *_swig_go_1, btDbvtNode *_swig_go_2) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  btDbvtNode *arg3 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  arg3 = *(btDbvtNode **)&_swig_go_2; 
  
  (arg1)->Process((btDbvtNode const *)arg2,(btDbvtNode const *)arg3);
  
}


void _wrap_btDbvtTreeCollider_Process__SWIG_1_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0, btDbvtNode *_swig_go_1) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->Process((btDbvtNode const *)arg2);
  
}


void _wrap_delete_btDbvtTreeCollider_bt_e001408c92acdfd7(btDbvtTreeCollider *_swig_go_0) {
  btDbvtTreeCollider *arg1 = (btDbvtTreeCollider *) 0 ;
  
  arg1 = *(btDbvtTreeCollider **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BroadphaseRayTester_m_rayCallback_set_bt_e001408c92acdfd7(BroadphaseRayTester *_swig_go_0, btBroadphaseRayCallback *_swig_go_1) {
  BroadphaseRayTester *arg1 = (BroadphaseRayTester *) 0 ;
  btBroadphaseRayCallback *arg2 = 0 ;
  
  arg1 = *(BroadphaseRayTester **)&_swig_go_0; 
  arg2 = *(btBroadphaseRayCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayCallback = *arg2;
  
}


btBroadphaseRayCallback *_wrap_BroadphaseRayTester_m_rayCallback_get_bt_e001408c92acdfd7(BroadphaseRayTester *_swig_go_0) {
  BroadphaseRayTester *arg1 = (BroadphaseRayTester *) 0 ;
  btBroadphaseRayCallback *result = 0 ;
  btBroadphaseRayCallback *_swig_go_result;
  
  arg1 = *(BroadphaseRayTester **)&_swig_go_0; 
  
  result = (btBroadphaseRayCallback *) &(btBroadphaseRayCallback &) ((arg1)->m_rayCallback);
  *(btBroadphaseRayCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


BroadphaseRayTester *_wrap_new_BroadphaseRayTester_bt_e001408c92acdfd7(btBroadphaseRayCallback *_swig_go_0) {
  btBroadphaseRayCallback *arg1 = 0 ;
  BroadphaseRayTester *result = 0 ;
  BroadphaseRayTester *_swig_go_result;
  
  arg1 = *(btBroadphaseRayCallback **)&_swig_go_0; 
  
  result = (BroadphaseRayTester *)new BroadphaseRayTester(*arg1);
  *(BroadphaseRayTester **)&_swig_go_result = (BroadphaseRayTester *)result; 
  return _swig_go_result;
}


void _wrap_BroadphaseRayTester_Process_bt_e001408c92acdfd7(BroadphaseRayTester *_swig_go_0, btDbvtNode *_swig_go_1) {
  BroadphaseRayTester *arg1 = (BroadphaseRayTester *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(BroadphaseRayTester **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->Process((btDbvtNode const *)arg2);
  
}


void _wrap_delete_BroadphaseRayTester_bt_e001408c92acdfd7(BroadphaseRayTester *_swig_go_0) {
  BroadphaseRayTester *arg1 = (BroadphaseRayTester *) 0 ;
  
  arg1 = *(BroadphaseRayTester **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BroadphaseAabbTester_m_aabbCallback_set_bt_e001408c92acdfd7(BroadphaseAabbTester *_swig_go_0, btBroadphaseAabbCallback *_swig_go_1) {
  BroadphaseAabbTester *arg1 = (BroadphaseAabbTester *) 0 ;
  btBroadphaseAabbCallback *arg2 = 0 ;
  
  arg1 = *(BroadphaseAabbTester **)&_swig_go_0; 
  arg2 = *(btBroadphaseAabbCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbCallback = *arg2;
  
}


btBroadphaseAabbCallback *_wrap_BroadphaseAabbTester_m_aabbCallback_get_bt_e001408c92acdfd7(BroadphaseAabbTester *_swig_go_0) {
  BroadphaseAabbTester *arg1 = (BroadphaseAabbTester *) 0 ;
  btBroadphaseAabbCallback *result = 0 ;
  btBroadphaseAabbCallback *_swig_go_result;
  
  arg1 = *(BroadphaseAabbTester **)&_swig_go_0; 
  
  result = (btBroadphaseAabbCallback *) &(btBroadphaseAabbCallback &) ((arg1)->m_aabbCallback);
  *(btBroadphaseAabbCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


BroadphaseAabbTester *_wrap_new_BroadphaseAabbTester_bt_e001408c92acdfd7(btBroadphaseAabbCallback *_swig_go_0) {
  btBroadphaseAabbCallback *arg1 = 0 ;
  BroadphaseAabbTester *result = 0 ;
  BroadphaseAabbTester *_swig_go_result;
  
  arg1 = *(btBroadphaseAabbCallback **)&_swig_go_0; 
  
  result = (BroadphaseAabbTester *)new BroadphaseAabbTester(*arg1);
  *(BroadphaseAabbTester **)&_swig_go_result = (BroadphaseAabbTester *)result; 
  return _swig_go_result;
}


void _wrap_BroadphaseAabbTester_Process_bt_e001408c92acdfd7(BroadphaseAabbTester *_swig_go_0, btDbvtNode *_swig_go_1) {
  BroadphaseAabbTester *arg1 = (BroadphaseAabbTester *) 0 ;
  btDbvtNode *arg2 = (btDbvtNode *) 0 ;
  
  arg1 = *(BroadphaseAabbTester **)&_swig_go_0; 
  arg2 = *(btDbvtNode **)&_swig_go_1; 
  
  (arg1)->Process((btDbvtNode const *)arg2);
  
}


void _wrap_delete_BroadphaseAabbTester_bt_e001408c92acdfd7(BroadphaseAabbTester *_swig_go_0) {
  BroadphaseAabbTester *arg1 = (BroadphaseAabbTester *) 0 ;
  
  arg1 = *(BroadphaseAabbTester **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_DISPATCH_DISCRETE_btDispatcherInfo_bt_e001408c92acdfd7() {
  btDispatcherInfo::DispatchFunc result;
  intgo _swig_go_result;
  
  
  result = btDispatcherInfo::DISPATCH_DISCRETE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DISPATCH_CONTINUOUS_btDispatcherInfo_bt_e001408c92acdfd7() {
  btDispatcherInfo::DispatchFunc result;
  intgo _swig_go_result;
  
  
  result = btDispatcherInfo::DISPATCH_CONTINUOUS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btDispatcherInfo *_wrap_new_btDispatcherInfo_bt_e001408c92acdfd7() {
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  
  result = (btDispatcherInfo *)new btDispatcherInfo();
  *(btDispatcherInfo **)&_swig_go_result = (btDispatcherInfo *)result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_timeStep_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, float _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_timeStep = arg2;
  
}


float _wrap_btDispatcherInfo_m_timeStep_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_timeStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_stepCount_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, intgo _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_stepCount = arg2;
  
}


intgo _wrap_btDispatcherInfo_m_stepCount_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_stepCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_dispatchFunc_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, intgo _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_dispatchFunc = arg2;
  
}


intgo _wrap_btDispatcherInfo_m_dispatchFunc_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_dispatchFunc);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_timeOfImpact_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, float _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_timeOfImpact = arg2;
  
}


float _wrap_btDispatcherInfo_m_timeOfImpact_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_timeOfImpact);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_useContinuous_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_useContinuous = arg2;
  
}


bool _wrap_btDispatcherInfo_m_useContinuous_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_useContinuous);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_debugDraw_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, btIDebugDraw *_swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btIDebugDraw *arg2 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = *(btIDebugDraw **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_debugDraw = arg2;
  
}


btIDebugDraw *_wrap_btDispatcherInfo_m_debugDraw_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btIDebugDraw *result = 0 ;
  btIDebugDraw *_swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (btIDebugDraw *) ((arg1)->m_debugDraw);
  *(btIDebugDraw **)&_swig_go_result = (btIDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_enableSatConvex_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_enableSatConvex = arg2;
  
}


bool _wrap_btDispatcherInfo_m_enableSatConvex_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_enableSatConvex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_enableSPU_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_enableSPU = arg2;
  
}


bool _wrap_btDispatcherInfo_m_enableSPU_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_enableSPU);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_useEpa_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_useEpa = arg2;
  
}


bool _wrap_btDispatcherInfo_m_useEpa_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_useEpa);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_allowedCcdPenetration_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, float _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_allowedCcdPenetration = arg2;
  
}


float _wrap_btDispatcherInfo_m_allowedCcdPenetration_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_allowedCcdPenetration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_useConvexConservativeDistanceUtil = arg2;
  
}


bool _wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_useConvexConservativeDistanceUtil);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, float _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_convexConservativeDistanceThreshold = arg2;
  
}


float _wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_convexConservativeDistanceThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcherInfo_m_deterministicOverlappingPairs_set_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, bool _swig_go_1) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_deterministicOverlappingPairs = arg2;
  
}


bool _wrap_btDispatcherInfo_m_deterministicOverlappingPairs_get_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_deterministicOverlappingPairs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btDispatcherInfo_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0) {
  btDispatcherInfo *arg1 = (btDispatcherInfo *) 0 ;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_CONTACT_POINT_ALGORITHMS_bt_e001408c92acdfd7() {
  ebtDispatcherQueryType result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_POINT_ALGORITHMS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CLOSEST_POINT_ALGORITHMS_bt_e001408c92acdfd7() {
  ebtDispatcherQueryType result;
  intgo _swig_go_result;
  
  
  result = BT_CLOSEST_POINT_ALGORITHMS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btDispatcher_bt_e001408c92acdfd7(btDispatcher *_swig_go_0) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  
  delete arg1;
  
}


btCollisionAlgorithm *_wrap_btDispatcher_findAlgorithm_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btPersistentManifold *_swig_go_3, intgo _swig_go_4) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btPersistentManifold *arg4 = (btPersistentManifold *) 0 ;
  ebtDispatcherQueryType arg5 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btPersistentManifold **)&_swig_go_3; 
  arg5 = (ebtDispatcherQueryType)_swig_go_4; 
  
  result = (btCollisionAlgorithm *)(arg1)->findAlgorithm((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4,arg5);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_btDispatcher_getNewManifold_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (btPersistentManifold *)(arg1)->getNewManifold((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


void _wrap_btDispatcher_releaseManifold_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  (arg1)->releaseManifold(arg2);
  
}


void _wrap_btDispatcher_clearManifold_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  (arg1)->clearManifold(arg2);
  
}


bool _wrap_btDispatcher_needsCollision_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (bool)(arg1)->needsCollision((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDispatcher_needsResponse_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (bool)(arg1)->needsResponse((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDispatcher_dispatchAllCollisionPairs_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btOverlappingPairCache *_swig_go_1, btDispatcherInfo *_swig_go_2, btDispatcher *_swig_go_3) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btOverlappingPairCache *arg2 = (btOverlappingPairCache *) 0 ;
  btDispatcherInfo *arg3 = 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCache **)&_swig_go_1; 
  arg3 = *(btDispatcherInfo **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  (arg1)->dispatchAllCollisionPairs(arg2,(btDispatcherInfo const &)*arg3,arg4);
  
}


intgo _wrap_btDispatcher_getNumManifolds_bt_e001408c92acdfd7(btDispatcher *_swig_go_0) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  
  result = (int)((btDispatcher const *)arg1)->getNumManifolds();
  _swig_go_result = result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_btDispatcher_getManifoldByIndexInternal_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, intgo _swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  int arg2 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btPersistentManifold *)(arg1)->getManifoldByIndexInternal(arg2);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btPersistentManifold **_wrap_btDispatcher_getInternalManifoldPointer_bt_e001408c92acdfd7(btDispatcher *_swig_go_0) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btPersistentManifold **result = 0 ;
  btPersistentManifold **_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  
  result = (btPersistentManifold **)(arg1)->getInternalManifoldPointer();
  *(btPersistentManifold ***)&_swig_go_result = (btPersistentManifold **)result; 
  return _swig_go_result;
}


btPoolAllocator *_wrap_btDispatcher_getInternalManifoldPool__SWIG_0_bt_e001408c92acdfd7(btDispatcher *_swig_go_0) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getInternalManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btPoolAllocator *_wrap_btDispatcher_getInternalManifoldPool__SWIG_1_bt_e001408c92acdfd7(btDispatcher *_swig_go_0) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  
  result = (btPoolAllocator *)((btDispatcher const *)arg1)->getInternalManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


void *_wrap_btDispatcher_allocateCollisionAlgorithm_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, intgo _swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  int arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (void *)(arg1)->allocateCollisionAlgorithm(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btDispatcher_freeCollisionAlgorithm_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, void *_swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->freeCollisionAlgorithm(arg2);
  
}


void _wrap_btConstraintRow_m_normal_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float *_swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  {
    size_t ii;
    btScalar *b = (btScalar *) arg1->m_normal;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((btScalar *) arg2 + ii);
  }
  
}


float *_wrap_btConstraintRow_m_normal_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar *)(btScalar *) ((arg1)->m_normal);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintRow_m_rhs_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float _swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_rhs = arg2;
  
}


float _wrap_btConstraintRow_m_rhs_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_rhs);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintRow_m_jacDiagInv_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float _swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_jacDiagInv = arg2;
  
}


float _wrap_btConstraintRow_m_jacDiagInv_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_jacDiagInv);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintRow_m_lowerLimit_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float _swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_lowerLimit = arg2;
  
}


float _wrap_btConstraintRow_m_lowerLimit_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_lowerLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintRow_m_upperLimit_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float _swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_upperLimit = arg2;
  
}


float _wrap_btConstraintRow_m_upperLimit_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_upperLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintRow_m_accumImpulse_set_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0, float _swig_go_1) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_accumImpulse = arg2;
  
}


float _wrap_btConstraintRow_m_accumImpulse_get_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_accumImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


btConstraintRow *_wrap_new_btConstraintRow_bt_e001408c92acdfd7() {
  btConstraintRow *result = 0 ;
  btConstraintRow *_swig_go_result;
  
  
  result = (btConstraintRow *)new btConstraintRow();
  *(btConstraintRow **)&_swig_go_result = (btConstraintRow *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConstraintRow_bt_e001408c92acdfd7(btConstraintRow *_swig_go_0) {
  btConstraintRow *arg1 = (btConstraintRow *) 0 ;
  
  arg1 = *(btConstraintRow **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_CONTACT_FLAG_LATERAL_FRICTION_INITIALIZED_bt_e001408c92acdfd7() {
  btContactPointFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_FLAG_LATERAL_FRICTION_INITIALIZED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONTACT_FLAG_HAS_CONTACT_CFM_bt_e001408c92acdfd7() {
  btContactPointFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_FLAG_HAS_CONTACT_CFM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONTACT_FLAG_HAS_CONTACT_ERP_bt_e001408c92acdfd7() {
  btContactPointFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_FLAG_HAS_CONTACT_ERP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONTACT_FLAG_CONTACT_STIFFNESS_DAMPING_bt_e001408c92acdfd7() {
  btContactPointFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_FLAG_CONTACT_STIFFNESS_DAMPING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONTACT_FLAG_FRICTION_ANCHOR_bt_e001408c92acdfd7() {
  btContactPointFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONTACT_FLAG_FRICTION_ANCHOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btManifoldPoint *_wrap_new_btManifoldPoint__SWIG_0_bt_e001408c92acdfd7() {
  btManifoldPoint *result = 0 ;
  btManifoldPoint *_swig_go_result;
  
  
  result = (btManifoldPoint *)new btManifoldPoint();
  *(btManifoldPoint **)&_swig_go_result = (btManifoldPoint *)result; 
  return _swig_go_result;
}


btManifoldPoint *_wrap_new_btManifoldPoint__SWIG_1_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  btManifoldPoint *result = 0 ;
  btManifoldPoint *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  result = (btManifoldPoint *)new btManifoldPoint((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  *(btManifoldPoint **)&_swig_go_result = (btManifoldPoint *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_localPointA_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localPointA = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_localPointA_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_localPointA);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_localPointB_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localPointB = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_localPointB_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_localPointB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_positionWorldOnB_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_positionWorldOnB = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_positionWorldOnB_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_positionWorldOnB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_positionWorldOnA_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_positionWorldOnA = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_positionWorldOnA_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_positionWorldOnA);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_normalWorldOnB_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_normalWorldOnB = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_normalWorldOnB_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_normalWorldOnB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_distance1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_distance1 = arg2;
  
}


float _wrap_btManifoldPoint_m_distance1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_distance1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_combinedFriction_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_combinedFriction = arg2;
  
}


float _wrap_btManifoldPoint_m_combinedFriction_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_combinedFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_combinedRollingFriction_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_combinedRollingFriction = arg2;
  
}


float _wrap_btManifoldPoint_m_combinedRollingFriction_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_combinedRollingFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_combinedSpinningFriction_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_combinedSpinningFriction = arg2;
  
}


float _wrap_btManifoldPoint_m_combinedSpinningFriction_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_combinedSpinningFriction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_combinedRestitution_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_combinedRestitution = arg2;
  
}


float _wrap_btManifoldPoint_m_combinedRestitution_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_combinedRestitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_partId0_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_partId0 = arg2;
  
}


intgo _wrap_btManifoldPoint_m_partId0_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_partId0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_partId1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_partId1 = arg2;
  
}


intgo _wrap_btManifoldPoint_m_partId1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_partId1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_index0_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_index0 = arg2;
  
}


intgo _wrap_btManifoldPoint_m_index0_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_index0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_index1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_index1 = arg2;
  
}


intgo _wrap_btManifoldPoint_m_index1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_index1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_userPersistentData_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, void *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_userPersistentData = arg2;
  
}


void *_wrap_btManifoldPoint_m_userPersistentData_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_userPersistentData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_contactPointFlags_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactPointFlags = arg2;
  
}


intgo _wrap_btManifoldPoint_m_contactPointFlags_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_contactPointFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_appliedImpulse_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulse = arg2;
  
}


float _wrap_btManifoldPoint_m_appliedImpulse_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_appliedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_prevRHS_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_prevRHS = arg2;
  
}


float _wrap_btManifoldPoint_m_prevRHS_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_prevRHS);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_appliedImpulseLateral1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulseLateral1 = arg2;
  
}


float _wrap_btManifoldPoint_m_appliedImpulseLateral1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_appliedImpulseLateral1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_appliedImpulseLateral2_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_appliedImpulseLateral2 = arg2;
  
}


float _wrap_btManifoldPoint_m_appliedImpulseLateral2_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_appliedImpulseLateral2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_contactMotion1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactMotion1 = arg2;
  
}


float _wrap_btManifoldPoint_m_contactMotion1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_contactMotion1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_contactMotion2_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactMotion2 = arg2;
  
}


float _wrap_btManifoldPoint_m_contactMotion2_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_contactMotion2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_frictionCFM_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_frictionCFM = arg2;
  
}


float _wrap_btManifoldPoint_m_frictionCFM_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_frictionCFM);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_lifeTime_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, intgo _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_lifeTime = arg2;
  
}


intgo _wrap_btManifoldPoint_m_lifeTime_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_lifeTime);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_lateralFrictionDir1_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_lateralFrictionDir1 = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_lateralFrictionDir1_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_lateralFrictionDir1);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_m_lateralFrictionDir2_set_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, btVector3 *_swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_lateralFrictionDir2 = *arg2;
  
}


btVector3 *_wrap_btManifoldPoint_m_lateralFrictionDir2_get_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_lateralFrictionDir2);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


float _wrap_btManifoldPoint_getDistance_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar)((btManifoldPoint const *)arg1)->getDistance();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btManifoldPoint_getLifeTime_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (int)((btManifoldPoint const *)arg1)->getLifeTime();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btManifoldPoint_getPositionWorldOnA_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *) &((btManifoldPoint const *)arg1)->getPositionWorldOnA();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btManifoldPoint_getPositionWorldOnB_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btVector3 *) &((btManifoldPoint const *)arg1)->getPositionWorldOnB();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btManifoldPoint_setDistance_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0, float _swig_go_1) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setDistance(arg2);
  
}


float _wrap_btManifoldPoint_getAppliedImpulse_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  result = (btScalar)((btManifoldPoint const *)arg1)->getAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btManifoldPoint_bt_e001408c92acdfd7(btManifoldPoint *_swig_go_0) {
  btManifoldPoint *arg1 = (btManifoldPoint *) 0 ;
  
  arg1 = *(btManifoldPoint **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_gContactBreakingThreshold_set_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  
  arg1 = (btScalar)_swig_go_0; 
  
  gContactBreakingThreshold = arg1;
  
}


float _wrap_gContactBreakingThreshold_get_bt_e001408c92acdfd7() {
  btScalar result;
  float _swig_go_result;
  
  
  result = (btScalar)gContactBreakingThreshold;
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_MIN_CONTACT_MANIFOLD_TYPE_bt_e001408c92acdfd7() {
  btContactManifoldTypes result;
  intgo _swig_go_result;
  
  
  result = MIN_CONTACT_MANIFOLD_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_PERSISTENT_MANIFOLD_TYPE_bt_e001408c92acdfd7() {
  btContactManifoldTypes result;
  intgo _swig_go_result;
  
  
  result = BT_PERSISTENT_MANIFOLD_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_m_companionIdA_set_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdA = arg2;
  
}


intgo _wrap_btPersistentManifold_m_companionIdA_get_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_m_companionIdB_set_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdB = arg2;
  
}


intgo _wrap_btPersistentManifold_m_companionIdB_get_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdB);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_m_index1a_set_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_index1a = arg2;
  
}


intgo _wrap_btPersistentManifold_m_index1a_get_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_index1a);
  _swig_go_result = result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_new_btPersistentManifold__SWIG_0_bt_e001408c92acdfd7() {
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  
  result = (btPersistentManifold *)new btPersistentManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_new_btPersistentManifold__SWIG_1_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  result = (btPersistentManifold *)new btPersistentManifold((btCollisionObject const *)arg1,(btCollisionObject const *)arg2,arg3,arg4,arg5);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btPersistentManifold_getBody0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (btCollisionObject *)((btPersistentManifold const *)arg1)->getBody0();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btPersistentManifold_getBody1_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (btCollisionObject *)((btPersistentManifold const *)arg1)->getBody1();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_setBodies_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  (arg1)->setBodies((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  
}


void _wrap_btPersistentManifold_clearUserCache_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  
  (arg1)->clearUserCache(*arg2);
  
}


intgo _wrap_btPersistentManifold_getNumContacts_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int)((btPersistentManifold const *)arg1)->getNumContacts();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_setNumContacts_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setNumContacts(arg2);
  
}


btManifoldPoint *_wrap_btPersistentManifold_getContactPoint__SWIG_0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  btManifoldPoint *result = 0 ;
  btManifoldPoint *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btManifoldPoint *) &((btPersistentManifold const *)arg1)->getContactPoint(arg2);
  *(btManifoldPoint **)&_swig_go_result = result; 
  return _swig_go_result;
}


btManifoldPoint *_wrap_btPersistentManifold_getContactPoint__SWIG_1_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  btManifoldPoint *result = 0 ;
  btManifoldPoint *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btManifoldPoint *) &(arg1)->getContactPoint(arg2);
  *(btManifoldPoint **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPersistentManifold_getContactBreakingThreshold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (btScalar)((btPersistentManifold const *)arg1)->getContactBreakingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btPersistentManifold_getContactProcessingThreshold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (btScalar)((btPersistentManifold const *)arg1)->getContactProcessingThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_setContactBreakingThreshold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, float _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setContactBreakingThreshold(arg2);
  
}


void _wrap_btPersistentManifold_setContactProcessingThreshold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, float _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setContactProcessingThreshold(arg2);
  
}


intgo _wrap_btPersistentManifold_getCacheEntry_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  
  result = (int)((btPersistentManifold const *)arg1)->getCacheEntry((btManifoldPoint const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPersistentManifold_addManifoldPoint__SWIG_0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1, bool _swig_go_2) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  bool arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (int)(arg1)->addManifoldPoint((btManifoldPoint const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPersistentManifold_addManifoldPoint__SWIG_1_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  
  result = (int)(arg1)->addManifoldPoint((btManifoldPoint const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_removeContactPoint_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->removeContactPoint(arg2);
  
}


void _wrap_btPersistentManifold_replaceContactPoint_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1, intgo _swig_go_2) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->replaceContactPoint((btManifoldPoint const &)*arg2,arg3);
  
}


bool _wrap_btPersistentManifold_validContactDistance_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btManifoldPoint *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btManifoldPoint *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btManifoldPoint **)&_swig_go_1; 
  
  result = (bool)((btPersistentManifold const *)arg1)->validContactDistance((btManifoldPoint const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_refreshContactPoints_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->refreshContactPoints((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


void _wrap_btPersistentManifold_clearManifold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  (arg1)->clearManifold();
  
}


intgo _wrap_btPersistentManifold_calculateSerializeBufferSize_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int)((btPersistentManifold const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btPersistentManifold_serialize_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btPersistentManifold *_swig_go_1, void *_swig_go_2, btSerializer *_swig_go_3) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  void *arg3 = (void *) 0 ;
  btSerializer *arg4 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(btSerializer **)&_swig_go_3; 
  
  result = (char *)((btPersistentManifold const *)arg1)->serialize((btPersistentManifold const *)arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btPersistentManifold_deSerialize__SWIG_0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btPersistentManifoldDoubleData *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btPersistentManifoldDoubleData *arg2 = (btPersistentManifoldDoubleData *) 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btPersistentManifoldDoubleData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btPersistentManifoldDoubleData const *)arg2);
  
}


void _wrap_btPersistentManifold_deSerialize__SWIG_1_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btPersistentManifoldFloatData *_swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btPersistentManifoldFloatData *arg2 = (btPersistentManifoldFloatData *) 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btPersistentManifoldFloatData **)&_swig_go_1; 
  
  (arg1)->deSerialize((btPersistentManifoldFloatData const *)arg2);
  
}


void _wrap_delete_btPersistentManifold_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtPersistentManifold_M_objectType_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  if (swig_b0) (swig_b0)->m_objectType = arg2;
  
}


intgo _wrap_GetbtPersistentManifold_M_objectType_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  result = (int) ((swig_b0)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPersistentManifold_getObjectType_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  btTypedObject *swig_b0 = (btTypedObject *)arg1;
  result = (int)((btTypedObject const *)swig_b0)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheLocalPointA_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCacheLocalPointA;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCacheLocalPointA_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCacheLocalPointA);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheLocalPointB_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCacheLocalPointB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCacheLocalPointB_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCacheLocalPointB);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCachePositionWorldOnA_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCachePositionWorldOnA;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCachePositionWorldOnA_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCachePositionWorldOnA);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCachePositionWorldOnB_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCachePositionWorldOnB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCachePositionWorldOnB_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCachePositionWorldOnB);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheNormalWorldOnB_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCacheNormalWorldOnB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCacheNormalWorldOnB_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCacheNormalWorldOnB);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheLateralFrictionDir1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCacheLateralFrictionDir1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCacheLateralFrictionDir1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCacheLateralFrictionDir1);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheLateralFrictionDir2_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btVector3DoubleData (*_swig_go_1)[4]) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) (btVector3DoubleData *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3DoubleData *b = (btVector3DoubleData *) arg1->m_pointCacheLateralFrictionDir2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3DoubleData *) arg2 + ii);
  }
  
}


btVector3DoubleData (*_wrap_btPersistentManifoldDoubleData_m_pointCacheLateralFrictionDir2_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0))[4] {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)(btVector3DoubleData *) ((arg1)->m_pointCacheLateralFrictionDir2);
  *(btVector3DoubleData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheDistance_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheDistance;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheDistance_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheDistance);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulse_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheAppliedImpulse;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulse_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheAppliedImpulse);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCachePrevRHS_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCachePrevRHS;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCachePrevRHS_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCachePrevRHS);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedFriction_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedFriction_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedFriction);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedRollingFriction_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedRollingFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedRollingFriction_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedRollingFriction);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedSpinningFriction_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedSpinningFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedSpinningFriction_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedSpinningFriction);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedRestitution_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedRestitution;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedRestitution_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedRestitution);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCachePartId0_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCachePartId0;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCachePartId0_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCachePartId0);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCachePartId1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCachePartId1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCachePartId1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCachePartId1);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheIndex0_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheIndex0;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCacheIndex0_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheIndex0);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheIndex1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheIndex1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCacheIndex1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheIndex1);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheContactPointFlags_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheContactPointFlags;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCacheContactPointFlags_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheContactPointFlags);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulseLateral1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheAppliedImpulseLateral1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulseLateral1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheAppliedImpulseLateral1);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulseLateral2_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheAppliedImpulseLateral2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheAppliedImpulseLateral2_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheAppliedImpulseLateral2);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheContactMotion1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheContactMotion1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheContactMotion1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheContactMotion1);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheContactMotion2_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheContactMotion2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheContactMotion2_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheContactMotion2);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheContactCFM_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheContactCFM;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheContactCFM_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheContactCFM);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedContactStiffness1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedContactStiffness1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedContactStiffness1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedContactStiffness1);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheContactERP_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheContactERP;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheContactERP_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheContactERP);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedContactDamping1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheCombinedContactDamping1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheCombinedContactDamping1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheCombinedContactDamping1);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheFrictionCFM_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_pointCacheFrictionCFM;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btPersistentManifoldDoubleData_m_pointCacheFrictionCFM_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_pointCacheFrictionCFM);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_pointCacheLifeTime_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheLifeTime;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldDoubleData_m_pointCacheLifeTime_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheLifeTime);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_numCachedPoints_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numCachedPoints = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_numCachedPoints_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numCachedPoints);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_companionIdA_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdA = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_companionIdA_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_companionIdB_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdB = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_companionIdB_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdB);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_index1a_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_index1a = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_index1a_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_index1a);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_objectType_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_objectType_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_contactBreakingThreshold_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactBreakingThreshold = arg2;
  
}


double _wrap_btPersistentManifoldDoubleData_m_contactBreakingThreshold_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_contactBreakingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_contactProcessingThreshold_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, double _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactProcessingThreshold = arg2;
  
}


double _wrap_btPersistentManifoldDoubleData_m_contactProcessingThreshold_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_contactProcessingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_padding_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_padding = arg2;
  
}


intgo _wrap_btPersistentManifoldDoubleData_m_padding_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_padding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_body0_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btCollisionObjectDoubleData *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btCollisionObjectDoubleData *arg2 = (btCollisionObjectDoubleData *) 0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_body0 = arg2;
  
}


btCollisionObjectDoubleData *_wrap_btPersistentManifoldDoubleData_m_body0_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btCollisionObjectDoubleData *result = 0 ;
  btCollisionObjectDoubleData *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btCollisionObjectDoubleData *) ((arg1)->m_body0);
  *(btCollisionObjectDoubleData **)&_swig_go_result = (btCollisionObjectDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldDoubleData_m_body1_set_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0, btCollisionObjectDoubleData *_swig_go_1) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btCollisionObjectDoubleData *arg2 = (btCollisionObjectDoubleData *) 0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_body1 = arg2;
  
}


btCollisionObjectDoubleData *_wrap_btPersistentManifoldDoubleData_m_body1_get_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  btCollisionObjectDoubleData *result = 0 ;
  btCollisionObjectDoubleData *_swig_go_result;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  result = (btCollisionObjectDoubleData *) ((arg1)->m_body1);
  *(btCollisionObjectDoubleData **)&_swig_go_result = (btCollisionObjectDoubleData *)result; 
  return _swig_go_result;
}


btPersistentManifoldDoubleData *_wrap_new_btPersistentManifoldDoubleData_bt_e001408c92acdfd7() {
  btPersistentManifoldDoubleData *result = 0 ;
  btPersistentManifoldDoubleData *_swig_go_result;
  
  
  result = (btPersistentManifoldDoubleData *)new btPersistentManifoldDoubleData();
  *(btPersistentManifoldDoubleData **)&_swig_go_result = (btPersistentManifoldDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPersistentManifoldDoubleData_bt_e001408c92acdfd7(btPersistentManifoldDoubleData *_swig_go_0) {
  btPersistentManifoldDoubleData *arg1 = (btPersistentManifoldDoubleData *) 0 ;
  
  arg1 = *(btPersistentManifoldDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheLocalPointA_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCacheLocalPointA;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCacheLocalPointA_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCacheLocalPointA);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheLocalPointB_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCacheLocalPointB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCacheLocalPointB_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCacheLocalPointB);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCachePositionWorldOnA_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCachePositionWorldOnA;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCachePositionWorldOnA_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCachePositionWorldOnA);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCachePositionWorldOnB_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCachePositionWorldOnB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCachePositionWorldOnB_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCachePositionWorldOnB);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheNormalWorldOnB_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCacheNormalWorldOnB;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCacheNormalWorldOnB_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCacheNormalWorldOnB);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheLateralFrictionDir1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCacheLateralFrictionDir1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCacheLateralFrictionDir1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCacheLateralFrictionDir1);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheLateralFrictionDir2_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btVector3FloatData (*_swig_go_1)[4]) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) (btVector3FloatData *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3FloatData *b = (btVector3FloatData *) arg1->m_pointCacheLateralFrictionDir2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btVector3FloatData *) arg2 + ii);
  }
  
}


btVector3FloatData (*_wrap_btPersistentManifoldFloatData_m_pointCacheLateralFrictionDir2_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0))[4] {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData (*_swig_go_result)[4];
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)(btVector3FloatData *) ((arg1)->m_pointCacheLateralFrictionDir2);
  *(btVector3FloatData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheDistance_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheDistance;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheDistance_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheDistance);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulse_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheAppliedImpulse;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulse_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheAppliedImpulse);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCachePrevRHS_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCachePrevRHS;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCachePrevRHS_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCachePrevRHS);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedFriction_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedFriction_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedFriction);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedRollingFriction_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedRollingFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedRollingFriction_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedRollingFriction);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedSpinningFriction_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedSpinningFriction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedSpinningFriction_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedSpinningFriction);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedRestitution_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedRestitution;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedRestitution_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedRestitution);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCachePartId0_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCachePartId0;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCachePartId0_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCachePartId0);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCachePartId1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCachePartId1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCachePartId1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCachePartId1);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheIndex0_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheIndex0;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCacheIndex0_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheIndex0);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheIndex1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheIndex1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCacheIndex1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheIndex1);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheContactPointFlags_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheContactPointFlags;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCacheContactPointFlags_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheContactPointFlags);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulseLateral1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheAppliedImpulseLateral1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulseLateral1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheAppliedImpulseLateral1);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulseLateral2_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheAppliedImpulseLateral2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheAppliedImpulseLateral2_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheAppliedImpulseLateral2);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheContactMotion1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheContactMotion1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheContactMotion1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheContactMotion1);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheContactMotion2_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheContactMotion2;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheContactMotion2_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheContactMotion2);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheContactCFM_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheContactCFM;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheContactCFM_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheContactCFM);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedContactStiffness1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedContactStiffness1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedContactStiffness1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedContactStiffness1);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheContactERP_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheContactERP;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheContactERP_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheContactERP);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheCombinedContactDamping1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheCombinedContactDamping1;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheCombinedContactDamping1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheCombinedContactDamping1);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheFrictionCFM_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_pointCacheFrictionCFM;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btPersistentManifoldFloatData_m_pointCacheFrictionCFM_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_pointCacheFrictionCFM);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_pointCacheLifeTime_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_pointCacheLifeTime;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btPersistentManifoldFloatData_m_pointCacheLifeTime_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_pointCacheLifeTime);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_numCachedPoints_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numCachedPoints = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_numCachedPoints_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numCachedPoints);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_companionIdA_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdA = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_companionIdA_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_companionIdB_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_companionIdB = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_companionIdB_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_companionIdB);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_index1a_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_index1a = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_index1a_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_index1a);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_objectType_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_objectType = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_objectType_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_contactBreakingThreshold_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactBreakingThreshold = arg2;
  
}


float _wrap_btPersistentManifoldFloatData_m_contactBreakingThreshold_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_contactBreakingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_contactProcessingThreshold_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, float _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_contactProcessingThreshold = arg2;
  
}


float _wrap_btPersistentManifoldFloatData_m_contactProcessingThreshold_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_contactProcessingThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_padding_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, intgo _swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_padding = arg2;
  
}


intgo _wrap_btPersistentManifoldFloatData_m_padding_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_padding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_body0_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btCollisionObjectFloatData *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btCollisionObjectFloatData *arg2 = (btCollisionObjectFloatData *) 0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_body0 = arg2;
  
}


btCollisionObjectFloatData *_wrap_btPersistentManifoldFloatData_m_body0_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btCollisionObjectFloatData *result = 0 ;
  btCollisionObjectFloatData *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btCollisionObjectFloatData *) ((arg1)->m_body0);
  *(btCollisionObjectFloatData **)&_swig_go_result = (btCollisionObjectFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btPersistentManifoldFloatData_m_body1_set_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0, btCollisionObjectFloatData *_swig_go_1) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btCollisionObjectFloatData *arg2 = (btCollisionObjectFloatData *) 0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  arg2 = *(btCollisionObjectFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_body1 = arg2;
  
}


btCollisionObjectFloatData *_wrap_btPersistentManifoldFloatData_m_body1_get_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  btCollisionObjectFloatData *result = 0 ;
  btCollisionObjectFloatData *_swig_go_result;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  result = (btCollisionObjectFloatData *) ((arg1)->m_body1);
  *(btCollisionObjectFloatData **)&_swig_go_result = (btCollisionObjectFloatData *)result; 
  return _swig_go_result;
}


btPersistentManifoldFloatData *_wrap_new_btPersistentManifoldFloatData_bt_e001408c92acdfd7() {
  btPersistentManifoldFloatData *result = 0 ;
  btPersistentManifoldFloatData *_swig_go_result;
  
  
  result = (btPersistentManifoldFloatData *)new btPersistentManifoldFloatData();
  *(btPersistentManifoldFloatData **)&_swig_go_result = (btPersistentManifoldFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPersistentManifoldFloatData_bt_e001408c92acdfd7(btPersistentManifoldFloatData *_swig_go_0) {
  btPersistentManifoldFloatData *arg1 = (btPersistentManifoldFloatData *) 0 ;
  
  arg1 = *(btPersistentManifoldFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btDiscreteCollisionDetectorInterface_bt_e001408c92acdfd7(btDiscreteCollisionDetectorInterface *_swig_go_0) {
  btDiscreteCollisionDetectorInterface *arg1 = (btDiscreteCollisionDetectorInterface *) 0 ;
  
  arg1 = *(btDiscreteCollisionDetectorInterface **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0_bt_e001408c92acdfd7(btDiscreteCollisionDetectorInterface *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3, bool _swig_go_4) {
  btDiscreteCollisionDetectorInterface *arg1 = (btDiscreteCollisionDetectorInterface *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  bool arg5 ;
  
  arg1 = *(btDiscreteCollisionDetectorInterface **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1_bt_e001408c92acdfd7(btDiscreteCollisionDetectorInterface *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3) {
  btDiscreteCollisionDetectorInterface *arg1 = (btDiscreteCollisionDetectorInterface *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btDiscreteCollisionDetectorInterface **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4);
  
}


void _wrap_btStorageResult_m_normalOnSurfaceB_set_bt_e001408c92acdfd7(btStorageResult *_swig_go_0, btVector3 *_swig_go_1) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_normalOnSurfaceB = *arg2;
  
}


btVector3 *_wrap_btStorageResult_m_normalOnSurfaceB_get_bt_e001408c92acdfd7(btStorageResult *_swig_go_0) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_normalOnSurfaceB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btStorageResult_m_closestPointInB_set_bt_e001408c92acdfd7(btStorageResult *_swig_go_0, btVector3 *_swig_go_1) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_closestPointInB = *arg2;
  
}


btVector3 *_wrap_btStorageResult_m_closestPointInB_get_bt_e001408c92acdfd7(btStorageResult *_swig_go_0) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_closestPointInB);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btStorageResult_m_distance_set_bt_e001408c92acdfd7(btStorageResult *_swig_go_0, float _swig_go_1) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_distance = arg2;
  
}


float _wrap_btStorageResult_m_distance_get_bt_e001408c92acdfd7(btStorageResult *_swig_go_0) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_distance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btStorageResult_bt_e001408c92acdfd7(btStorageResult *_swig_go_0) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btStorageResult_addContactPoint_bt_e001408c92acdfd7(btStorageResult *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btStorageResult *arg1 = (btStorageResult *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btStorageResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->addContactPoint((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_gContactAddedCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  ContactAddedCallback arg1 = (ContactAddedCallback) 0 ;
  
  arg1 = *(ContactAddedCallback *)&_swig_go_0; 
  
  gContactAddedCallback = arg1;
  
}


void* _wrap_gContactAddedCallback_get_bt_e001408c92acdfd7() {
  ContactAddedCallback result;
  void* _swig_go_result;
  
  
  result = (ContactAddedCallback)gContactAddedCallback;
  *(ContactAddedCallback *)&_swig_go_result = (ContactAddedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedRestitutionCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedRestitutionCallback = arg1;
  
}


void* _wrap_gCalculateCombinedRestitutionCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedRestitutionCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedFrictionCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedFrictionCallback = arg1;
  
}


void* _wrap_gCalculateCombinedFrictionCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedFrictionCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedRollingFrictionCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedRollingFrictionCallback = arg1;
  
}


void* _wrap_gCalculateCombinedRollingFrictionCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedRollingFrictionCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedSpinningFrictionCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedSpinningFrictionCallback = arg1;
  
}


void* _wrap_gCalculateCombinedSpinningFrictionCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedSpinningFrictionCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedContactDampingCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedContactDampingCallback = arg1;
  
}


void* _wrap_gCalculateCombinedContactDampingCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedContactDampingCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


void _wrap_gCalculateCombinedContactStiffnessCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  CalculateCombinedCallback arg1 = (CalculateCombinedCallback) 0 ;
  
  arg1 = *(CalculateCombinedCallback *)&_swig_go_0; 
  
  gCalculateCombinedContactStiffnessCallback = arg1;
  
}


void* _wrap_gCalculateCombinedContactStiffnessCallback_get_bt_e001408c92acdfd7() {
  CalculateCombinedCallback result;
  void* _swig_go_result;
  
  
  result = (CalculateCombinedCallback)gCalculateCombinedContactStiffnessCallback;
  *(CalculateCombinedCallback *)&_swig_go_result = (CalculateCombinedCallback)result; 
  return _swig_go_result;
}


btManifoldResult *_wrap_new_btManifoldResult__SWIG_0_bt_e001408c92acdfd7() {
  btManifoldResult *result = 0 ;
  btManifoldResult *_swig_go_result;
  
  
  result = (btManifoldResult *)new btManifoldResult();
  *(btManifoldResult **)&_swig_go_result = (btManifoldResult *)result; 
  return _swig_go_result;
}


btManifoldResult *_wrap_new_btManifoldResult__SWIG_1_bt_e001408c92acdfd7(btCollisionObjectWrapper *_swig_go_0, btCollisionObjectWrapper *_swig_go_1) {
  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btManifoldResult *result = 0 ;
  btManifoldResult *_swig_go_result;
  
  arg1 = *(btCollisionObjectWrapper **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  
  result = (btManifoldResult *)new btManifoldResult((btCollisionObjectWrapper const *)arg1,(btCollisionObjectWrapper const *)arg2);
  *(btManifoldResult **)&_swig_go_result = (btManifoldResult *)result; 
  return _swig_go_result;
}


void _wrap_delete_btManifoldResult_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btManifoldResult_setPersistentManifold_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  (arg1)->setPersistentManifold(arg2);
  
}


btPersistentManifold *_wrap_btManifoldResult_getPersistentManifold__SWIG_0_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btPersistentManifold *)((btManifoldResult const *)arg1)->getPersistentManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_btManifoldResult_getPersistentManifold__SWIG_1_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btPersistentManifold *)(arg1)->getPersistentManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldResult_setShapeIdentifiersA_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setShapeIdentifiersA(arg2,arg3);
  
}


void _wrap_btManifoldResult_setShapeIdentifiersB_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setShapeIdentifiersB(arg2,arg3);
  
}


void _wrap_btManifoldResult_addContactPoint_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->addContactPoint((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btManifoldResult_refreshContactPoints_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  (arg1)->refreshContactPoints();
  
}


btCollisionObjectWrapper *_wrap_btManifoldResult_getBody0Wrap_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObjectWrapper *result = 0 ;
  btCollisionObjectWrapper *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btCollisionObjectWrapper *)((btManifoldResult const *)arg1)->getBody0Wrap();
  *(btCollisionObjectWrapper **)&_swig_go_result = (btCollisionObjectWrapper *)result; 
  return _swig_go_result;
}


btCollisionObjectWrapper *_wrap_btManifoldResult_getBody1Wrap_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObjectWrapper *result = 0 ;
  btCollisionObjectWrapper *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btCollisionObjectWrapper *)((btManifoldResult const *)arg1)->getBody1Wrap();
  *(btCollisionObjectWrapper **)&_swig_go_result = (btCollisionObjectWrapper *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldResult_setBody0Wrap_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, btCollisionObjectWrapper *_swig_go_1) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  
  (arg1)->setBody0Wrap((btCollisionObjectWrapper const *)arg2);
  
}


void _wrap_btManifoldResult_setBody1Wrap_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, btCollisionObjectWrapper *_swig_go_1) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  
  (arg1)->setBody1Wrap((btCollisionObjectWrapper const *)arg2);
  
}


btCollisionObject *_wrap_btManifoldResult_getBody0Internal_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btCollisionObject *)((btManifoldResult const *)arg1)->getBody0Internal();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btManifoldResult_getBody1Internal_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btCollisionObject *)((btManifoldResult const *)arg1)->getBody1Internal();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_btManifoldResult_m_closestPointDistanceThreshold_set_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0, float _swig_go_1) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_closestPointDistanceThreshold = arg2;
  
}


float _wrap_btManifoldResult_m_closestPointDistanceThreshold_get_bt_e001408c92acdfd7(btManifoldResult *_swig_go_0) {
  btManifoldResult *arg1 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btManifoldResult **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_closestPointDistanceThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedRestitution_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedRestitution((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedRollingFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedRollingFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedSpinningFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedSpinningFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedContactDamping_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedContactDamping((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btManifoldResult_calculateCombinedContactStiffness_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedContactStiffness((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionAlgorithmCreateFunc_m_swapped_set_bt_e001408c92acdfd7(btCollisionAlgorithmCreateFunc *_swig_go_0, bool _swig_go_1) {
  btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
  bool arg2 ;
  
  arg1 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_swapped = arg2;
  
}


bool _wrap_btCollisionAlgorithmCreateFunc_m_swapped_get_bt_e001408c92acdfd7(btCollisionAlgorithmCreateFunc *_swig_go_0) {
  btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_swapped);
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionAlgorithmCreateFunc *_wrap_new_btCollisionAlgorithmCreateFunc_bt_e001408c92acdfd7() {
  btCollisionAlgorithmCreateFunc *result = 0 ;
  btCollisionAlgorithmCreateFunc *_swig_go_result;
  
  
  result = (btCollisionAlgorithmCreateFunc *)new btCollisionAlgorithmCreateFunc();
  *(btCollisionAlgorithmCreateFunc **)&_swig_go_result = (btCollisionAlgorithmCreateFunc *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionAlgorithmCreateFunc_bt_e001408c92acdfd7(btCollisionAlgorithmCreateFunc *_swig_go_0) {
  btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
  
  arg1 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_0; 
  
  delete arg1;
  
}


btCollisionAlgorithm *_wrap_btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithmCreateFunc *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3) {
  btCollisionAlgorithmCreateFunc *arg1 = (btCollisionAlgorithmCreateFunc *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  
  result = (btCollisionAlgorithm *)(arg1)->CreateCollisionAlgorithm(*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


intgo _wrap_CD_STATIC_STATIC_REPORTED_btCollisionDispatcher_bt_e001408c92acdfd7() {
  btCollisionDispatcher::DispatcherFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionDispatcher::CD_STATIC_STATIC_REPORTED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD_btCollisionDispatcher_bt_e001408c92acdfd7() {
  btCollisionDispatcher::DispatcherFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionDispatcher::CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION_btCollisionDispatcher_bt_e001408c92acdfd7() {
  btCollisionDispatcher::DispatcherFlags result;
  intgo _swig_go_result;
  
  
  result = btCollisionDispatcher::CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_btCollisionDispatcher_getDispatcherFlags_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (int)((btCollisionDispatcher const *)arg1)->getDispatcherFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_setDispatcherFlags_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, intgo _swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int arg2 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setDispatcherFlags(arg2);
  
}


void _wrap_btCollisionDispatcher_registerCollisionCreateFunc_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, btCollisionAlgorithmCreateFunc *_swig_go_3) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *arg4 = (btCollisionAlgorithmCreateFunc *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_3; 
  
  (arg1)->registerCollisionCreateFunc(arg2,arg3,arg4);
  
}


void _wrap_btCollisionDispatcher_registerClosestPointsCreateFunc_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, btCollisionAlgorithmCreateFunc *_swig_go_3) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *arg4 = (btCollisionAlgorithmCreateFunc *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btCollisionAlgorithmCreateFunc **)&_swig_go_3; 
  
  (arg1)->registerClosestPointsCreateFunc(arg2,arg3,arg4);
  
}


intgo _wrap_btCollisionDispatcher_getNumManifolds_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (int)((btCollisionDispatcher const *)arg1)->getNumManifolds();
  _swig_go_result = result; 
  return _swig_go_result;
}


btPersistentManifold **_wrap_btCollisionDispatcher_getInternalManifoldPointer_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btPersistentManifold **result = 0 ;
  btPersistentManifold **_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btPersistentManifold **)(arg1)->getInternalManifoldPointer();
  *(btPersistentManifold ***)&_swig_go_result = (btPersistentManifold **)result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_btCollisionDispatcher_getManifoldByIndexInternal_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, intgo _swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int arg2 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btPersistentManifold *)(arg1)->getManifoldByIndexInternal(arg2);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btCollisionDispatcher *_wrap_new_btCollisionDispatcher_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  btCollisionDispatcher *result = 0 ;
  btCollisionDispatcher *_swig_go_result;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  
  result = (btCollisionDispatcher *)new btCollisionDispatcher(arg1);
  *(btCollisionDispatcher **)&_swig_go_result = (btCollisionDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionDispatcher_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  delete arg1;
  
}


btPersistentManifold *_wrap_btCollisionDispatcher_getNewManifold_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (btPersistentManifold *)(arg1)->getNewManifold((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_releaseManifold_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  (arg1)->releaseManifold(arg2);
  
}


void _wrap_btCollisionDispatcher_clearManifold_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  (arg1)->clearManifold(arg2);
  
}


btCollisionAlgorithm *_wrap_btCollisionDispatcher_findAlgorithm_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btPersistentManifold *_swig_go_3, intgo _swig_go_4) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btPersistentManifold *arg4 = (btPersistentManifold *) 0 ;
  ebtDispatcherQueryType arg5 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btPersistentManifold **)&_swig_go_3; 
  arg5 = (ebtDispatcherQueryType)_swig_go_4; 
  
  result = (btCollisionAlgorithm *)(arg1)->findAlgorithm((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4,arg5);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


bool _wrap_btCollisionDispatcher_needsCollision_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (bool)(arg1)->needsCollision((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionDispatcher_needsResponse_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  
  result = (bool)(arg1)->needsResponse((btCollisionObject const *)arg2,(btCollisionObject const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_dispatchAllCollisionPairs_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btOverlappingPairCache *_swig_go_1, btDispatcherInfo *_swig_go_2, btDispatcher *_swig_go_3) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btOverlappingPairCache *arg2 = (btOverlappingPairCache *) 0 ;
  btDispatcherInfo *arg3 = 0 ;
  btDispatcher *arg4 = (btDispatcher *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCache **)&_swig_go_1; 
  arg3 = *(btDispatcherInfo **)&_swig_go_2; 
  arg4 = *(btDispatcher **)&_swig_go_3; 
  
  (arg1)->dispatchAllCollisionPairs(arg2,(btDispatcherInfo const &)*arg3,arg4);
  
}


void _wrap_btCollisionDispatcher_setNearCallback_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, void* _swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btNearCallback arg2 = (btNearCallback) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btNearCallback *)&_swig_go_1; 
  
  (arg1)->setNearCallback(arg2);
  
}


void* _wrap_btCollisionDispatcher_getNearCallback_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btNearCallback result;
  void* _swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btNearCallback)((btCollisionDispatcher const *)arg1)->getNearCallback();
  *(btNearCallback *)&_swig_go_result = (btNearCallback)result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_defaultNearCallback_bt_e001408c92acdfd7(btBroadphasePair *_swig_go_0, btCollisionDispatcher *_swig_go_1, btDispatcherInfo *_swig_go_2) {
  btBroadphasePair *arg1 = 0 ;
  btCollisionDispatcher *arg2 = 0 ;
  btDispatcherInfo *arg3 = 0 ;
  
  arg1 = *(btBroadphasePair **)&_swig_go_0; 
  arg2 = *(btCollisionDispatcher **)&_swig_go_1; 
  arg3 = *(btDispatcherInfo **)&_swig_go_2; 
  
  btCollisionDispatcher::defaultNearCallback(*arg1,*arg2,(btDispatcherInfo const &)*arg3);
  
}


void *_wrap_btCollisionDispatcher_allocateCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, intgo _swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  int arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (void *)(arg1)->allocateCollisionAlgorithm(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_freeCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, void *_swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->freeCollisionAlgorithm(arg2);
  
}


btCollisionConfiguration *_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_0_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionConfiguration *result = 0 ;
  btCollisionConfiguration *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btCollisionConfiguration *)(arg1)->getCollisionConfiguration();
  *(btCollisionConfiguration **)&_swig_go_result = (btCollisionConfiguration *)result; 
  return _swig_go_result;
}


btCollisionConfiguration *_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_1_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionConfiguration *result = 0 ;
  btCollisionConfiguration *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btCollisionConfiguration *)((btCollisionDispatcher const *)arg1)->getCollisionConfiguration();
  *(btCollisionConfiguration **)&_swig_go_result = (btCollisionConfiguration *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionDispatcher_setCollisionConfiguration_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0, btCollisionConfiguration *_swig_go_1) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btCollisionConfiguration *arg2 = (btCollisionConfiguration *) 0 ;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionConfiguration **)&_swig_go_1; 
  
  (arg1)->setCollisionConfiguration(arg2);
  
}


btPoolAllocator *_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_0_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getInternalManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btPoolAllocator *_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_1_bt_e001408c92acdfd7(btCollisionDispatcher *_swig_go_0) {
  btCollisionDispatcher *arg1 = (btCollisionDispatcher *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btCollisionDispatcher **)&_swig_go_0; 
  
  result = (btPoolAllocator *)((btCollisionDispatcher const *)arg1)->getInternalManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btCollisionPairCallback *_wrap_new_btCollisionPairCallback_bt_e001408c92acdfd7(btDispatcherInfo *_swig_go_0, btCollisionDispatcher *_swig_go_1) {
  btDispatcherInfo *arg1 = 0 ;
  btCollisionDispatcher *arg2 = (btCollisionDispatcher *) 0 ;
  btCollisionPairCallback *result = 0 ;
  btCollisionPairCallback *_swig_go_result;
  
  arg1 = *(btDispatcherInfo **)&_swig_go_0; 
  arg2 = *(btCollisionDispatcher **)&_swig_go_1; 
  
  result = (btCollisionPairCallback *)new btCollisionPairCallback((btDispatcherInfo const &)*arg1,arg2);
  *(btCollisionPairCallback **)&_swig_go_result = (btCollisionPairCallback *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionPairCallback_bt_e001408c92acdfd7(btCollisionPairCallback *_swig_go_0) {
  btCollisionPairCallback *arg1 = (btCollisionPairCallback *) 0 ;
  
  arg1 = *(btCollisionPairCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btCollisionPairCallback_processOverlap_bt_e001408c92acdfd7(btCollisionPairCallback *_swig_go_0, btBroadphasePair *_swig_go_1) {
  btCollisionPairCallback *arg1 = (btCollisionPairCallback *) 0 ;
  btBroadphasePair *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionPairCallback **)&_swig_go_0; 
  arg2 = *(btBroadphasePair **)&_swig_go_1; 
  
  result = (bool)(arg1)->processOverlap(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btCollisionWorld *_wrap_new_btCollisionWorld_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btBroadphaseInterface *_swig_go_1, btCollisionConfiguration *_swig_go_2) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btBroadphaseInterface *arg2 = (btBroadphaseInterface *) 0 ;
  btCollisionConfiguration *arg3 = (btCollisionConfiguration *) 0 ;
  btCollisionWorld *result = 0 ;
  btCollisionWorld *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btBroadphaseInterface **)&_swig_go_1; 
  arg3 = *(btCollisionConfiguration **)&_swig_go_2; 
  
  result = (btCollisionWorld *)new btCollisionWorld(arg1,arg2,arg3);
  *(btCollisionWorld **)&_swig_go_result = (btCollisionWorld *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionWorld_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCollisionWorld_setBroadphase_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btBroadphaseInterface *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btBroadphaseInterface *arg2 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btBroadphaseInterface **)&_swig_go_1; 
  
  (arg1)->setBroadphase(arg2);
  
}


btBroadphaseInterface *_wrap_btCollisionWorld_getBroadphase__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btBroadphaseInterface *)((btCollisionWorld const *)arg1)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btBroadphaseInterface *_wrap_btCollisionWorld_getBroadphase__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btBroadphaseInterface *)(arg1)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btOverlappingPairCache *_wrap_btCollisionWorld_getPairCache_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *)(arg1)->getPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btCollisionWorld_getDispatcher__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btDispatcher *)(arg1)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btCollisionWorld_getDispatcher__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btDispatcher *)((btCollisionWorld const *)arg1)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionWorld_updateSingleAabb_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->updateSingleAabb(arg2);
  
}


void _wrap_btCollisionWorld_updateAabbs_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  (arg1)->updateAabbs();
  
}


void _wrap_btCollisionWorld_computeOverlappingPairs_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  (arg1)->computeOverlappingPairs();
  
}


void _wrap_btCollisionWorld_setDebugDrawer_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btIDebugDraw *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btIDebugDraw *arg2 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btIDebugDraw **)&_swig_go_1; 
  
  (arg1)->setDebugDrawer(arg2);
  
}


btIDebugDraw *_wrap_btCollisionWorld_getDebugDrawer_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btIDebugDraw *result = 0 ;
  btIDebugDraw *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btIDebugDraw *)(arg1)->getDebugDrawer();
  *(btIDebugDraw **)&_swig_go_result = (btIDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionWorld_debugDrawWorld_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  (arg1)->debugDrawWorld();
  
}


void _wrap_btCollisionWorld_debugDrawObject_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btTransform *_swig_go_1, btCollisionShape *_swig_go_2, btVector3 *_swig_go_3) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btTransform *arg2 = 0 ;
  btCollisionShape *arg3 = (btCollisionShape *) 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionShape **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->debugDrawObject((btTransform const &)*arg2,(btCollisionShape const *)arg3,(btVector3 const &)*arg4);
  
}


intgo _wrap_btCollisionWorld_getNumCollisionObjects_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (int)((btCollisionWorld const *)arg1)->getNumCollisionObjects();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionWorld_rayTest_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  ((btCollisionWorld const *)arg1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btCollisionWorld_convexSweepTest__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  ((btCollisionWorld const *)arg1)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5,arg6);
  
}


void _wrap_btCollisionWorld_convexSweepTest__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  
  ((btCollisionWorld const *)arg1)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5);
  
}


void _wrap_btCollisionWorld_contactTest_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionWorld::ContactResultCallback *_swig_go_2) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg3 = 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_2; 
  
  (arg1)->contactTest(arg2,*arg3);
  
}


void _wrap_btCollisionWorld_contactPairTest_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionWorld::ContactResultCallback *_swig_go_3) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg4 = 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_3; 
  
  (arg1)->contactPairTest(arg2,arg3,*arg4);
  
}


void _wrap_btCollisionWorld_rayTestSingle_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionShape *_swig_go_3, btTransform *_swig_go_4, btCollisionWorld::RayResultCallback *_swig_go_5) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionShape *arg4 = (btCollisionShape *) 0 ;
  btTransform *arg5 = 0 ;
  btCollisionWorld::RayResultCallback *arg6 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btCollisionWorld::RayResultCallback **)&_swig_go_5; 
  
  btCollisionWorld::rayTestSingle((btTransform const &)*arg1,(btTransform const &)*arg2,arg3,(btCollisionShape const *)arg4,(btTransform const &)*arg5,*arg6);
  
}


void _wrap_btCollisionWorld_rayTestSingleInternal_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  btCollisionWorld::rayTestSingleInternal((btTransform const &)*arg1,(btTransform const &)*arg2,(btCollisionObjectWrapper const *)arg3,*arg4);
  
}


void _wrap_btCollisionWorld_objectQuerySingle_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObject *_swig_go_3, btCollisionShape *_swig_go_4, btTransform *_swig_go_5, btCollisionWorld::ConvexResultCallback *_swig_go_6, float _swig_go_7) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObject *arg4 = (btCollisionObject *) 0 ;
  btCollisionShape *arg5 = (btCollisionShape *) 0 ;
  btTransform *arg6 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg7 = 0 ;
  btScalar arg8 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObject **)&_swig_go_3; 
  arg5 = *(btCollisionShape **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  
  btCollisionWorld::objectQuerySingle((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,arg4,(btCollisionShape const *)arg5,(btTransform const &)*arg6,*arg7,arg8);
  
}


void _wrap_btCollisionWorld_objectQuerySingleInternal_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  btCollisionWorld::objectQuerySingleInternal((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,(btCollisionObjectWrapper const *)arg4,*arg5,arg6);
  
}


void _wrap_btCollisionWorld_addCollisionObject__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->addCollisionObject(arg2,arg3,arg4);
  
}


void _wrap_btCollisionWorld_addCollisionObject__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->addCollisionObject(arg2,arg3);
  
}


void _wrap_btCollisionWorld_addCollisionObject__SWIG_2_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->addCollisionObject(arg2);
  
}


void _wrap_btCollisionWorld_refreshBroadphaseProxy_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->refreshBroadphaseProxy(arg2);
  
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btCollisionObjectArray *) &(arg1)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btCollisionObjectArray *) &((btCollisionWorld const *)arg1)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionWorld_removeCollisionObject_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->removeCollisionObject(arg2);
  
}


void _wrap_btCollisionWorld_performDiscreteCollisionDetection_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  (arg1)->performDiscreteCollisionDetection();
  
}


btDispatcherInfo *_wrap_btCollisionWorld_getDispatchInfo__SWIG_0_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btDispatcherInfo *) &(arg1)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


btDispatcherInfo *_wrap_btCollisionWorld_getDispatchInfo__SWIG_1_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (btDispatcherInfo *) &((btCollisionWorld const *)arg1)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btCollisionWorld_getForceUpdateAllAabbs_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  
  result = (bool)((btCollisionWorld const *)arg1)->getForceUpdateAllAabbs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionWorld_setForceUpdateAllAabbs_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, bool _swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setForceUpdateAllAabbs(arg2);
  
}


void _wrap_btCollisionWorld_serialize_bt_e001408c92acdfd7(btCollisionWorld *_swig_go_0, btSerializer *_swig_go_1) {
  btCollisionWorld *arg1 = (btCollisionWorld *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btCollisionWorld **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  (arg1)->serialize(arg2);
  
}


btUsageBitfield *_wrap_new_btUsageBitfield_bt_e001408c92acdfd7() {
  btUsageBitfield *result = 0 ;
  btUsageBitfield *_swig_go_result;
  
  
  result = (btUsageBitfield *)new btUsageBitfield();
  *(btUsageBitfield **)&_swig_go_result = (btUsageBitfield *)result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_reset_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_btUsageBitfield_usedVertexA_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->usedVertexA = arg2;
  
}


short _wrap_btUsageBitfield_usedVertexA_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->usedVertexA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_usedVertexB_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->usedVertexB = arg2;
  
}


short _wrap_btUsageBitfield_usedVertexB_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->usedVertexB);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_usedVertexC_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->usedVertexC = arg2;
  
}


short _wrap_btUsageBitfield_usedVertexC_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->usedVertexC);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_usedVertexD_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->usedVertexD = arg2;
  
}


short _wrap_btUsageBitfield_usedVertexD_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->usedVertexD);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_unused1_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->unused1 = arg2;
  
}


short _wrap_btUsageBitfield_unused1_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->unused1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_unused2_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->unused2 = arg2;
  
}


short _wrap_btUsageBitfield_unused2_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->unused2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_unused3_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->unused3 = arg2;
  
}


short _wrap_btUsageBitfield_unused3_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->unused3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUsageBitfield_unused4_set_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0, short _swig_go_1) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->unused4 = arg2;
  
}


short _wrap_btUsageBitfield_unused4_get_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->unused4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btUsageBitfield_bt_e001408c92acdfd7(btUsageBitfield *_swig_go_0) {
  btUsageBitfield *arg1 = (btUsageBitfield *) 0 ;
  
  arg1 = *(btUsageBitfield **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSubSimplexClosestResult_m_closestPointOnSimplex_set_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, btVector3 *_swig_go_1) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_closestPointOnSimplex = *arg2;
  
}


btVector3 *_wrap_btSubSimplexClosestResult_m_closestPointOnSimplex_get_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_closestPointOnSimplex);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSubSimplexClosestResult_m_usedVertices_set_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, btUsageBitfield *_swig_go_1) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btUsageBitfield *arg2 = (btUsageBitfield *) 0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = *(btUsageBitfield **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_usedVertices = *arg2;
  
}


btUsageBitfield *_wrap_btSubSimplexClosestResult_m_usedVertices_get_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btUsageBitfield *result = 0 ;
  btUsageBitfield *_swig_go_result;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  result = (btUsageBitfield *)& ((arg1)->m_usedVertices);
  *(btUsageBitfield **)&_swig_go_result = (btUsageBitfield *)result; 
  return _swig_go_result;
}


void _wrap_btSubSimplexClosestResult_m_barycentricCoords_set_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, float *_swig_go_1) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  {
    size_t ii;
    btScalar *b = (btScalar *) arg1->m_barycentricCoords;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((btScalar *) arg2 + ii);
  }
  
}


float *_wrap_btSubSimplexClosestResult_m_barycentricCoords_get_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  result = (btScalar *)(btScalar *) ((arg1)->m_barycentricCoords);
  *(btScalar **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSubSimplexClosestResult_m_degenerate_set_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, bool _swig_go_1) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  bool arg2 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_degenerate = arg2;
  
}


bool _wrap_btSubSimplexClosestResult_m_degenerate_get_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_degenerate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSubSimplexClosestResult_reset_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


bool _wrap_btSubSimplexClosestResult_isValid_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  result = (bool)(arg1)->isValid();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  (arg1)->setBarycentricCoordinates(arg2,arg3,arg4,arg5);
  
}


void _wrap_btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setBarycentricCoordinates(arg2,arg3,arg4);
  
}


void _wrap_btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setBarycentricCoordinates(arg2,arg3);
  
}


void _wrap_btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0, float _swig_go_1) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setBarycentricCoordinates(arg2);
  
}


void _wrap_btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  (arg1)->setBarycentricCoordinates();
  
}


btSubSimplexClosestResult *_wrap_new_btSubSimplexClosestResult_bt_e001408c92acdfd7() {
  btSubSimplexClosestResult *result = 0 ;
  btSubSimplexClosestResult *_swig_go_result;
  
  
  result = (btSubSimplexClosestResult *)new btSubSimplexClosestResult();
  *(btSubSimplexClosestResult **)&_swig_go_result = (btSubSimplexClosestResult *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSubSimplexClosestResult_bt_e001408c92acdfd7(btSubSimplexClosestResult *_swig_go_0) {
  btSubSimplexClosestResult *arg1 = (btSubSimplexClosestResult *) 0 ;
  
  arg1 = *(btSubSimplexClosestResult **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btVoronoiSimplexSolver_m_numVertices_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, intgo _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  int arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numVertices = arg2;
  
}


intgo _wrap_btVoronoiSimplexSolver_m_numVertices_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numVertices);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_simplexVectorW_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 (*_swig_go_1)[5]) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) (btVector3 *)0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3 *b = (btVector3 *) arg1->m_simplexVectorW;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((btVector3 *) arg2 + ii);
  }
  
}


btVector3 (*_wrap_btVoronoiSimplexSolver_m_simplexVectorW_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0))[5] {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 (*_swig_go_result)[5];
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)(btVector3 *) ((arg1)->m_simplexVectorW);
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_simplexPointsP_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 (*_swig_go_1)[5]) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) (btVector3 *)0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3 *b = (btVector3 *) arg1->m_simplexPointsP;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((btVector3 *) arg2 + ii);
  }
  
}


btVector3 (*_wrap_btVoronoiSimplexSolver_m_simplexPointsP_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0))[5] {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 (*_swig_go_result)[5];
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)(btVector3 *) ((arg1)->m_simplexPointsP);
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_simplexPointsQ_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 (*_swig_go_1)[5]) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) (btVector3 *)0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3 *b = (btVector3 *) arg1->m_simplexPointsQ;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((btVector3 *) arg2 + ii);
  }
  
}


btVector3 (*_wrap_btVoronoiSimplexSolver_m_simplexPointsQ_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0))[5] {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 (*_swig_go_result)[5];
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)(btVector3 *) ((arg1)->m_simplexPointsQ);
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_cachedP1_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cachedP1 = *arg2;
  
}


btVector3 *_wrap_btVoronoiSimplexSolver_m_cachedP1_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_cachedP1);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_cachedP2_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cachedP2 = *arg2;
  
}


btVector3 *_wrap_btVoronoiSimplexSolver_m_cachedP2_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_cachedP2);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_cachedV_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cachedV = *arg2;
  
}


btVector3 *_wrap_btVoronoiSimplexSolver_m_cachedV_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_cachedV);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_lastW_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_lastW = *arg2;
  
}


btVector3 *_wrap_btVoronoiSimplexSolver_m_lastW_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_lastW);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_equalVertexThreshold_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, float _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_equalVertexThreshold = arg2;
  
}


float _wrap_btVoronoiSimplexSolver_m_equalVertexThreshold_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_equalVertexThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_cachedValidClosest_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, bool _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_cachedValidClosest = arg2;
  
}


bool _wrap_btVoronoiSimplexSolver_m_cachedValidClosest_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_cachedValidClosest);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_cachedBC_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btSubSimplexClosestResult *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btSubSimplexClosestResult *arg2 = (btSubSimplexClosestResult *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btSubSimplexClosestResult **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cachedBC = *arg2;
  
}


btSubSimplexClosestResult *_wrap_btVoronoiSimplexSolver_m_cachedBC_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btSubSimplexClosestResult *result = 0 ;
  btSubSimplexClosestResult *_swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btSubSimplexClosestResult *)& ((arg1)->m_cachedBC);
  *(btSubSimplexClosestResult **)&_swig_go_result = (btSubSimplexClosestResult *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_m_needsUpdate_set_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, bool _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_needsUpdate = arg2;
  
}


bool _wrap_btVoronoiSimplexSolver_m_needsUpdate_get_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_needsUpdate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_removeVertex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, intgo _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  int arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->removeVertex(arg2);
  
}


void _wrap_btVoronoiSimplexSolver_reduceVertices_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btUsageBitfield *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btUsageBitfield *arg2 = 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btUsageBitfield **)&_swig_go_1; 
  
  (arg1)->reduceVertices((btUsageBitfield const &)*arg2);
  
}


bool _wrap_btVoronoiSimplexSolver_updateClosestVectorAndPoints_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (bool)(arg1)->updateClosestVectorAndPoints();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVoronoiSimplexSolver_closestPtPointTetrahedron_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btSubSimplexClosestResult *_swig_go_6) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btSubSimplexClosestResult *arg7 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btSubSimplexClosestResult **)&_swig_go_6; 
  
  result = (bool)(arg1)->closestPtPointTetrahedron((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,*arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVoronoiSimplexSolver_pointOutsideOfPlane_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  result = (int)(arg1)->pointOutsideOfPlane((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVoronoiSimplexSolver_closestPtPointTriangle_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btSubSimplexClosestResult *_swig_go_5) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btSubSimplexClosestResult *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btSubSimplexClosestResult **)&_swig_go_5; 
  
  result = (bool)(arg1)->closestPtPointTriangle((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


btVoronoiSimplexSolver *_wrap_new_btVoronoiSimplexSolver_bt_e001408c92acdfd7() {
  btVoronoiSimplexSolver *result = 0 ;
  btVoronoiSimplexSolver *_swig_go_result;
  
  
  result = (btVoronoiSimplexSolver *)new btVoronoiSimplexSolver();
  *(btVoronoiSimplexSolver **)&_swig_go_result = (btVoronoiSimplexSolver *)result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_reset_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_btVoronoiSimplexSolver_addVertex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->addVertex((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btVoronoiSimplexSolver_setEqualVertexThreshold_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, float _swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setEqualVertexThreshold(arg2);
  
}


float _wrap_btVoronoiSimplexSolver_getEqualVertexThreshold_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btScalar)((btVoronoiSimplexSolver const *)arg1)->getEqualVertexThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVoronoiSimplexSolver_closest_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (bool)(arg1)->closest(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btVoronoiSimplexSolver_maxVertex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->maxVertex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVoronoiSimplexSolver_fullSimplex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (bool)((btVoronoiSimplexSolver const *)arg1)->fullSimplex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btVoronoiSimplexSolver_getSimplex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  btVector3 *arg4 = (btVector3 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (int)((btVoronoiSimplexSolver const *)arg1)->getSimplex(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btVoronoiSimplexSolver_inSimplex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (bool)(arg1)->inSimplex((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_backup_closest_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->backup_closest(*arg2);
  
}


bool _wrap_btVoronoiSimplexSolver_emptySimplex_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (bool)((btVoronoiSimplexSolver const *)arg1)->emptySimplex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btVoronoiSimplexSolver_compute_points_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->compute_points(*arg2,*arg3);
  
}


intgo _wrap_btVoronoiSimplexSolver_numVertices_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  result = (int)((btVoronoiSimplexSolver const *)arg1)->numVertices();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btVoronoiSimplexSolver_bt_e001408c92acdfd7(btVoronoiSimplexSolver *_swig_go_0) {
  btVoronoiSimplexSolver *arg1 = (btVoronoiSimplexSolver *) 0 ;
  
  arg1 = *(btVoronoiSimplexSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


btGjkEpaPenetrationDepthSolver *_wrap_new_btGjkEpaPenetrationDepthSolver_bt_e001408c92acdfd7() {
  btGjkEpaPenetrationDepthSolver *result = 0 ;
  btGjkEpaPenetrationDepthSolver *_swig_go_result;
  
  
  result = (btGjkEpaPenetrationDepthSolver *)new btGjkEpaPenetrationDepthSolver();
  *(btGjkEpaPenetrationDepthSolver **)&_swig_go_result = (btGjkEpaPenetrationDepthSolver *)result; 
  return _swig_go_result;
}


bool _wrap_btGjkEpaPenetrationDepthSolver_calcPenDepth_bt_e001408c92acdfd7(btGjkEpaPenetrationDepthSolver *_swig_go_0, btVoronoiSimplexSolver *_swig_go_1, btConvexShape *_swig_go_2, btConvexShape *_swig_go_3, btTransform *_swig_go_4, btTransform *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btVector3 *_swig_go_8, btIDebugDraw *_swig_go_9) {
  btGjkEpaPenetrationDepthSolver *arg1 = (btGjkEpaPenetrationDepthSolver *) 0 ;
  btVoronoiSimplexSolver *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btConvexShape *arg4 = (btConvexShape *) 0 ;
  btTransform *arg5 = 0 ;
  btTransform *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btVector3 *arg9 = 0 ;
  btIDebugDraw *arg10 = (btIDebugDraw *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGjkEpaPenetrationDepthSolver **)&_swig_go_0; 
  arg2 = *(btVoronoiSimplexSolver **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btConvexShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = *(btIDebugDraw **)&_swig_go_9; 
  
  result = (bool)(arg1)->calcPenDepth(*arg2,(btConvexShape const *)arg3,(btConvexShape const *)arg4,(btTransform const &)*arg5,(btTransform const &)*arg6,*arg7,*arg8,*arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btGjkEpaPenetrationDepthSolver_bt_e001408c92acdfd7(btGjkEpaPenetrationDepthSolver *_swig_go_0) {
  btGjkEpaPenetrationDepthSolver *arg1 = (btGjkEpaPenetrationDepthSolver *) 0 ;
  
  arg1 = *(btGjkEpaPenetrationDepthSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btTriangleCallback_bt_e001408c92acdfd7(btTriangleCallback *_swig_go_0) {
  btTriangleCallback *arg1 = (btTriangleCallback *) 0 ;
  
  arg1 = *(btTriangleCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTriangleCallback_processTriangle_bt_e001408c92acdfd7(btTriangleCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btTriangleCallback *arg1 = (btTriangleCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btTriangleCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


void _wrap_delete_btInternalTriangleIndexCallback_bt_e001408c92acdfd7(btInternalTriangleIndexCallback *_swig_go_0) {
  btInternalTriangleIndexCallback *arg1 = (btInternalTriangleIndexCallback *) 0 ;
  
  arg1 = *(btInternalTriangleIndexCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btInternalTriangleIndexCallback_internalProcessTriangleIndex_bt_e001408c92acdfd7(btInternalTriangleIndexCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btInternalTriangleIndexCallback *arg1 = (btInternalTriangleIndexCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btInternalTriangleIndexCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->internalProcessTriangleIndex(arg2,arg3,arg4);
  
}


intgo _wrap_PHY_FLOAT_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_FLOAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PHY_DOUBLE_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_DOUBLE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PHY_INTEGER_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_INTEGER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PHY_SHORT_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_SHORT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PHY_FIXEDPOINT88_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_FIXEDPOINT88;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PHY_UCHAR_bt_e001408c92acdfd7() {
  PHY_ScalarType result;
  intgo _swig_go_result;
  
  
  result = PHY_UCHAR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btConcaveShape_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConcaveShape_processAllTriangles_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btConcaveShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


float _wrap_btConcaveShape_getMargin_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  result = (btScalar)((btConcaveShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_setMargin_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, float _swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


void _wrap_btConcaveShape_getAabb_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btConcaveShape_getBoundingSphere_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btConcaveShape_getAngularMotionDisc_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (btScalar)((btCollisionShape const *)swig_b0)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConcaveShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, float _swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (btScalar)((btCollisionShape const *)swig_b0)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_calculateTemporalAabb_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btConcaveShape_isPolyhedral_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isConvex2d_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isConvex_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isNonMoving_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isConcave_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isCompound_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isSoftBody_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConcaveShape_isInfinite_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (bool)((btCollisionShape const *)swig_b0)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_setLocalScaling_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btVector3 *_swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btConcaveShape_getLocalScaling_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (btVector3 *) &((btCollisionShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_calculateLocalInertia_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btConcaveShape_getName_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (char *)((btCollisionShape const *)swig_b0)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btConcaveShape_getShapeType_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConcaveShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = ((btCollisionShape const *)swig_b0)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btConcaveShape_setUserPointer_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, void *_swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserPointer(arg2);
  
}


void *_wrap_btConcaveShape_getUserPointer_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (void *)((btCollisionShape const *)swig_b0)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_setUserIndex_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, intgo _swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserIndex(arg2);
  
}


intgo _wrap_btConcaveShape_getUserIndex_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConcaveShape_setUserIndex2_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, intgo _swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  (swig_b0)->setUserIndex2(arg2);
  
}


intgo _wrap_btConcaveShape_getUserIndex2_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConcaveShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (int)((btCollisionShape const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btConcaveShape_serialize_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  result = (char *)((btCollisionShape const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btConcaveShape_serializeSingleShape_bt_e001408c92acdfd7(btConcaveShape *_swig_go_0, btSerializer *_swig_go_1) {
  btConcaveShape *arg1 = (btConcaveShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btConcaveShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btCollisionShape *swig_b0 = (btCollisionShape *)arg1;
  ((btCollisionShape const *)swig_b0)->serializeSingleShape(arg2);
  
}


void _wrap_delete_btStridingMeshInterface_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btStridingMeshInterface_InternalProcessAllTriangles_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, btInternalTriangleIndexCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btInternalTriangleIndexCallback *arg2 = (btInternalTriangleIndexCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(btInternalTriangleIndexCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btStridingMeshInterface const *)arg1)->InternalProcessAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btStridingMeshInterface_calculateAabbBruteForce_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->calculateAabbBruteForce(*arg2,*arg3);
  
}


void _wrap_btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, PHY_ScalarType *_swig_go_3, intgo *_swig_go_4, char **_swig_go_5, intgo *_swig_go_6, intgo *_swig_go_7, PHY_ScalarType *_swig_go_8, intgo _swig_go_9) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = 0 ;
  PHY_ScalarType *arg4 = 0 ;
  int *arg5 = 0 ;
  unsigned char **arg6 = (unsigned char **) 0 ;
  int *arg7 = 0 ;
  int *arg8 = 0 ;
  PHY_ScalarType *arg9 = 0 ;
  int arg10 ;
  int e3 ;
  int e5 ;
  int e7 ;
  int e8 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  
  e3 = (int)*_swig_go_2;
  arg3 = &e3;
  
  arg4 = *(PHY_ScalarType **)&_swig_go_3; 
  
  e5 = (int)*_swig_go_4;
  arg5 = &e5;
  
  arg6 = *(unsigned char ***)&_swig_go_5; 
  
  e7 = (int)*_swig_go_6;
  arg7 = &e7;
  
  
  e8 = (int)*_swig_go_7;
  arg8 = &e8;
  
  arg9 = *(PHY_ScalarType **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  
  (arg1)->getLockedVertexIndexBase(arg2,*arg3,*arg4,*arg5,arg6,*arg7,*arg8,*arg9,arg10);
  
  *_swig_go_2 = (intgo)e3; 
  *_swig_go_4 = (intgo)e5; 
  *_swig_go_6 = (intgo)e7; 
  *_swig_go_7 = (intgo)e8; 
}


void _wrap_btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, PHY_ScalarType *_swig_go_3, intgo *_swig_go_4, char **_swig_go_5, intgo *_swig_go_6, intgo *_swig_go_7, PHY_ScalarType *_swig_go_8) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = 0 ;
  PHY_ScalarType *arg4 = 0 ;
  int *arg5 = 0 ;
  unsigned char **arg6 = (unsigned char **) 0 ;
  int *arg7 = 0 ;
  int *arg8 = 0 ;
  PHY_ScalarType *arg9 = 0 ;
  int e3 ;
  int e5 ;
  int e7 ;
  int e8 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  
  e3 = (int)*_swig_go_2;
  arg3 = &e3;
  
  arg4 = *(PHY_ScalarType **)&_swig_go_3; 
  
  e5 = (int)*_swig_go_4;
  arg5 = &e5;
  
  arg6 = *(unsigned char ***)&_swig_go_5; 
  
  e7 = (int)*_swig_go_6;
  arg7 = &e7;
  
  
  e8 = (int)*_swig_go_7;
  arg8 = &e8;
  
  arg9 = *(PHY_ScalarType **)&_swig_go_8; 
  
  (arg1)->getLockedVertexIndexBase(arg2,*arg3,*arg4,*arg5,arg6,*arg7,*arg8,*arg9);
  
  *_swig_go_2 = (intgo)e3; 
  *_swig_go_4 = (intgo)e5; 
  *_swig_go_6 = (intgo)e7; 
  *_swig_go_7 = (intgo)e8; 
}


void _wrap_btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, PHY_ScalarType *_swig_go_3, intgo *_swig_go_4, char **_swig_go_5, intgo *_swig_go_6, intgo *_swig_go_7, PHY_ScalarType *_swig_go_8, intgo _swig_go_9) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = 0 ;
  PHY_ScalarType *arg4 = 0 ;
  int *arg5 = 0 ;
  unsigned char **arg6 = (unsigned char **) 0 ;
  int *arg7 = 0 ;
  int *arg8 = 0 ;
  PHY_ScalarType *arg9 = 0 ;
  int arg10 ;
  int e3 ;
  int e5 ;
  int e7 ;
  int e8 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  
  e3 = (int)*_swig_go_2;
  arg3 = &e3;
  
  arg4 = *(PHY_ScalarType **)&_swig_go_3; 
  
  e5 = (int)*_swig_go_4;
  arg5 = &e5;
  
  arg6 = *(unsigned char ***)&_swig_go_5; 
  
  e7 = (int)*_swig_go_6;
  arg7 = &e7;
  
  
  e8 = (int)*_swig_go_7;
  arg8 = &e8;
  
  arg9 = *(PHY_ScalarType **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  
  ((btStridingMeshInterface const *)arg1)->getLockedReadOnlyVertexIndexBase((unsigned char const **)arg2,*arg3,*arg4,*arg5,(unsigned char const **)arg6,*arg7,*arg8,*arg9,arg10);
  
  *_swig_go_2 = (intgo)e3; 
  *_swig_go_4 = (intgo)e5; 
  *_swig_go_6 = (intgo)e7; 
  *_swig_go_7 = (intgo)e8; 
}


void _wrap_btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, PHY_ScalarType *_swig_go_3, intgo *_swig_go_4, char **_swig_go_5, intgo *_swig_go_6, intgo *_swig_go_7, PHY_ScalarType *_swig_go_8) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = 0 ;
  PHY_ScalarType *arg4 = 0 ;
  int *arg5 = 0 ;
  unsigned char **arg6 = (unsigned char **) 0 ;
  int *arg7 = 0 ;
  int *arg8 = 0 ;
  PHY_ScalarType *arg9 = 0 ;
  int e3 ;
  int e5 ;
  int e7 ;
  int e8 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  
  e3 = (int)*_swig_go_2;
  arg3 = &e3;
  
  arg4 = *(PHY_ScalarType **)&_swig_go_3; 
  
  e5 = (int)*_swig_go_4;
  arg5 = &e5;
  
  arg6 = *(unsigned char ***)&_swig_go_5; 
  
  e7 = (int)*_swig_go_6;
  arg7 = &e7;
  
  
  e8 = (int)*_swig_go_7;
  arg8 = &e8;
  
  arg9 = *(PHY_ScalarType **)&_swig_go_8; 
  
  ((btStridingMeshInterface const *)arg1)->getLockedReadOnlyVertexIndexBase((unsigned char const **)arg2,*arg3,*arg4,*arg5,(unsigned char const **)arg6,*arg7,*arg8,*arg9);
  
  *_swig_go_2 = (intgo)e3; 
  *_swig_go_4 = (intgo)e5; 
  *_swig_go_6 = (intgo)e7; 
  *_swig_go_7 = (intgo)e8; 
}


void _wrap_btStridingMeshInterface_unLockVertexBase_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, intgo _swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int arg2 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->unLockVertexBase(arg2);
  
}


void _wrap_btStridingMeshInterface_unLockReadOnlyVertexBase_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, intgo _swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int arg2 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ((btStridingMeshInterface const *)arg1)->unLockReadOnlyVertexBase(arg2);
  
}


intgo _wrap_btStridingMeshInterface_getNumSubParts_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  
  result = (int)((btStridingMeshInterface const *)arg1)->getNumSubParts();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterface_preallocateVertices_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, intgo _swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int arg2 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->preallocateVertices(arg2);
  
}


void _wrap_btStridingMeshInterface_preallocateIndices_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, intgo _swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int arg2 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->preallocateIndices(arg2);
  
}


bool _wrap_btStridingMeshInterface_hasPremadeAabb_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  
  result = (bool)((btStridingMeshInterface const *)arg1)->hasPremadeAabb();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterface_setPremadeAabb_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btStridingMeshInterface const *)arg1)->setPremadeAabb((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btStridingMeshInterface_getPremadeAabb_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  btVector3 *arg3 = (btVector3 *) 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btStridingMeshInterface const *)arg1)->getPremadeAabb(arg2,arg3);
  
}


btVector3 *_wrap_btStridingMeshInterface_getScaling_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  
  result = (btVector3 *) &((btStridingMeshInterface const *)arg1)->getScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterface_setScaling_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, btVector3 *_swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setScaling((btVector3 const &)*arg2);
  
}


intgo _wrap_btStridingMeshInterface_calculateSerializeBufferSize_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  
  result = (int)((btStridingMeshInterface const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btStridingMeshInterface_serialize_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btStridingMeshInterface const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btIntIndexData_m_value_set_bt_e001408c92acdfd7(btIntIndexData *_swig_go_0, intgo _swig_go_1) {
  btIntIndexData *arg1 = (btIntIndexData *) 0 ;
  int arg2 ;
  
  arg1 = *(btIntIndexData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_value = arg2;
  
}


intgo _wrap_btIntIndexData_m_value_get_bt_e001408c92acdfd7(btIntIndexData *_swig_go_0) {
  btIntIndexData *arg1 = (btIntIndexData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btIntIndexData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_value);
  _swig_go_result = result; 
  return _swig_go_result;
}


btIntIndexData *_wrap_new_btIntIndexData_bt_e001408c92acdfd7() {
  btIntIndexData *result = 0 ;
  btIntIndexData *_swig_go_result;
  
  
  result = (btIntIndexData *)new btIntIndexData();
  *(btIntIndexData **)&_swig_go_result = (btIntIndexData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btIntIndexData_bt_e001408c92acdfd7(btIntIndexData *_swig_go_0) {
  btIntIndexData *arg1 = (btIntIndexData *) 0 ;
  
  arg1 = *(btIntIndexData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btShortIntIndexData_m_value_set_bt_e001408c92acdfd7(btShortIntIndexData *_swig_go_0, short _swig_go_1) {
  btShortIntIndexData *arg1 = (btShortIntIndexData *) 0 ;
  short arg2 ;
  
  arg1 = *(btShortIntIndexData **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->m_value = arg2;
  
}


short _wrap_btShortIntIndexData_m_value_get_bt_e001408c92acdfd7(btShortIntIndexData *_swig_go_0) {
  btShortIntIndexData *arg1 = (btShortIntIndexData *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(btShortIntIndexData **)&_swig_go_0; 
  
  result = (short) ((arg1)->m_value);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btShortIntIndexData_m_pad_set_bt_e001408c92acdfd7(btShortIntIndexData *_swig_go_0, _gostring_ _swig_go_1) {
  btShortIntIndexData *arg1 = (btShortIntIndexData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btShortIntIndexData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 2-1);
      arg1->m_pad[2-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btShortIntIndexData_m_pad_get_bt_e001408c92acdfd7(btShortIntIndexData *_swig_go_0) {
  btShortIntIndexData *arg1 = (btShortIntIndexData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btShortIntIndexData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btShortIntIndexData *_wrap_new_btShortIntIndexData_bt_e001408c92acdfd7() {
  btShortIntIndexData *result = 0 ;
  btShortIntIndexData *_swig_go_result;
  
  
  result = (btShortIntIndexData *)new btShortIntIndexData();
  *(btShortIntIndexData **)&_swig_go_result = (btShortIntIndexData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btShortIntIndexData_bt_e001408c92acdfd7(btShortIntIndexData *_swig_go_0) {
  btShortIntIndexData *arg1 = (btShortIntIndexData *) 0 ;
  
  arg1 = *(btShortIntIndexData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btShortIntIndexTripletData_m_values_set_bt_e001408c92acdfd7(btShortIntIndexTripletData *_swig_go_0, short *_swig_go_1) {
  btShortIntIndexTripletData *arg1 = (btShortIntIndexTripletData *) 0 ;
  short *arg2 = (short *) (short *)0 ;
  
  arg1 = *(btShortIntIndexTripletData **)&_swig_go_0; 
  arg2 = *(short **)&_swig_go_1; 
  
  {
    size_t ii;
    short *b = (short *) arg1->m_values;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


short *_wrap_btShortIntIndexTripletData_m_values_get_bt_e001408c92acdfd7(btShortIntIndexTripletData *_swig_go_0) {
  btShortIntIndexTripletData *arg1 = (btShortIntIndexTripletData *) 0 ;
  short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btShortIntIndexTripletData **)&_swig_go_0; 
  
  result = (short *)(short *) ((arg1)->m_values);
  *(short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btShortIntIndexTripletData_m_pad_set_bt_e001408c92acdfd7(btShortIntIndexTripletData *_swig_go_0, _gostring_ _swig_go_1) {
  btShortIntIndexTripletData *arg1 = (btShortIntIndexTripletData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btShortIntIndexTripletData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 2-1);
      arg1->m_pad[2-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btShortIntIndexTripletData_m_pad_get_bt_e001408c92acdfd7(btShortIntIndexTripletData *_swig_go_0) {
  btShortIntIndexTripletData *arg1 = (btShortIntIndexTripletData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btShortIntIndexTripletData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btShortIntIndexTripletData *_wrap_new_btShortIntIndexTripletData_bt_e001408c92acdfd7() {
  btShortIntIndexTripletData *result = 0 ;
  btShortIntIndexTripletData *_swig_go_result;
  
  
  result = (btShortIntIndexTripletData *)new btShortIntIndexTripletData();
  *(btShortIntIndexTripletData **)&_swig_go_result = (btShortIntIndexTripletData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btShortIntIndexTripletData_bt_e001408c92acdfd7(btShortIntIndexTripletData *_swig_go_0) {
  btShortIntIndexTripletData *arg1 = (btShortIntIndexTripletData *) 0 ;
  
  arg1 = *(btShortIntIndexTripletData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCharIndexTripletData_m_values_set_bt_e001408c92acdfd7(btCharIndexTripletData *_swig_go_0, char *_swig_go_1) {
  btCharIndexTripletData *arg1 = (btCharIndexTripletData *) 0 ;
  unsigned char *arg2 = (unsigned char *) (unsigned char *)0 ;
  
  arg1 = *(btCharIndexTripletData **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned char *b = (unsigned char *) arg1->m_values;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned char *) arg2 + ii);
  }
  
}


char *_wrap_btCharIndexTripletData_m_values_get_bt_e001408c92acdfd7(btCharIndexTripletData *_swig_go_0) {
  btCharIndexTripletData *arg1 = (btCharIndexTripletData *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btCharIndexTripletData **)&_swig_go_0; 
  
  result = (unsigned char *)(unsigned char *) ((arg1)->m_values);
  *(unsigned char **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCharIndexTripletData_m_pad_set_bt_e001408c92acdfd7(btCharIndexTripletData *_swig_go_0, char _swig_go_1) {
  btCharIndexTripletData *arg1 = (btCharIndexTripletData *) 0 ;
  char arg2 ;
  
  arg1 = *(btCharIndexTripletData **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  if (arg1) (arg1)->m_pad = arg2;
  
}


char _wrap_btCharIndexTripletData_m_pad_get_bt_e001408c92acdfd7(btCharIndexTripletData *_swig_go_0) {
  btCharIndexTripletData *arg1 = (btCharIndexTripletData *) 0 ;
  char result;
  char _swig_go_result;
  
  arg1 = *(btCharIndexTripletData **)&_swig_go_0; 
  
  result = (char) ((arg1)->m_pad);
  _swig_go_result = result; 
  return _swig_go_result;
}


btCharIndexTripletData *_wrap_new_btCharIndexTripletData_bt_e001408c92acdfd7() {
  btCharIndexTripletData *result = 0 ;
  btCharIndexTripletData *_swig_go_result;
  
  
  result = (btCharIndexTripletData *)new btCharIndexTripletData();
  *(btCharIndexTripletData **)&_swig_go_result = (btCharIndexTripletData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCharIndexTripletData_bt_e001408c92acdfd7(btCharIndexTripletData *_swig_go_0) {
  btCharIndexTripletData *arg1 = (btCharIndexTripletData *) 0 ;
  
  arg1 = *(btCharIndexTripletData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMeshPartData_m_vertices3f_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_vertices3f = arg2;
  
}


btVector3FloatData *_wrap_btMeshPartData_m_vertices3f_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btVector3FloatData *) ((arg1)->m_vertices3f);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_vertices3d_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_vertices3d = arg2;
  
}


btVector3DoubleData *_wrap_btMeshPartData_m_vertices3d_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *) ((arg1)->m_vertices3d);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_indices32_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btIntIndexData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btIntIndexData *arg2 = (btIntIndexData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btIntIndexData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_indices32 = arg2;
  
}


btIntIndexData *_wrap_btMeshPartData_m_indices32_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btIntIndexData *result = 0 ;
  btIntIndexData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btIntIndexData *) ((arg1)->m_indices32);
  *(btIntIndexData **)&_swig_go_result = (btIntIndexData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_3indices16_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btShortIntIndexTripletData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btShortIntIndexTripletData *arg2 = (btShortIntIndexTripletData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btShortIntIndexTripletData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_3indices16 = arg2;
  
}


btShortIntIndexTripletData *_wrap_btMeshPartData_m_3indices16_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btShortIntIndexTripletData *result = 0 ;
  btShortIntIndexTripletData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btShortIntIndexTripletData *) ((arg1)->m_3indices16);
  *(btShortIntIndexTripletData **)&_swig_go_result = (btShortIntIndexTripletData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_3indices8_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btCharIndexTripletData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btCharIndexTripletData *arg2 = (btCharIndexTripletData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btCharIndexTripletData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_3indices8 = arg2;
  
}


btCharIndexTripletData *_wrap_btMeshPartData_m_3indices8_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btCharIndexTripletData *result = 0 ;
  btCharIndexTripletData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btCharIndexTripletData *) ((arg1)->m_3indices8);
  *(btCharIndexTripletData **)&_swig_go_result = (btCharIndexTripletData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_indices16_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, btShortIntIndexData *_swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btShortIntIndexData *arg2 = (btShortIntIndexData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = *(btShortIntIndexData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_indices16 = arg2;
  
}


btShortIntIndexData *_wrap_btMeshPartData_m_indices16_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  btShortIntIndexData *result = 0 ;
  btShortIntIndexData *_swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (btShortIntIndexData *) ((arg1)->m_indices16);
  *(btShortIntIndexData **)&_swig_go_result = (btShortIntIndexData *)result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_numTriangles_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, intgo _swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  int arg2 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numTriangles = arg2;
  
}


intgo _wrap_btMeshPartData_m_numTriangles_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numTriangles);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMeshPartData_m_numVertices_set_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0, intgo _swig_go_1) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  int arg2 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numVertices = arg2;
  
}


intgo _wrap_btMeshPartData_m_numVertices_get_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numVertices);
  _swig_go_result = result; 
  return _swig_go_result;
}


btMeshPartData *_wrap_new_btMeshPartData_bt_e001408c92acdfd7() {
  btMeshPartData *result = 0 ;
  btMeshPartData *_swig_go_result;
  
  
  result = (btMeshPartData *)new btMeshPartData();
  *(btMeshPartData **)&_swig_go_result = (btMeshPartData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMeshPartData_bt_e001408c92acdfd7(btMeshPartData *_swig_go_0) {
  btMeshPartData *arg1 = (btMeshPartData *) 0 ;
  
  arg1 = *(btMeshPartData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btStridingMeshInterfaceData_m_meshPartsPtr_set_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0, btMeshPartData *_swig_go_1) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  btMeshPartData *arg2 = (btMeshPartData *) 0 ;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  arg2 = *(btMeshPartData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meshPartsPtr = arg2;
  
}


btMeshPartData *_wrap_btStridingMeshInterfaceData_m_meshPartsPtr_get_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  btMeshPartData *result = 0 ;
  btMeshPartData *_swig_go_result;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  result = (btMeshPartData *) ((arg1)->m_meshPartsPtr);
  *(btMeshPartData **)&_swig_go_result = (btMeshPartData *)result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterfaceData_m_scaling_set_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_scaling = *arg2;
  
}


btVector3FloatData *_wrap_btStridingMeshInterfaceData_m_scaling_get_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_scaling);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterfaceData_m_numMeshParts_set_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0, intgo _swig_go_1) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  int arg2 ;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numMeshParts = arg2;
  
}


intgo _wrap_btStridingMeshInterfaceData_m_numMeshParts_get_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numMeshParts);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStridingMeshInterfaceData_m_padding_set_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0, _gostring_ _swig_go_1) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btStridingMeshInterfaceData_m_padding_get_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btStridingMeshInterfaceData *_wrap_new_btStridingMeshInterfaceData_bt_e001408c92acdfd7() {
  btStridingMeshInterfaceData *result = 0 ;
  btStridingMeshInterfaceData *_swig_go_result;
  
  
  result = (btStridingMeshInterfaceData *)new btStridingMeshInterfaceData();
  *(btStridingMeshInterfaceData **)&_swig_go_result = (btStridingMeshInterfaceData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btStridingMeshInterfaceData_bt_e001408c92acdfd7(btStridingMeshInterfaceData *_swig_go_0) {
  btStridingMeshInterfaceData *arg1 = (btStridingMeshInterfaceData *) 0 ;
  
  arg1 = *(btStridingMeshInterfaceData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btTriangleMeshShape_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  delete arg1;
  
}


btVector3 *_wrap_btTriangleMeshShape_localGetSupportingVertex_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btTriangleMeshShape const *)arg1)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btTriangleMeshShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btTriangleMeshShape const *)arg1)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_recalcLocalAabb_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  (arg1)->recalcLocalAabb();
  
}


void _wrap_btTriangleMeshShape_getAabb_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btTriangleMeshShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btTriangleMeshShape_processAllTriangles_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btTriangleMeshShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btTriangleMeshShape_calculateLocalInertia_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btTriangleMeshShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


void _wrap_btTriangleMeshShape_setLocalScaling_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btTriangleMeshShape_getLocalScaling_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btTriangleMeshShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btStridingMeshInterface *_wrap_btTriangleMeshShape_getMeshInterface__SWIG_0_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btStridingMeshInterface *result = 0 ;
  btStridingMeshInterface *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (btStridingMeshInterface *)(arg1)->getMeshInterface();
  *(btStridingMeshInterface **)&_swig_go_result = (btStridingMeshInterface *)result; 
  return _swig_go_result;
}


btStridingMeshInterface *_wrap_btTriangleMeshShape_getMeshInterface__SWIG_1_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btStridingMeshInterface *result = 0 ;
  btStridingMeshInterface *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (btStridingMeshInterface *)((btTriangleMeshShape const *)arg1)->getMeshInterface();
  *(btStridingMeshInterface **)&_swig_go_result = (btStridingMeshInterface *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btTriangleMeshShape_getLocalAabbMin_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btTriangleMeshShape const *)arg1)->getLocalAabbMin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btTriangleMeshShape_getLocalAabbMax_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btTriangleMeshShape const *)arg1)->getLocalAabbMax();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btTriangleMeshShape_getName_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  result = (char *)((btTriangleMeshShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


float _wrap_btTriangleMeshShape_getMargin_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  result = (btScalar)((btConcaveShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_setMargin_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, float _swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


void _wrap_btTriangleMeshShape_getBoundingSphere_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btTriangleMeshShape_getAngularMotionDisc_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btTriangleMeshShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, float _swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_calculateTemporalAabb_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btTriangleMeshShape_isPolyhedral_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isConvex2d_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isConvex_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isNonMoving_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isConcave_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isCompound_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isSoftBody_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTriangleMeshShape_isInfinite_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTriangleMeshShape_getShapeType_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btTriangleMeshShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = ((btCollisionShape const *)swig_b1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_setUserPointer_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, void *_swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserPointer(arg2);
  
}


void *_wrap_btTriangleMeshShape_getUserPointer_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (void *)((btCollisionShape const *)swig_b1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_setUserIndex_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, intgo _swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex(arg2);
  
}


intgo _wrap_btTriangleMeshShape_getUserIndex_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_setUserIndex2_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, intgo _swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex2(arg2);
  
}


intgo _wrap_btTriangleMeshShape_getUserIndex2_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTriangleMeshShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btTriangleMeshShape_serialize_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (char *)((btCollisionShape const *)swig_b1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShape_serializeSingleShape_bt_e001408c92acdfd7(btTriangleMeshShape *_swig_go_0, btSerializer *_swig_go_1) {
  btTriangleMeshShape *arg1 = (btTriangleMeshShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->serializeSingleShape(arg2);
  
}


void _wrap_btQuantizedBvhNode_m_quantizedAabbMin_set_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0, short *_swig_go_1) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btQuantizedBvhNode_m_quantizedAabbMin_get_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMin);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhNode_m_quantizedAabbMax_set_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0, short *_swig_go_1) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btQuantizedBvhNode_m_quantizedAabbMax_get_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMax);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_set_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_escapeIndexOrTriangleIndex = arg2;
  
}


intgo _wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_get_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_escapeIndexOrTriangleIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btQuantizedBvhNode_isLeafNode_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (bool)((btQuantizedBvhNode const *)arg1)->isLeafNode();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvhNode_getEscapeIndex_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (int)((btQuantizedBvhNode const *)arg1)->getEscapeIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvhNode_getTriangleIndex_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (int)((btQuantizedBvhNode const *)arg1)->getTriangleIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvhNode_getPartId_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  result = (int)((btQuantizedBvhNode const *)arg1)->getPartId();
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuantizedBvhNode *_wrap_new_btQuantizedBvhNode_bt_e001408c92acdfd7() {
  btQuantizedBvhNode *result = 0 ;
  btQuantizedBvhNode *_swig_go_result;
  
  
  result = (btQuantizedBvhNode *)new btQuantizedBvhNode();
  *(btQuantizedBvhNode **)&_swig_go_result = (btQuantizedBvhNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuantizedBvhNode_bt_e001408c92acdfd7(btQuantizedBvhNode *_swig_go_0) {
  btQuantizedBvhNode *arg1 = (btQuantizedBvhNode *) 0 ;
  
  arg1 = *(btQuantizedBvhNode **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btOptimizedBvhNode_m_aabbMinOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, btVector3 *_swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMinOrg = *arg2;
  
}


btVector3 *_wrap_btOptimizedBvhNode_m_aabbMinOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_aabbMinOrg);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNode_m_aabbMaxOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, btVector3 *_swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMaxOrg = *arg2;
  
}


btVector3 *_wrap_btOptimizedBvhNode_m_aabbMaxOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_aabbMaxOrg);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNode_m_escapeIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_escapeIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNode_m_escapeIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_escapeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNode_m_subPart_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_subPart = arg2;
  
}


intgo _wrap_btOptimizedBvhNode_m_subPart_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_subPart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNode_m_triangleIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNode_m_triangleIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_triangleIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNode_m_padding_set_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0, _gostring_ _swig_go_1) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 20-1);
      arg1->m_padding[20-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btOptimizedBvhNode_m_padding_get_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btOptimizedBvhNode *_wrap_new_btOptimizedBvhNode_bt_e001408c92acdfd7() {
  btOptimizedBvhNode *result = 0 ;
  btOptimizedBvhNode *_swig_go_result;
  
  
  result = (btOptimizedBvhNode *)new btOptimizedBvhNode();
  *(btOptimizedBvhNode **)&_swig_go_result = (btOptimizedBvhNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_btOptimizedBvhNode_bt_e001408c92acdfd7(btOptimizedBvhNode *_swig_go_0) {
  btOptimizedBvhNode *arg1 = (btOptimizedBvhNode *) 0 ;
  
  arg1 = *(btOptimizedBvhNode **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBvhSubtreeInfo_m_quantizedAabbMin_set_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, short *_swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btBvhSubtreeInfo_m_quantizedAabbMin_get_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMin);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfo_m_quantizedAabbMax_set_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, short *_swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btBvhSubtreeInfo_m_quantizedAabbMax_get_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMax);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfo_m_rootNodeIndex_set_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, intgo _swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_rootNodeIndex = arg2;
  
}


intgo _wrap_btBvhSubtreeInfo_m_rootNodeIndex_get_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_rootNodeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfo_m_subtreeSize_set_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, intgo _swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_subtreeSize = arg2;
  
}


intgo _wrap_btBvhSubtreeInfo_m_subtreeSize_get_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_subtreeSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfo_m_padding_set_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, intgo *_swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_padding;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btBvhSubtreeInfo_m_padding_get_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_padding);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


btBvhSubtreeInfo *_wrap_new_btBvhSubtreeInfo_bt_e001408c92acdfd7() {
  btBvhSubtreeInfo *result = 0 ;
  btBvhSubtreeInfo *_swig_go_result;
  
  
  result = (btBvhSubtreeInfo *)new btBvhSubtreeInfo();
  *(btBvhSubtreeInfo **)&_swig_go_result = (btBvhSubtreeInfo *)result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfo_setAabbFromQuantizeNode_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0, btQuantizedBvhNode *_swig_go_1) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  btQuantizedBvhNode *arg2 = 0 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhNode **)&_swig_go_1; 
  
  (arg1)->setAabbFromQuantizeNode((btQuantizedBvhNode const &)*arg2);
  
}


void _wrap_delete_btBvhSubtreeInfo_bt_e001408c92acdfd7(btBvhSubtreeInfo *_swig_go_0) {
  btBvhSubtreeInfo *arg1 = (btBvhSubtreeInfo *) 0 ;
  
  arg1 = *(btBvhSubtreeInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btNodeOverlapCallback_bt_e001408c92acdfd7(btNodeOverlapCallback *_swig_go_0) {
  btNodeOverlapCallback *arg1 = (btNodeOverlapCallback *) 0 ;
  
  arg1 = *(btNodeOverlapCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btNodeOverlapCallback_processNode_bt_e001408c92acdfd7(btNodeOverlapCallback *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btNodeOverlapCallback *arg1 = (btNodeOverlapCallback *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btNodeOverlapCallback **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->processNode(arg2,arg3);
  
}


intgo _wrap_TRAVERSAL_STACKLESS_btQuantizedBvh_bt_e001408c92acdfd7() {
  btQuantizedBvh::btTraversalMode result;
  intgo _swig_go_result;
  
  
  result = btQuantizedBvh::TRAVERSAL_STACKLESS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TRAVERSAL_STACKLESS_CACHE_FRIENDLY_btQuantizedBvh_bt_e001408c92acdfd7() {
  btQuantizedBvh::btTraversalMode result;
  intgo _swig_go_result;
  
  
  result = btQuantizedBvh::TRAVERSAL_STACKLESS_CACHE_FRIENDLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TRAVERSAL_RECURSIVE_btQuantizedBvh_bt_e001408c92acdfd7() {
  btQuantizedBvh::btTraversalMode result;
  intgo _swig_go_result;
  
  
  result = btQuantizedBvh::TRAVERSAL_RECURSIVE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btQuantizedBvh *_wrap_new_btQuantizedBvh_bt_e001408c92acdfd7() {
  btQuantizedBvh *result = 0 ;
  btQuantizedBvh *_swig_go_result;
  
  
  result = (btQuantizedBvh *)new btQuantizedBvh();
  *(btQuantizedBvh **)&_swig_go_result = (btQuantizedBvh *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuantizedBvh_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btQuantizedBvh_setQuantizationValues__SWIG_0_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setQuantizationValues((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btQuantizedBvh_setQuantizationValues__SWIG_1_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->setQuantizationValues((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


btAlignedObjectArray< btQuantizedBvhNode > *_wrap_btQuantizedBvh_getLeafNodeArray_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  QuantizedNodeArray *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhNode > *_swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (QuantizedNodeArray *) &(arg1)->getLeafNodeArray();
  *(QuantizedNodeArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvh_buildInternal_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  (arg1)->buildInternal();
  
}


void _wrap_btQuantizedBvh_reportAabbOverlappingNodex_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btQuantizedBvh const *)arg1)->reportAabbOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btQuantizedBvh_reportRayOverlappingNodex_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btQuantizedBvh const *)arg1)->reportRayOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btQuantizedBvh_reportBoxCastOverlappingNodex_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  ((btQuantizedBvh const *)arg1)->reportBoxCastOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btQuantizedBvh_quantize_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, short *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btQuantizedBvh const *)arg1)->quantize(arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btQuantizedBvh_quantizeWithClamp_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, short *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((btQuantizedBvh const *)arg1)->quantizeWithClamp(arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_btQuantizedBvh_unQuantize_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, short *_swig_go_1) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  result = ((btQuantizedBvh const *)arg1)->unQuantize((unsigned short const *)arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btQuantizedBvh_setTraversalMode_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btQuantizedBvh::btTraversalMode arg2 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = (btQuantizedBvh::btTraversalMode)_swig_go_1; 
  
  (arg1)->setTraversalMode(arg2);
  
}


btAlignedObjectArray< btQuantizedBvhNode > *_wrap_btQuantizedBvh_getQuantizedNodeArray_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  QuantizedNodeArray *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhNode > *_swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (QuantizedNodeArray *) &(arg1)->getQuantizedNodeArray();
  *(QuantizedNodeArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBvhSubtreeInfo > *_wrap_btQuantizedBvh_getSubtreeInfoArray_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  BvhSubtreeInfoArray *result = 0 ;
  btAlignedObjectArray< btBvhSubtreeInfo > *_swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (BvhSubtreeInfoArray *) &(arg1)->getSubtreeInfoArray();
  *(BvhSubtreeInfoArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvh_calculateSerializeBufferSize_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (unsigned int)((btQuantizedBvh const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btQuantizedBvh_serialize__SWIG_0_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  void *arg2 = (void *) 0 ;
  unsigned int arg3 ;
  bool arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (bool)((btQuantizedBvh const *)arg1)->serialize(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuantizedBvh *_wrap_btQuantizedBvh_deSerializeInPlace_bt_e001408c92acdfd7(void *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  void *arg1 = (void *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  btQuantizedBvh *result = 0 ;
  btQuantizedBvh *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btQuantizedBvh *)btQuantizedBvh::deSerializeInPlace(arg1,arg2,arg3);
  *(btQuantizedBvh **)&_swig_go_result = (btQuantizedBvh *)result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvh_getAlignmentSerializationPadding_bt_e001408c92acdfd7() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)btQuantizedBvh::getAlignmentSerializationPadding();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btQuantizedBvh_calculateSerializeBufferSizeNew_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (int)((btQuantizedBvh const *)arg1)->calculateSerializeBufferSizeNew();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btQuantizedBvh_serialize__SWIG_1_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btQuantizedBvh const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btQuantizedBvh_deSerializeFloat_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btQuantizedBvhFloatData *_swig_go_1) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btQuantizedBvhFloatData *arg2 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhFloatData **)&_swig_go_1; 
  
  (arg1)->deSerializeFloat(*arg2);
  
}


void _wrap_btQuantizedBvh_deSerializeDouble_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0, btQuantizedBvhDoubleData *_swig_go_1) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  btQuantizedBvhDoubleData *arg2 = 0 ;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhDoubleData **)&_swig_go_1; 
  
  (arg1)->deSerializeDouble(*arg2);
  
}


bool _wrap_btQuantizedBvh_isQuantized_bt_e001408c92acdfd7(btQuantizedBvh *_swig_go_0) {
  btQuantizedBvh *arg1 = (btQuantizedBvh *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btQuantizedBvh **)&_swig_go_0; 
  
  result = (bool)(arg1)->isQuantized();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfoData_m_rootNodeIndex_set_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0, intgo _swig_go_1) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_rootNodeIndex = arg2;
  
}


intgo _wrap_btBvhSubtreeInfoData_m_rootNodeIndex_get_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_rootNodeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfoData_m_subtreeSize_set_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0, intgo _swig_go_1) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_subtreeSize = arg2;
  
}


intgo _wrap_btBvhSubtreeInfoData_m_subtreeSize_get_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_subtreeSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_set_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0, short *_swig_go_1) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_get_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMin);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_set_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0, short *_swig_go_1) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_get_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMax);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


btBvhSubtreeInfoData *_wrap_new_btBvhSubtreeInfoData_bt_e001408c92acdfd7() {
  btBvhSubtreeInfoData *result = 0 ;
  btBvhSubtreeInfoData *_swig_go_result;
  
  
  result = (btBvhSubtreeInfoData *)new btBvhSubtreeInfoData();
  *(btBvhSubtreeInfoData **)&_swig_go_result = (btBvhSubtreeInfoData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBvhSubtreeInfoData_bt_e001408c92acdfd7(btBvhSubtreeInfoData *_swig_go_0) {
  btBvhSubtreeInfoData *arg1 = (btBvhSubtreeInfoData *) 0 ;
  
  arg1 = *(btBvhSubtreeInfoData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMinOrg = *arg2;
  
}


btVector3FloatData *_wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_aabbMinOrg);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMaxOrg = *arg2;
  
}


btVector3FloatData *_wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_aabbMaxOrg);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_escapeIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_escapeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeFloatData_m_subPart_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_subPart = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeFloatData_m_subPart_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_subPart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_triangleIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeFloatData_m_pad_set_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0, _gostring_ _swig_go_1) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 4-1);
      arg1->m_pad[4-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btOptimizedBvhNodeFloatData_m_pad_get_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btOptimizedBvhNodeFloatData *_wrap_new_btOptimizedBvhNodeFloatData_bt_e001408c92acdfd7() {
  btOptimizedBvhNodeFloatData *result = 0 ;
  btOptimizedBvhNodeFloatData *_swig_go_result;
  
  
  result = (btOptimizedBvhNodeFloatData *)new btOptimizedBvhNodeFloatData();
  *(btOptimizedBvhNodeFloatData **)&_swig_go_result = (btOptimizedBvhNodeFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btOptimizedBvhNodeFloatData_bt_e001408c92acdfd7(btOptimizedBvhNodeFloatData *_swig_go_0) {
  btOptimizedBvhNodeFloatData *arg1 = (btOptimizedBvhNodeFloatData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMinOrg = *arg2;
  
}


btVector3DoubleData *_wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_aabbMinOrg);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_aabbMaxOrg = *arg2;
  
}


btVector3DoubleData *_wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_aabbMaxOrg);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_escapeIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_escapeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeDoubleData_m_subPart_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_subPart = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeDoubleData_m_subPart_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_subPart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleIndex = arg2;
  
}


intgo _wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_triangleIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvhNodeDoubleData_m_pad_set_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 4-1);
      arg1->m_pad[4-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btOptimizedBvhNodeDoubleData_m_pad_get_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btOptimizedBvhNodeDoubleData *_wrap_new_btOptimizedBvhNodeDoubleData_bt_e001408c92acdfd7() {
  btOptimizedBvhNodeDoubleData *result = 0 ;
  btOptimizedBvhNodeDoubleData *_swig_go_result;
  
  
  result = (btOptimizedBvhNodeDoubleData *)new btOptimizedBvhNodeDoubleData();
  *(btOptimizedBvhNodeDoubleData **)&_swig_go_result = (btOptimizedBvhNodeDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btOptimizedBvhNodeDoubleData_bt_e001408c92acdfd7(btOptimizedBvhNodeDoubleData *_swig_go_0) {
  btOptimizedBvhNodeDoubleData *arg1 = (btOptimizedBvhNodeDoubleData *) 0 ;
  
  arg1 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_set_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0, short *_swig_go_1) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_get_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMin);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_set_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0, short *_swig_go_1) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  unsigned short *arg2 = (unsigned short *) (unsigned short *)0 ;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->m_quantizedAabbMax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


short *_wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_get_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  unsigned short *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  
  result = (unsigned short *)(unsigned short *) ((arg1)->m_quantizedAabbMax);
  *(unsigned short **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_set_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_escapeIndexOrTriangleIndex = arg2;
  
}


intgo _wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_get_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_escapeIndexOrTriangleIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuantizedBvhNodeData *_wrap_new_btQuantizedBvhNodeData_bt_e001408c92acdfd7() {
  btQuantizedBvhNodeData *result = 0 ;
  btQuantizedBvhNodeData *_swig_go_result;
  
  
  result = (btQuantizedBvhNodeData *)new btQuantizedBvhNodeData();
  *(btQuantizedBvhNodeData **)&_swig_go_result = (btQuantizedBvhNodeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuantizedBvhNodeData_bt_e001408c92acdfd7(btQuantizedBvhNodeData *_swig_go_0) {
  btQuantizedBvhNodeData *arg1 = (btQuantizedBvhNodeData *) 0 ;
  
  arg1 = *(btQuantizedBvhNodeData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btQuantizedBvhFloatData_m_bvhAabbMin_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhAabbMin = *arg2;
  
}


btVector3FloatData *_wrap_btQuantizedBvhFloatData_m_bvhAabbMin_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_bvhAabbMin);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_bvhAabbMax_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhAabbMax = *arg2;
  
}


btVector3FloatData *_wrap_btQuantizedBvhFloatData_m_bvhAabbMax_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_bvhAabbMax);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_bvhQuantization_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhQuantization = *arg2;
  
}


btVector3FloatData *_wrap_btQuantizedBvhFloatData_m_bvhQuantization_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_bvhQuantization);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_curNodeIndex_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_curNodeIndex = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_curNodeIndex_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_curNodeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_useQuantization_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useQuantization = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_useQuantization_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useQuantization);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numContiguousLeafNodes = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numContiguousLeafNodes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numQuantizedContiguousNodes = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numQuantizedContiguousNodes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btOptimizedBvhNodeFloatData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btOptimizedBvhNodeFloatData *arg2 = (btOptimizedBvhNodeFloatData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btOptimizedBvhNodeFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_contiguousNodesPtr = arg2;
  
}


btOptimizedBvhNodeFloatData *_wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btOptimizedBvhNodeFloatData *result = 0 ;
  btOptimizedBvhNodeFloatData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btOptimizedBvhNodeFloatData *) ((arg1)->m_contiguousNodesPtr);
  *(btOptimizedBvhNodeFloatData **)&_swig_go_result = (btOptimizedBvhNodeFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btQuantizedBvhNodeData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btQuantizedBvhNodeData *arg2 = (btQuantizedBvhNodeData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhNodeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_quantizedContiguousNodesPtr = arg2;
  
}


btQuantizedBvhNodeData *_wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btQuantizedBvhNodeData *result = 0 ;
  btQuantizedBvhNodeData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btQuantizedBvhNodeData *) ((arg1)->m_quantizedContiguousNodesPtr);
  *(btQuantizedBvhNodeData **)&_swig_go_result = (btQuantizedBvhNodeData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, btBvhSubtreeInfoData *_swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btBvhSubtreeInfoData *arg2 = (btBvhSubtreeInfoData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = *(btBvhSubtreeInfoData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_subTreeInfoPtr = arg2;
  
}


btBvhSubtreeInfoData *_wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  btBvhSubtreeInfoData *result = 0 ;
  btBvhSubtreeInfoData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (btBvhSubtreeInfoData *) ((arg1)->m_subTreeInfoPtr);
  *(btBvhSubtreeInfoData **)&_swig_go_result = (btBvhSubtreeInfoData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_traversalMode_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_traversalMode = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_traversalMode_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_traversalMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_set_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numSubtreeHeaders = arg2;
  
}


intgo _wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_get_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numSubtreeHeaders);
  _swig_go_result = result; 
  return _swig_go_result;
}


btQuantizedBvhFloatData *_wrap_new_btQuantizedBvhFloatData_bt_e001408c92acdfd7() {
  btQuantizedBvhFloatData *result = 0 ;
  btQuantizedBvhFloatData *_swig_go_result;
  
  
  result = (btQuantizedBvhFloatData *)new btQuantizedBvhFloatData();
  *(btQuantizedBvhFloatData **)&_swig_go_result = (btQuantizedBvhFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuantizedBvhFloatData_bt_e001408c92acdfd7(btQuantizedBvhFloatData *_swig_go_0) {
  btQuantizedBvhFloatData *arg1 = (btQuantizedBvhFloatData *) 0 ;
  
  arg1 = *(btQuantizedBvhFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhAabbMin = *arg2;
  
}


btVector3DoubleData *_wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_bvhAabbMin);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhAabbMax = *arg2;
  
}


btVector3DoubleData *_wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_bvhAabbMax);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_bvhQuantization_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bvhQuantization = *arg2;
  
}


btVector3DoubleData *_wrap_btQuantizedBvhDoubleData_m_bvhQuantization_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_bvhQuantization);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_curNodeIndex_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_curNodeIndex = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_curNodeIndex_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_curNodeIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_useQuantization_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useQuantization = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_useQuantization_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useQuantization);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numContiguousLeafNodes = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numContiguousLeafNodes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numQuantizedContiguousNodes = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numQuantizedContiguousNodes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btOptimizedBvhNodeDoubleData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btOptimizedBvhNodeDoubleData *arg2 = (btOptimizedBvhNodeDoubleData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btOptimizedBvhNodeDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_contiguousNodesPtr = arg2;
  
}


btOptimizedBvhNodeDoubleData *_wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btOptimizedBvhNodeDoubleData *result = 0 ;
  btOptimizedBvhNodeDoubleData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btOptimizedBvhNodeDoubleData *) ((arg1)->m_contiguousNodesPtr);
  *(btOptimizedBvhNodeDoubleData **)&_swig_go_result = (btOptimizedBvhNodeDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btQuantizedBvhNodeData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btQuantizedBvhNodeData *arg2 = (btQuantizedBvhNodeData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhNodeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_quantizedContiguousNodesPtr = arg2;
  
}


btQuantizedBvhNodeData *_wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btQuantizedBvhNodeData *result = 0 ;
  btQuantizedBvhNodeData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btQuantizedBvhNodeData *) ((arg1)->m_quantizedContiguousNodesPtr);
  *(btQuantizedBvhNodeData **)&_swig_go_result = (btQuantizedBvhNodeData *)result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_traversalMode_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_traversalMode = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_traversalMode_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_traversalMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, intgo _swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numSubtreeHeaders = arg2;
  
}


intgo _wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numSubtreeHeaders);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_set_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0, btBvhSubtreeInfoData *_swig_go_1) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btBvhSubtreeInfoData *arg2 = (btBvhSubtreeInfoData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  arg2 = *(btBvhSubtreeInfoData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_subTreeInfoPtr = arg2;
  
}


btBvhSubtreeInfoData *_wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_get_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  btBvhSubtreeInfoData *result = 0 ;
  btBvhSubtreeInfoData *_swig_go_result;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  result = (btBvhSubtreeInfoData *) ((arg1)->m_subTreeInfoPtr);
  *(btBvhSubtreeInfoData **)&_swig_go_result = (btBvhSubtreeInfoData *)result; 
  return _swig_go_result;
}


btQuantizedBvhDoubleData *_wrap_new_btQuantizedBvhDoubleData_bt_e001408c92acdfd7() {
  btQuantizedBvhDoubleData *result = 0 ;
  btQuantizedBvhDoubleData *_swig_go_result;
  
  
  result = (btQuantizedBvhDoubleData *)new btQuantizedBvhDoubleData();
  *(btQuantizedBvhDoubleData **)&_swig_go_result = (btQuantizedBvhDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btQuantizedBvhDoubleData_bt_e001408c92acdfd7(btQuantizedBvhDoubleData *_swig_go_0) {
  btQuantizedBvhDoubleData *arg1 = (btQuantizedBvhDoubleData *) 0 ;
  
  arg1 = *(btQuantizedBvhDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


btOptimizedBvh *_wrap_new_btOptimizedBvh_bt_e001408c92acdfd7() {
  btOptimizedBvh *result = 0 ;
  btOptimizedBvh *_swig_go_result;
  
  
  result = (btOptimizedBvh *)new btOptimizedBvh();
  *(btOptimizedBvh **)&_swig_go_result = (btOptimizedBvh *)result; 
  return _swig_go_result;
}


void _wrap_delete_btOptimizedBvh_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btOptimizedBvh_build_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btStridingMeshInterface *_swig_go_1, bool _swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btStridingMeshInterface *arg2 = (btStridingMeshInterface *) 0 ;
  bool arg3 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btStridingMeshInterface **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->build(arg2,arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btOptimizedBvh_refit_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btStridingMeshInterface *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btStridingMeshInterface *arg2 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btStridingMeshInterface **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->refit(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btOptimizedBvh_refitPartial_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btStridingMeshInterface *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btStridingMeshInterface *arg2 = (btStridingMeshInterface *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btStridingMeshInterface **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->refitPartial(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btOptimizedBvh_updateBvhNodes_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btStridingMeshInterface *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btStridingMeshInterface *arg2 = (btStridingMeshInterface *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btStridingMeshInterface **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->updateBvhNodes(arg2,arg3,arg4,arg5);
  
}


bool _wrap_btOptimizedBvh_serializeInPlace_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  void *arg2 = (void *) 0 ;
  unsigned int arg3 ;
  bool arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (bool)((btOptimizedBvh const *)arg1)->serializeInPlace(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btOptimizedBvh *_wrap_btOptimizedBvh_deSerializeInPlace_bt_e001408c92acdfd7(void *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  void *arg1 = (void *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  btOptimizedBvh *result = 0 ;
  btOptimizedBvh *_swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btOptimizedBvh *)btOptimizedBvh::deSerializeInPlace(arg1,arg2,arg3);
  *(btOptimizedBvh **)&_swig_go_result = (btOptimizedBvh *)result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvh_setQuantizationValues__SWIG_0_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->setQuantizationValues((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btOptimizedBvh_setQuantizationValues__SWIG_1_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->setQuantizationValues((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


btAlignedObjectArray< btQuantizedBvhNode > *_wrap_btOptimizedBvh_getLeafNodeArray_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  QuantizedNodeArray *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhNode > *_swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (QuantizedNodeArray *) &(swig_b0)->getLeafNodeArray();
  *(QuantizedNodeArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvh_buildInternal_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->buildInternal();
  
}


void _wrap_btOptimizedBvh_reportAabbOverlappingNodex_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  ((btQuantizedBvh const *)swig_b0)->reportAabbOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btOptimizedBvh_reportRayOverlappingNodex_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  ((btQuantizedBvh const *)swig_b0)->reportRayOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btOptimizedBvh_reportBoxCastOverlappingNodex_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btNodeOverlapCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btNodeOverlapCallback *arg2 = (btNodeOverlapCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btNodeOverlapCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  ((btQuantizedBvh const *)swig_b0)->reportBoxCastOverlappingNodex(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btOptimizedBvh_quantize_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, short *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  ((btQuantizedBvh const *)swig_b0)->quantize(arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_btOptimizedBvh_quantizeWithClamp_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, short *_swig_go_1, btVector3 *_swig_go_2, intgo _swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  ((btQuantizedBvh const *)swig_b0)->quantizeWithClamp(arg2,(btVector3 const &)*arg3,arg4);
  
}


btVector3 *_wrap_btOptimizedBvh_unQuantize_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, short *_swig_go_1) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(unsigned short **)&_swig_go_1; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = ((btQuantizedBvh const *)swig_b0)->unQuantize((unsigned short const *)arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btOptimizedBvh_setTraversalMode_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, intgo _swig_go_1) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btQuantizedBvh::btTraversalMode arg2 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = (btQuantizedBvh::btTraversalMode)_swig_go_1; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->setTraversalMode(arg2);
  
}


btAlignedObjectArray< btQuantizedBvhNode > *_wrap_btOptimizedBvh_getQuantizedNodeArray_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  QuantizedNodeArray *result = 0 ;
  btAlignedObjectArray< btQuantizedBvhNode > *_swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (QuantizedNodeArray *) &(swig_b0)->getQuantizedNodeArray();
  *(QuantizedNodeArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btBvhSubtreeInfo > *_wrap_btOptimizedBvh_getSubtreeInfoArray_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  BvhSubtreeInfoArray *result = 0 ;
  btAlignedObjectArray< btBvhSubtreeInfo > *_swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (BvhSubtreeInfoArray *) &(swig_b0)->getSubtreeInfoArray();
  *(BvhSubtreeInfoArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btOptimizedBvh_calculateSerializeBufferSize_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (unsigned int)((btQuantizedBvh const *)swig_b0)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btOptimizedBvh_serialize__SWIG_0_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  void *arg2 = (void *) 0 ;
  unsigned int arg3 ;
  bool arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (bool)((btQuantizedBvh const *)swig_b0)->serialize(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btOptimizedBvh_serialize__SWIG_1_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (char *)((btQuantizedBvh const *)swig_b0)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btOptimizedBvh_getAlignmentSerializationPadding_bt_e001408c92acdfd7() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)btQuantizedBvh::getAlignmentSerializationPadding();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btOptimizedBvh_calculateSerializeBufferSizeNew_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (int)((btQuantizedBvh const *)swig_b0)->calculateSerializeBufferSizeNew();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btOptimizedBvh_deSerializeFloat_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btQuantizedBvhFloatData *_swig_go_1) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btQuantizedBvhFloatData *arg2 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhFloatData **)&_swig_go_1; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->deSerializeFloat(*arg2);
  
}


void _wrap_btOptimizedBvh_deSerializeDouble_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0, btQuantizedBvhDoubleData *_swig_go_1) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  btQuantizedBvhDoubleData *arg2 = 0 ;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhDoubleData **)&_swig_go_1; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  (swig_b0)->deSerializeDouble(*arg2);
  
}


bool _wrap_btOptimizedBvh_isQuantized_bt_e001408c92acdfd7(btOptimizedBvh *_swig_go_0) {
  btOptimizedBvh *arg1 = (btOptimizedBvh *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btOptimizedBvh **)&_swig_go_0; 
  
  btQuantizedBvh *swig_b0 = (btQuantizedBvh *)arg1;
  result = (bool)(swig_b0)->isQuantized();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTriangleInfo *_wrap_new_btTriangleInfo_bt_e001408c92acdfd7() {
  btTriangleInfo *result = 0 ;
  btTriangleInfo *_swig_go_result;
  
  
  result = (btTriangleInfo *)new btTriangleInfo();
  *(btTriangleInfo **)&_swig_go_result = (btTriangleInfo *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfo_m_flags_set_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_flags = arg2;
  
}


intgo _wrap_btTriangleInfo_m_flags_get_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfo_m_edgeV0V1Angle_set_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0, float _swig_go_1) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV0V1Angle = arg2;
  
}


float _wrap_btTriangleInfo_m_edgeV0V1Angle_get_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_edgeV0V1Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfo_m_edgeV1V2Angle_set_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0, float _swig_go_1) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV1V2Angle = arg2;
  
}


float _wrap_btTriangleInfo_m_edgeV1V2Angle_get_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_edgeV1V2Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfo_m_edgeV2V0Angle_set_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0, float _swig_go_1) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV2V0Angle = arg2;
  
}


float _wrap_btTriangleInfo_m_edgeV2V0Angle_get_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_edgeV2V0Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleInfo_bt_e001408c92acdfd7(btTriangleInfo *_swig_go_0) {
  btTriangleInfo *arg1 = (btTriangleInfo *) 0 ;
  
  arg1 = *(btTriangleInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTriangleInfoMap_m_convexEpsilon_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_convexEpsilon = arg2;
  
}


float _wrap_btTriangleInfoMap_m_convexEpsilon_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_convexEpsilon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_m_planarEpsilon_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_planarEpsilon = arg2;
  
}


float _wrap_btTriangleInfoMap_m_planarEpsilon_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_planarEpsilon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_m_equalVertexThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_equalVertexThreshold = arg2;
  
}


float _wrap_btTriangleInfoMap_m_equalVertexThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_equalVertexThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_m_edgeDistanceThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeDistanceThreshold = arg2;
  
}


float _wrap_btTriangleInfoMap_m_edgeDistanceThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_edgeDistanceThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxEdgeAngleThreshold = arg2;
  
}


float _wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxEdgeAngleThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_m_zeroAreaThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_zeroAreaThreshold = arg2;
  
}


float _wrap_btTriangleInfoMap_m_zeroAreaThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_zeroAreaThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


btTriangleInfoMap *_wrap_new_btTriangleInfoMap_bt_e001408c92acdfd7() {
  btTriangleInfoMap *result = 0 ;
  btTriangleInfoMap *_swig_go_result;
  
  
  result = (btTriangleInfoMap *)new btTriangleInfoMap();
  *(btTriangleInfoMap **)&_swig_go_result = (btTriangleInfoMap *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleInfoMap_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btTriangleInfoMap_calculateSerializeBufferSize_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  
  result = (int)((btTriangleInfoMap const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btTriangleInfoMap_serialize_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btTriangleInfoMap const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMap_deSerialize_bt_e001408c92acdfd7(btTriangleInfoMap *_swig_go_0, btTriangleInfoMapData *_swig_go_1) {
  btTriangleInfoMap *arg1 = (btTriangleInfoMap *) 0 ;
  btTriangleInfoMapData *arg2 = 0 ;
  
  arg1 = *(btTriangleInfoMap **)&_swig_go_0; 
  arg2 = *(btTriangleInfoMapData **)&_swig_go_1; 
  
  (arg1)->deSerialize(*arg2);
  
}


void _wrap_btTriangleInfoData_m_flags_set_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_flags = arg2;
  
}


intgo _wrap_btTriangleInfoData_m_flags_get_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoData_m_edgeV0V1Angle_set_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV0V1Angle = arg2;
  
}


float _wrap_btTriangleInfoData_m_edgeV0V1Angle_get_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_edgeV0V1Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoData_m_edgeV1V2Angle_set_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV1V2Angle = arg2;
  
}


float _wrap_btTriangleInfoData_m_edgeV1V2Angle_get_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_edgeV1V2Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoData_m_edgeV2V0Angle_set_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeV2V0Angle = arg2;
  
}


float _wrap_btTriangleInfoData_m_edgeV2V0Angle_get_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_edgeV2V0Angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


btTriangleInfoData *_wrap_new_btTriangleInfoData_bt_e001408c92acdfd7() {
  btTriangleInfoData *result = 0 ;
  btTriangleInfoData *_swig_go_result;
  
  
  result = (btTriangleInfoData *)new btTriangleInfoData();
  *(btTriangleInfoData **)&_swig_go_result = (btTriangleInfoData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleInfoData_bt_e001408c92acdfd7(btTriangleInfoData *_swig_go_0) {
  btTriangleInfoData *arg1 = (btTriangleInfoData *) 0 ;
  
  arg1 = *(btTriangleInfoData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTriangleInfoMapData_m_hashTablePtr_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo *_swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_hashTablePtr = arg2;
  
}


intgo *_wrap_btTriangleInfoMapData_m_hashTablePtr_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int *) ((arg1)->m_hashTablePtr);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_nextPtr_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo *_swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_nextPtr = arg2;
  
}


intgo *_wrap_btTriangleInfoMapData_m_nextPtr_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int *) ((arg1)->m_nextPtr);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_valueArrayPtr_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, btTriangleInfoData *_swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  btTriangleInfoData *arg2 = (btTriangleInfoData *) 0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = *(btTriangleInfoData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_valueArrayPtr = arg2;
  
}


btTriangleInfoData *_wrap_btTriangleInfoMapData_m_valueArrayPtr_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  btTriangleInfoData *result = 0 ;
  btTriangleInfoData *_swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (btTriangleInfoData *) ((arg1)->m_valueArrayPtr);
  *(btTriangleInfoData **)&_swig_go_result = (btTriangleInfoData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_keyArrayPtr_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo *_swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_keyArrayPtr = arg2;
  
}


intgo *_wrap_btTriangleInfoMapData_m_keyArrayPtr_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int *) ((arg1)->m_keyArrayPtr);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_convexEpsilon_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_convexEpsilon = arg2;
  
}


float _wrap_btTriangleInfoMapData_m_convexEpsilon_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_convexEpsilon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_planarEpsilon_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_planarEpsilon = arg2;
  
}


float _wrap_btTriangleInfoMapData_m_planarEpsilon_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_planarEpsilon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_equalVertexThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_equalVertexThreshold = arg2;
  
}


float _wrap_btTriangleInfoMapData_m_equalVertexThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_equalVertexThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_edgeDistanceThreshold = arg2;
  
}


float _wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_edgeDistanceThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_zeroAreaThreshold_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, float _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_zeroAreaThreshold = arg2;
  
}


float _wrap_btTriangleInfoMapData_m_zeroAreaThreshold_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_zeroAreaThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_nextSize_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_nextSize = arg2;
  
}


intgo _wrap_btTriangleInfoMapData_m_nextSize_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_nextSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_hashTableSize_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_hashTableSize = arg2;
  
}


intgo _wrap_btTriangleInfoMapData_m_hashTableSize_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_hashTableSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_numValues_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numValues = arg2;
  
}


intgo _wrap_btTriangleInfoMapData_m_numValues_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numValues);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_numKeys_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, intgo _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int arg2 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numKeys = arg2;
  
}


intgo _wrap_btTriangleInfoMapData_m_numKeys_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numKeys);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleInfoMapData_m_padding_set_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0, _gostring_ _swig_go_1) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTriangleInfoMapData_m_padding_get_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btTriangleInfoMapData *_wrap_new_btTriangleInfoMapData_bt_e001408c92acdfd7() {
  btTriangleInfoMapData *result = 0 ;
  btTriangleInfoMapData *_swig_go_result;
  
  
  result = (btTriangleInfoMapData *)new btTriangleInfoMapData();
  *(btTriangleInfoMapData **)&_swig_go_result = (btTriangleInfoMapData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleInfoMapData_bt_e001408c92acdfd7(btTriangleInfoMapData *_swig_go_0) {
  btTriangleInfoMapData *arg1 = (btTriangleInfoMapData *) 0 ;
  
  arg1 = *(btTriangleInfoMapData **)&_swig_go_0; 
  
  delete arg1;
  
}


btBvhTriangleMeshShape *_wrap_new_btBvhTriangleMeshShape__SWIG_0_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, bool _swig_go_1, bool _swig_go_2) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  bool arg2 ;
  bool arg3 ;
  btBvhTriangleMeshShape *result = 0 ;
  btBvhTriangleMeshShape *_swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btBvhTriangleMeshShape *)new btBvhTriangleMeshShape(arg1,arg2,arg3);
  *(btBvhTriangleMeshShape **)&_swig_go_result = (btBvhTriangleMeshShape *)result; 
  return _swig_go_result;
}


btBvhTriangleMeshShape *_wrap_new_btBvhTriangleMeshShape__SWIG_1_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, bool _swig_go_1) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  bool arg2 ;
  btBvhTriangleMeshShape *result = 0 ;
  btBvhTriangleMeshShape *_swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (btBvhTriangleMeshShape *)new btBvhTriangleMeshShape(arg1,arg2);
  *(btBvhTriangleMeshShape **)&_swig_go_result = (btBvhTriangleMeshShape *)result; 
  return _swig_go_result;
}


btBvhTriangleMeshShape *_wrap_new_btBvhTriangleMeshShape__SWIG_2_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, bool _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, bool _swig_go_4) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  bool arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  bool arg5 ;
  btBvhTriangleMeshShape *result = 0 ;
  btBvhTriangleMeshShape *_swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (btBvhTriangleMeshShape *)new btBvhTriangleMeshShape(arg1,arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5);
  *(btBvhTriangleMeshShape **)&_swig_go_result = (btBvhTriangleMeshShape *)result; 
  return _swig_go_result;
}


btBvhTriangleMeshShape *_wrap_new_btBvhTriangleMeshShape__SWIG_3_bt_e001408c92acdfd7(btStridingMeshInterface *_swig_go_0, bool _swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btStridingMeshInterface *arg1 = (btStridingMeshInterface *) 0 ;
  bool arg2 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btBvhTriangleMeshShape *result = 0 ;
  btBvhTriangleMeshShape *_swig_go_result;
  
  arg1 = *(btStridingMeshInterface **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (btBvhTriangleMeshShape *)new btBvhTriangleMeshShape(arg1,arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  *(btBvhTriangleMeshShape **)&_swig_go_result = (btBvhTriangleMeshShape *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBvhTriangleMeshShape_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btBvhTriangleMeshShape_getOwnsBvh_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (bool)((btBvhTriangleMeshShape const *)arg1)->getOwnsBvh();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_performRaycast_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->performRaycast(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btBvhTriangleMeshShape_performConvexcast_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->performConvexcast(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btBvhTriangleMeshShape_processAllTriangles_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btBvhTriangleMeshShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btBvhTriangleMeshShape_refitTree_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->refitTree((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btBvhTriangleMeshShape_partialRefitTree_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->partialRefitTree((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


_gostring_ _wrap_btBvhTriangleMeshShape_getName_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (char *)((btBvhTriangleMeshShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setLocalScaling_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btOptimizedBvh *_wrap_btBvhTriangleMeshShape_getOptimizedBvh_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btOptimizedBvh *result = 0 ;
  btOptimizedBvh *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (btOptimizedBvh *)(arg1)->getOptimizedBvh();
  *(btOptimizedBvh **)&_swig_go_result = (btOptimizedBvh *)result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btOptimizedBvh *_swig_go_1, btVector3 *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btOptimizedBvh *arg2 = (btOptimizedBvh *) 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btOptimizedBvh **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->setOptimizedBvh(arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btOptimizedBvh *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btOptimizedBvh *arg2 = (btOptimizedBvh *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btOptimizedBvh **)&_swig_go_1; 
  
  (arg1)->setOptimizedBvh(arg2);
  
}


void _wrap_btBvhTriangleMeshShape_buildOptimizedBvh_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  (arg1)->buildOptimizedBvh();
  
}


bool _wrap_btBvhTriangleMeshShape_usesQuantizedAabbCompression_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (bool)((btBvhTriangleMeshShape const *)arg1)->usesQuantizedAabbCompression();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setTriangleInfoMap_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTriangleInfoMap *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleInfoMap *arg2 = (btTriangleInfoMap *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTriangleInfoMap **)&_swig_go_1; 
  
  (arg1)->setTriangleInfoMap(arg2);
  
}


btTriangleInfoMap *_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleInfoMap *result = 0 ;
  btTriangleInfoMap *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (btTriangleInfoMap *)((btBvhTriangleMeshShape const *)arg1)->getTriangleInfoMap();
  *(btTriangleInfoMap **)&_swig_go_result = (btTriangleInfoMap *)result; 
  return _swig_go_result;
}


btTriangleInfoMap *_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_1_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTriangleInfoMap *result = 0 ;
  btTriangleInfoMap *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (btTriangleInfoMap *)(arg1)->getTriangleInfoMap();
  *(btTriangleInfoMap **)&_swig_go_result = (btTriangleInfoMap *)result; 
  return _swig_go_result;
}


intgo _wrap_btBvhTriangleMeshShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  result = (int)((btBvhTriangleMeshShape const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btBvhTriangleMeshShape_serialize_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btBvhTriangleMeshShape const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_serializeSingleBvh_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btSerializer *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  ((btBvhTriangleMeshShape const *)arg1)->serializeSingleBvh(arg2);
  
}


void _wrap_btBvhTriangleMeshShape_serializeSingleTriangleInfoMap_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btSerializer *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  ((btBvhTriangleMeshShape const *)arg1)->serializeSingleTriangleInfoMap(arg2);
  
}


btVector3 *_wrap_btBvhTriangleMeshShape_localGetSupportingVertex_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = ((btTriangleMeshShape const *)swig_b0)->localGetSupportingVertex((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_btBvhTriangleMeshShape_localGetSupportingVertexWithoutMargin_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = ((btTriangleMeshShape const *)swig_b0)->localGetSupportingVertexWithoutMargin((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_recalcLocalAabb_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  (swig_b0)->recalcLocalAabb();
  
}


void _wrap_btBvhTriangleMeshShape_getAabb_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  ((btTriangleMeshShape const *)swig_b0)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btBvhTriangleMeshShape_calculateLocalInertia_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  ((btTriangleMeshShape const *)swig_b0)->calculateLocalInertia(arg2,*arg3);
  
}


btVector3 *_wrap_btBvhTriangleMeshShape_getLocalScaling_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = (btVector3 *) &((btTriangleMeshShape const *)swig_b0)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btStridingMeshInterface *_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_0_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btStridingMeshInterface *result = 0 ;
  btStridingMeshInterface *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = (btStridingMeshInterface *)(swig_b0)->getMeshInterface();
  *(btStridingMeshInterface **)&_swig_go_result = (btStridingMeshInterface *)result; 
  return _swig_go_result;
}


btStridingMeshInterface *_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_1_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btStridingMeshInterface *result = 0 ;
  btStridingMeshInterface *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = (btStridingMeshInterface *)((btTriangleMeshShape const *)swig_b0)->getMeshInterface();
  *(btStridingMeshInterface **)&_swig_go_result = (btStridingMeshInterface *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBvhTriangleMeshShape_getLocalAabbMin_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = (btVector3 *) &((btTriangleMeshShape const *)swig_b0)->getLocalAabbMin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBvhTriangleMeshShape_getLocalAabbMax_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  result = (btVector3 *) &((btTriangleMeshShape const *)swig_b0)->getLocalAabbMax();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBvhTriangleMeshShape_getMargin_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  result = (btScalar)((btConcaveShape const *)swig_b1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setMargin_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, float _swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  (swig_b1)->setMargin(arg2);
  
}


void _wrap_btBvhTriangleMeshShape_getBoundingSphere_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btBvhTriangleMeshShape_getAngularMotionDisc_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBvhTriangleMeshShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, float _swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (btScalar)((btCollisionShape const *)swig_b2)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_calculateTemporalAabb_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btBvhTriangleMeshShape_isPolyhedral_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isConvex2d_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isConvex_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isNonMoving_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isConcave_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isCompound_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isSoftBody_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btBvhTriangleMeshShape_isInfinite_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (bool)((btCollisionShape const *)swig_b2)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btBvhTriangleMeshShape_getShapeType_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btBvhTriangleMeshShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = ((btCollisionShape const *)swig_b2)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setUserPointer_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, void *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserPointer(arg2);
  
}


void *_wrap_btBvhTriangleMeshShape_getUserPointer_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (void *)((btCollisionShape const *)swig_b2)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setUserIndex_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, intgo _swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex(arg2);
  
}


intgo _wrap_btBvhTriangleMeshShape_getUserIndex_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_setUserIndex2_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, intgo _swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  (swig_b2)->setUserIndex2(arg2);
  
}


intgo _wrap_btBvhTriangleMeshShape_getUserIndex2_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  result = (int)((btCollisionShape const *)swig_b2)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBvhTriangleMeshShape_serializeSingleShape_bt_e001408c92acdfd7(btBvhTriangleMeshShape *_swig_go_0, btSerializer *_swig_go_1) {
  btBvhTriangleMeshShape *arg1 = (btBvhTriangleMeshShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btBvhTriangleMeshShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btTriangleMeshShape *swig_b0 = (btTriangleMeshShape *)arg1;
  btConcaveShape *swig_b1 = (btConcaveShape *)swig_b0;
  btCollisionShape *swig_b2 = (btCollisionShape *)swig_b1;
  ((btCollisionShape const *)swig_b2)->serializeSingleShape(arg2);
  
}


void _wrap_btTriangleMeshShapeData_m_collisionShapeData_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, btCollisionShapeData *_swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btCollisionShapeData *arg2 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = *(btCollisionShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionShapeData = *arg2;
  
}


btCollisionShapeData *_wrap_btTriangleMeshShapeData_m_collisionShapeData_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (btCollisionShapeData *)& ((arg1)->m_collisionShapeData);
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_meshInterface_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, btStridingMeshInterfaceData *_swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btStridingMeshInterfaceData *arg2 = (btStridingMeshInterfaceData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = *(btStridingMeshInterfaceData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meshInterface = *arg2;
  
}


btStridingMeshInterfaceData *_wrap_btTriangleMeshShapeData_m_meshInterface_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btStridingMeshInterfaceData *result = 0 ;
  btStridingMeshInterfaceData *_swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (btStridingMeshInterfaceData *)& ((arg1)->m_meshInterface);
  *(btStridingMeshInterfaceData **)&_swig_go_result = (btStridingMeshInterfaceData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, btQuantizedBvhFloatData *_swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btQuantizedBvhFloatData *arg2 = (btQuantizedBvhFloatData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_quantizedFloatBvh = arg2;
  
}


btQuantizedBvhFloatData *_wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btQuantizedBvhFloatData *result = 0 ;
  btQuantizedBvhFloatData *_swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (btQuantizedBvhFloatData *) ((arg1)->m_quantizedFloatBvh);
  *(btQuantizedBvhFloatData **)&_swig_go_result = (btQuantizedBvhFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, btQuantizedBvhDoubleData *_swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btQuantizedBvhDoubleData *arg2 = (btQuantizedBvhDoubleData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = *(btQuantizedBvhDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_quantizedDoubleBvh = arg2;
  
}


btQuantizedBvhDoubleData *_wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btQuantizedBvhDoubleData *result = 0 ;
  btQuantizedBvhDoubleData *_swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (btQuantizedBvhDoubleData *) ((arg1)->m_quantizedDoubleBvh);
  *(btQuantizedBvhDoubleData **)&_swig_go_result = (btQuantizedBvhDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_triangleInfoMap_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, btTriangleInfoMapData *_swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btTriangleInfoMapData *arg2 = (btTriangleInfoMapData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = *(btTriangleInfoMapData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleInfoMap = arg2;
  
}


btTriangleInfoMapData *_wrap_btTriangleMeshShapeData_m_triangleInfoMap_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  btTriangleInfoMapData *result = 0 ;
  btTriangleInfoMapData *_swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (btTriangleInfoMapData *) ((arg1)->m_triangleInfoMap);
  *(btTriangleInfoMapData **)&_swig_go_result = (btTriangleInfoMapData *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_collisionMargin_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, float _swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  float arg2 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionMargin = arg2;
  
}


float _wrap_btTriangleMeshShapeData_m_collisionMargin_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_collisionMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleMeshShapeData_m_pad3_set_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0, _gostring_ _swig_go_1) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad3, (const char *)arg2, 4-1);
      arg1->m_pad3[4-1] = 0;
    } else {
      arg1->m_pad3[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btTriangleMeshShapeData_m_pad3_get_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btTriangleMeshShapeData *_wrap_new_btTriangleMeshShapeData_bt_e001408c92acdfd7() {
  btTriangleMeshShapeData *result = 0 ;
  btTriangleMeshShapeData *_swig_go_result;
  
  
  result = (btTriangleMeshShapeData *)new btTriangleMeshShapeData();
  *(btTriangleMeshShapeData **)&_swig_go_result = (btTriangleMeshShapeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleMeshShapeData_bt_e001408c92acdfd7(btTriangleMeshShapeData *_swig_go_0) {
  btTriangleMeshShapeData *arg1 = (btTriangleMeshShapeData *) 0 ;
  
  arg1 = *(btTriangleMeshShapeData **)&_swig_go_0; 
  
  delete arg1;
  
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_0_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, intgo _swig_go_5, bool _swig_go_6) {
  int arg1 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  btScalar arg4 ;
  btScalar arg5 ;
  int arg6 ;
  bool arg7 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(float const *)arg3,arg4,arg5,arg6,arg7);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_1_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, double *_swig_go_2, float _swig_go_3, float _swig_go_4, intgo _swig_go_5, bool _swig_go_6) {
  int arg1 ;
  int arg2 ;
  double *arg3 = (double *) 0 ;
  btScalar arg4 ;
  btScalar arg5 ;
  int arg6 ;
  bool arg7 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(double const *)arg3,arg4,arg5,arg6,arg7);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_2_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, short *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, intgo _swig_go_6, bool _swig_go_7) {
  int arg1 ;
  int arg2 ;
  short *arg3 = (short *) 0 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  int arg7 ;
  bool arg8 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(short **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(short const *)arg3,arg4,arg5,arg6,arg7,arg8);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_3_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, char *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, intgo _swig_go_6, bool _swig_go_7) {
  int arg1 ;
  int arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  int arg7 ;
  bool arg8 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(unsigned char **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(unsigned char const *)arg3,arg4,arg5,arg6,arg7,arg8);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_4_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, bool _swig_go_8) {
  int arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  int arg7 ;
  PHY_ScalarType arg8 ;
  bool arg9 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (PHY_ScalarType)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(void const *)arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape *_wrap_new_btHeightfieldTerrainShape__SWIG_5_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, intgo _swig_go_4, bool _swig_go_5, bool _swig_go_6) {
  int arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  btScalar arg4 ;
  int arg5 ;
  bool arg6 ;
  bool arg7 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (btHeightfieldTerrainShape *)new btHeightfieldTerrainShape(arg1,arg2,(void const *)arg3,arg4,arg5,arg6,arg7);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


void _wrap_delete_btHeightfieldTerrainShape_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, bool _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setUseDiamondSubdivision(arg2);
  
}


void _wrap_btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  (arg1)->setUseDiamondSubdivision();
  
}


void _wrap_btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, bool _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setUseZigzagSubdivision(arg2);
  
}


void _wrap_btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  (arg1)->setUseZigzagSubdivision();
  
}


void _wrap_btHeightfieldTerrainShape_setFlipTriangleWinding_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, bool _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setFlipTriangleWinding(arg2);
  
}


void _wrap_btHeightfieldTerrainShape_getAabb_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btHeightfieldTerrainShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btHeightfieldTerrainShape_processAllTriangles_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btHeightfieldTerrainShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btHeightfieldTerrainShape_calculateLocalInertia_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btHeightfieldTerrainShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


void _wrap_btHeightfieldTerrainShape_setLocalScaling_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btVector3 *_swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btHeightfieldTerrainShape_getLocalScaling_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btHeightfieldTerrainShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_getVertex_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, btVector3 *_swig_go_3) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int arg2 ;
  int arg3 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btHeightfieldTerrainShape const *)arg1)->getVertex(arg2,arg3,*arg4);
  
}


void _wrap_btHeightfieldTerrainShape_performRaycast_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btHeightfieldTerrainShape const *)arg1)->performRaycast(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btHeightfieldTerrainShape_buildAccelerator__SWIG_0_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, intgo _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->buildAccelerator(arg2);
  
}


void _wrap_btHeightfieldTerrainShape_buildAccelerator__SWIG_1_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  (arg1)->buildAccelerator();
  
}


void _wrap_btHeightfieldTerrainShape_clearAccelerator_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  (arg1)->clearAccelerator();
  
}


intgo _wrap_btHeightfieldTerrainShape_getUpAxis_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (int)((btHeightfieldTerrainShape const *)arg1)->getUpAxis();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btHeightfieldTerrainShape_getName_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (char *)((btHeightfieldTerrainShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setUserValue3_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, float _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setUserValue3(arg2);
  
}


float _wrap_btHeightfieldTerrainShape_getUserValue3_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (btScalar)((btHeightfieldTerrainShape const *)arg1)->getUserValue3();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTriangleInfoMap *_wrap_btHeightfieldTerrainShape_getTriangleInfoMap__SWIG_0_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTriangleInfoMap *result = 0 ;
  btTriangleInfoMap *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (btTriangleInfoMap *)((btHeightfieldTerrainShape const *)arg1)->getTriangleInfoMap();
  *(btTriangleInfoMap **)&_swig_go_result = (btTriangleInfoMap *)result; 
  return _swig_go_result;
}


btTriangleInfoMap *_wrap_btHeightfieldTerrainShape_getTriangleInfoMap__SWIG_1_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTriangleInfoMap *result = 0 ;
  btTriangleInfoMap *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (btTriangleInfoMap *)(arg1)->getTriangleInfoMap();
  *(btTriangleInfoMap **)&_swig_go_result = (btTriangleInfoMap *)result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setTriangleInfoMap_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btTriangleInfoMap *_swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTriangleInfoMap *arg2 = (btTriangleInfoMap *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btTriangleInfoMap **)&_swig_go_1; 
  
  (arg1)->setTriangleInfoMap(arg2);
  
}


char *_wrap_btHeightfieldTerrainShape_getHeightfieldRawData_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  result = (unsigned char *)((btHeightfieldTerrainShape const *)arg1)->getHeightfieldRawData();
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


float _wrap_btHeightfieldTerrainShape_getMargin_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  result = (btScalar)((btConcaveShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setMargin_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, float _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


void _wrap_btHeightfieldTerrainShape_getBoundingSphere_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btHeightfieldTerrainShape_getAngularMotionDisc_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btHeightfieldTerrainShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, float _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_calculateTemporalAabb_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btHeightfieldTerrainShape_isPolyhedral_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isConvex2d_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isConvex_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isNonMoving_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isConcave_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isCompound_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isSoftBody_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btHeightfieldTerrainShape_isInfinite_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHeightfieldTerrainShape_getShapeType_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btHeightfieldTerrainShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = ((btCollisionShape const *)swig_b1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setUserPointer_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, void *_swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserPointer(arg2);
  
}


void *_wrap_btHeightfieldTerrainShape_getUserPointer_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (void *)((btCollisionShape const *)swig_b1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setUserIndex_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, intgo _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex(arg2);
  
}


intgo _wrap_btHeightfieldTerrainShape_getUserIndex_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_setUserIndex2_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, intgo _swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex2(arg2);
  
}


intgo _wrap_btHeightfieldTerrainShape_getUserIndex2_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHeightfieldTerrainShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btHeightfieldTerrainShape_serialize_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (char *)((btCollisionShape const *)swig_b1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btHeightfieldTerrainShape_serializeSingleShape_bt_e001408c92acdfd7(btHeightfieldTerrainShape *_swig_go_0, btSerializer *_swig_go_1) {
  btHeightfieldTerrainShape *arg1 = (btHeightfieldTerrainShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btHeightfieldTerrainShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->serializeSingleShape(arg2);
  
}


void _wrap_btTriangleRaycastCallback_m_from_set_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_from = *arg2;
  
}


btVector3 *_wrap_btTriangleRaycastCallback_m_from_get_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_from);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleRaycastCallback_m_to_set_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_to = *arg2;
  
}


btVector3 *_wrap_btTriangleRaycastCallback_m_to_get_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_to);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


intgo _wrap_kF_None_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_FilterBackfaces_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_FilterBackfaces;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_KeepUnflippedNormal_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_KeepUnflippedNormal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_UseSubSimplexConvexCastRaytest_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_UseSubSimplexConvexCastRaytest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_UseGjkConvexCastRaytest_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_UseGjkConvexCastRaytest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_DisableHeightfieldAccelerator_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_DisableHeightfieldAccelerator;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_kF_Terminator_btTriangleRaycastCallback_bt_e001408c92acdfd7() {
  btTriangleRaycastCallback::EFlags result;
  intgo _swig_go_result;
  
  
  result = btTriangleRaycastCallback::kF_Terminator;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btTriangleRaycastCallback_m_flags_set_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, intgo _swig_go_1) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->m_flags = arg2;
  
}


intgo _wrap_btTriangleRaycastCallback_m_flags_get_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->m_flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleRaycastCallback_m_hitFraction_set_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, float _swig_go_1) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_hitFraction = arg2;
  
}


float _wrap_btTriangleRaycastCallback_m_hitFraction_get_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_hitFraction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleRaycastCallback_processTriangle_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


float _wrap_btTriangleRaycastCallback_reportHit_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  int arg4 ;
  int arg5 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (btScalar)(arg1)->reportHit((btVector3 const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleRaycastCallback_bt_e001408c92acdfd7(btTriangleRaycastCallback *_swig_go_0) {
  btTriangleRaycastCallback *arg1 = (btTriangleRaycastCallback *) 0 ;
  
  arg1 = *(btTriangleRaycastCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTriangleConvexcastCallback_m_convexShape_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btConvexShape *_swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexShape = (btConvexShape const *)arg2;
  
}


btConvexShape *_wrap_btTriangleConvexcastCallback_m_convexShape_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btConvexShape *result = 0 ;
  btConvexShape *_swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btConvexShape *) ((arg1)->m_convexShape);
  *(btConvexShape **)&_swig_go_result = (btConvexShape *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_convexShapeFrom_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btTransform *_swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexShapeFrom = *arg2;
  
}


btTransform *_wrap_btTriangleConvexcastCallback_m_convexShapeFrom_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_convexShapeFrom);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_convexShapeTo_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btTransform *_swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexShapeTo = *arg2;
  
}


btTransform *_wrap_btTriangleConvexcastCallback_m_convexShapeTo_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_convexShapeTo);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_triangleToWorld_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btTransform *_swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleToWorld = *arg2;
  
}


btTransform *_wrap_btTriangleConvexcastCallback_m_triangleToWorld_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_triangleToWorld);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_hitFraction_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, float _swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_hitFraction = arg2;
  
}


float _wrap_btTriangleConvexcastCallback_m_hitFraction_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_hitFraction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_triangleCollisionMargin_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, float _swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleCollisionMargin = arg2;
  
}


float _wrap_btTriangleConvexcastCallback_m_triangleCollisionMargin_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_triangleCollisionMargin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_m_allowedPenetration_set_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, float _swig_go_1) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_allowedPenetration = arg2;
  
}


float _wrap_btTriangleConvexcastCallback_m_allowedPenetration_get_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_allowedPenetration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTriangleConvexcastCallback_processTriangle_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


float _wrap_btTriangleConvexcastCallback_reportHit_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  int arg5 ;
  int arg6 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (btScalar)(arg1)->reportHit((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTriangleConvexcastCallback_bt_e001408c92acdfd7(btTriangleConvexcastCallback *_swig_go_0) {
  btTriangleConvexcastCallback *arg1 = (btTriangleConvexcastCallback *) 0 ;
  
  arg1 = *(btTriangleConvexcastCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_DBG_NoDebug_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_NoDebug;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawWireframe_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawWireframe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawAabb_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawAabb;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawFeaturesText_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawFeaturesText;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawContactPoints_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawContactPoints;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_NoDeactivation_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_NoDeactivation;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_NoHelpText_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_NoHelpText;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawText_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawText;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_ProfileTimings_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_ProfileTimings;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_EnableSatComparison_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_EnableSatComparison;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DisableBulletLCP_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DisableBulletLCP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_EnableCCD_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_EnableCCD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawConstraints_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawConstraints;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawConstraintLimits_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawConstraintLimits;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_FastWireframe_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_FastWireframe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawNormals_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawNormals;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_DrawFrames_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_DrawFrames;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DBG_MAX_DEBUG_DRAW_MODE_btIDebugDraw_bt_e001408c92acdfd7() {
  btIDebugDraw::DebugDrawModes result;
  intgo _swig_go_result;
  
  
  result = btIDebugDraw::DBG_MAX_DEBUG_DRAW_MODE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btIDebugDraw_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  delete arg1;
  
}


btIDebugDraw::DefaultColors *_wrap_btIDebugDraw_getDefaultColors_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btIDebugDraw::DefaultColors result;
  btIDebugDraw::DefaultColors *_swig_go_result;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  result = ((btIDebugDraw const *)arg1)->getDefaultColors();
  *(btIDebugDraw::DefaultColors **)&_swig_go_result = new btIDebugDraw::DefaultColors(result); 
  return _swig_go_result;
}


void _wrap_btIDebugDraw_setDefaultColors_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btIDebugDraw::DefaultColors *_swig_go_1) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btIDebugDraw::DefaultColors *arg2 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btIDebugDraw::DefaultColors **)&_swig_go_1; 
  
  (arg1)->setDefaultColors((btIDebugDraw::DefaultColors const &)*arg2);
  
}


void _wrap_btIDebugDraw_drawLine__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawLine((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btIDebugDraw_drawLine__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawLine((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btIDebugDraw_drawSphere__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, float _swig_go_1, btTransform *_swig_go_2, btVector3 *_swig_go_3) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btScalar arg2 ;
  btTransform *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawSphere(arg2,(btTransform const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btIDebugDraw_drawSphere__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btVector3 *_swig_go_3) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawSphere((btVector3 const &)*arg2,arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btIDebugDraw_drawTriangle__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, float _swig_go_8) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btScalar arg9 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  
  (arg1)->drawTriangle((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9);
  
}


void _wrap_btIDebugDraw_drawTriangle__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, float _swig_go_5) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  (arg1)->drawTriangle((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,arg6);
  
}


void _wrap_btIDebugDraw_drawContactPoint_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, intgo _swig_go_4, btVector3 *_swig_go_5) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  int arg5 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawContactPoint((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btIDebugDraw_reportErrorWarning_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, _gostring_ _swig_go_1) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->reportErrorWarning((char const *)arg2);
  
  free(arg2); 
}


void _wrap_btIDebugDraw_draw3dText_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, _gostring_ _swig_go_2) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->draw3dText((btVector3 const &)*arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_btIDebugDraw_setDebugMode_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, intgo _swig_go_1) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  int arg2 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setDebugMode(arg2);
  
}


intgo _wrap_btIDebugDraw_getDebugMode_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  result = (int)((btIDebugDraw const *)arg1)->getDebugMode();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btIDebugDraw_drawAabb_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawAabb((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btIDebugDraw_drawTransform_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btTransform *_swig_go_1, float _swig_go_2) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btTransform *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->drawTransform((btTransform const &)*arg2,arg3);
  
}


void _wrap_btIDebugDraw_drawArc__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, btVector3 *_swig_go_8, bool _swig_go_9, float _swig_go_10) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btVector3 *arg9 = 0 ;
  bool arg10 ;
  btScalar arg11 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  
  (arg1)->drawArc((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,(btVector3 const &)*arg9,arg10,arg11);
  
}


void _wrap_btIDebugDraw_drawArc__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, btVector3 *_swig_go_8, bool _swig_go_9) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btVector3 *arg9 = 0 ;
  bool arg10 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  (arg1)->drawArc((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,(btVector3 const &)*arg9,arg10);
  
}


void _wrap_btIDebugDraw_drawSpherePatch__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9, float _swig_go_10, bool _swig_go_11) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  btScalar arg11 ;
  bool arg12 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  arg12 = (bool)_swig_go_11; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10,arg11,arg12);
  
}


void _wrap_btIDebugDraw_drawSpherePatch__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9, float _swig_go_10) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  btScalar arg11 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10,arg11);
  
}


void _wrap_btIDebugDraw_drawSpherePatch__SWIG_2_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10);
  
}


void _wrap_btIDebugDraw_drawBox__SWIG_0_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawBox((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btIDebugDraw_drawBox__SWIG_1_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawBox((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btIDebugDraw_drawCapsule_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCapsule(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btIDebugDraw_drawCylinder_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCylinder(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btIDebugDraw_drawCone_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCone(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btIDebugDraw_drawPlane_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawPlane((btVector3 const &)*arg2,arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btIDebugDraw_clearLines_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  (arg1)->clearLines();
  
}


void _wrap_btIDebugDraw_flushLines_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  
  (arg1)->flushLines();
  
}


void _wrap_delete_btConvexCast_bt_e001408c92acdfd7(btConvexCast *_swig_go_0) {
  btConvexCast *arg1 = (btConvexCast *) 0 ;
  
  arg1 = *(btConvexCast **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btConvexCast_calcTimeOfImpact_bt_e001408c92acdfd7(btConvexCast *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4, btConvexCast::CastResult *_swig_go_5) {
  btConvexCast *arg1 = (btConvexCast *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  btConvexCast::CastResult *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexCast **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btConvexCast::CastResult **)&_swig_go_5; 
  
  result = (bool)(arg1)->calcTimeOfImpact((btTransform const &)*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btTransform const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


btSubsimplexConvexCast *_wrap_new_btSubsimplexConvexCast_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btConvexShape *_swig_go_1, btVoronoiSimplexSolver *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btVoronoiSimplexSolver *arg3 = (btVoronoiSimplexSolver *) 0 ;
  btSubsimplexConvexCast *result = 0 ;
  btSubsimplexConvexCast *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btVoronoiSimplexSolver **)&_swig_go_2; 
  
  result = (btSubsimplexConvexCast *)new btSubsimplexConvexCast((btConvexShape const *)arg1,(btConvexShape const *)arg2,arg3);
  *(btSubsimplexConvexCast **)&_swig_go_result = (btSubsimplexConvexCast *)result; 
  return _swig_go_result;
}


bool _wrap_btSubsimplexConvexCast_calcTimeOfImpact_bt_e001408c92acdfd7(btSubsimplexConvexCast *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4, btConvexCast::CastResult *_swig_go_5) {
  btSubsimplexConvexCast *arg1 = (btSubsimplexConvexCast *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  btConvexCast::CastResult *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSubsimplexConvexCast **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btConvexCast::CastResult **)&_swig_go_5; 
  
  result = (bool)(arg1)->calcTimeOfImpact((btTransform const &)*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btTransform const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSubsimplexConvexCast_bt_e001408c92acdfd7(btSubsimplexConvexCast *_swig_go_0) {
  btSubsimplexConvexCast *arg1 = (btSubsimplexConvexCast *) 0 ;
  
  arg1 = *(btSubsimplexConvexCast **)&_swig_go_0; 
  
  delete arg1;
  
}


btGjkConvexCast *_wrap_new_btGjkConvexCast_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btConvexShape *_swig_go_1, btVoronoiSimplexSolver *_swig_go_2) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btVoronoiSimplexSolver *arg3 = (btVoronoiSimplexSolver *) 0 ;
  btGjkConvexCast *result = 0 ;
  btGjkConvexCast *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btVoronoiSimplexSolver **)&_swig_go_2; 
  
  result = (btGjkConvexCast *)new btGjkConvexCast((btConvexShape const *)arg1,(btConvexShape const *)arg2,arg3);
  *(btGjkConvexCast **)&_swig_go_result = (btGjkConvexCast *)result; 
  return _swig_go_result;
}


bool _wrap_btGjkConvexCast_calcTimeOfImpact_bt_e001408c92acdfd7(btGjkConvexCast *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4, btConvexCast::CastResult *_swig_go_5) {
  btGjkConvexCast *arg1 = (btGjkConvexCast *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  btConvexCast::CastResult *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGjkConvexCast **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btConvexCast::CastResult **)&_swig_go_5; 
  
  result = (bool)(arg1)->calcTimeOfImpact((btTransform const &)*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btTransform const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btGjkConvexCast_bt_e001408c92acdfd7(btGjkConvexCast *_swig_go_0) {
  btGjkConvexCast *arg1 = (btGjkConvexCast *) 0 ;
  
  arg1 = *(btGjkConvexCast **)&_swig_go_0; 
  
  delete arg1;
  
}


btContinuousConvexCollision *_wrap_new_btContinuousConvexCollision__SWIG_0_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btConvexShape *_swig_go_1, btVoronoiSimplexSolver *_swig_go_2, btConvexPenetrationDepthSolver *_swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btVoronoiSimplexSolver *arg3 = (btVoronoiSimplexSolver *) 0 ;
  btConvexPenetrationDepthSolver *arg4 = (btConvexPenetrationDepthSolver *) 0 ;
  btContinuousConvexCollision *result = 0 ;
  btContinuousConvexCollision *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btVoronoiSimplexSolver **)&_swig_go_2; 
  arg4 = *(btConvexPenetrationDepthSolver **)&_swig_go_3; 
  
  result = (btContinuousConvexCollision *)new btContinuousConvexCollision((btConvexShape const *)arg1,(btConvexShape const *)arg2,arg3,arg4);
  *(btContinuousConvexCollision **)&_swig_go_result = (btContinuousConvexCollision *)result; 
  return _swig_go_result;
}


btContinuousConvexCollision *_wrap_new_btContinuousConvexCollision__SWIG_1_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btStaticPlaneShape *_swig_go_1) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btStaticPlaneShape *arg2 = (btStaticPlaneShape *) 0 ;
  btContinuousConvexCollision *result = 0 ;
  btContinuousConvexCollision *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btStaticPlaneShape **)&_swig_go_1; 
  
  result = (btContinuousConvexCollision *)new btContinuousConvexCollision((btConvexShape const *)arg1,(btStaticPlaneShape const *)arg2);
  *(btContinuousConvexCollision **)&_swig_go_result = (btContinuousConvexCollision *)result; 
  return _swig_go_result;
}


bool _wrap_btContinuousConvexCollision_calcTimeOfImpact_bt_e001408c92acdfd7(btContinuousConvexCollision *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4, btConvexCast::CastResult *_swig_go_5) {
  btContinuousConvexCollision *arg1 = (btContinuousConvexCollision *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  btConvexCast::CastResult *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btContinuousConvexCollision **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btConvexCast::CastResult **)&_swig_go_5; 
  
  result = (bool)(arg1)->calcTimeOfImpact((btTransform const &)*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btTransform const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btContinuousConvexCollision_bt_e001408c92acdfd7(btContinuousConvexCollision *_swig_go_0) {
  btContinuousConvexCollision *arg1 = (btContinuousConvexCollision *) 0 ;
  
  arg1 = *(btContinuousConvexCollision **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSingleRayCallback_m_rayFromWorld_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayFromWorld = *arg2;
  
}


btVector3 *_wrap_btSingleRayCallback_m_rayFromWorld_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_rayFromWorld);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_rayToWorld_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayToWorld = *arg2;
  
}


btVector3 *_wrap_btSingleRayCallback_m_rayToWorld_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_rayToWorld);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_rayFromTrans_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btTransform *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayFromTrans = *arg2;
  
}


btTransform *_wrap_btSingleRayCallback_m_rayFromTrans_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_rayFromTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_rayToTrans_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btTransform *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rayToTrans = *arg2;
  
}


btTransform *_wrap_btSingleRayCallback_m_rayToTrans_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_rayToTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_hitNormal_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_hitNormal = *arg2;
  
}


btVector3 *_wrap_btSingleRayCallback_m_hitNormal_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_hitNormal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_world_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btCollisionWorld *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_world = (btCollisionWorld const *)arg2;
  
}


btCollisionWorld *_wrap_btSingleRayCallback_m_world_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btCollisionWorld *result = 0 ;
  btCollisionWorld *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld *) ((arg1)->m_world);
  *(btCollisionWorld **)&_swig_go_result = (btCollisionWorld *)result; 
  return _swig_go_result;
}


void _wrap_btSingleRayCallback_m_resultCallback_set_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btCollisionWorld::RayResultCallback *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btCollisionWorld::RayResultCallback *arg2 = 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld::RayResultCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_resultCallback = *arg2;
  
}


btCollisionWorld::RayResultCallback *_wrap_btSingleRayCallback_m_resultCallback_get_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btCollisionWorld::RayResultCallback *result = 0 ;
  btCollisionWorld::RayResultCallback *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld::RayResultCallback *) &(btCollisionWorld::RayResultCallback &) ((arg1)->m_resultCallback);
  *(btCollisionWorld::RayResultCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


btSingleRayCallback *_wrap_new_btSingleRayCallback_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btCollisionWorld *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btCollisionWorld *arg3 = (btCollisionWorld *) 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  btSingleRayCallback *result = 0 ;
  btSingleRayCallback *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btCollisionWorld **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  result = (btSingleRayCallback *)new btSingleRayCallback((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btCollisionWorld const *)arg3,*arg4);
  *(btSingleRayCallback **)&_swig_go_result = (btSingleRayCallback *)result; 
  return _swig_go_result;
}


bool _wrap_btSingleRayCallback_process_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (bool)(arg1)->process((btBroadphaseProxy const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSingleRayCallback_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtSingleRayCallback_M_rayDirectionInverse_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  if (swig_b0) (swig_b0)->m_rayDirectionInverse = *arg2;
  
}


btVector3 *_wrap_GetbtSingleRayCallback_M_rayDirectionInverse_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (btVector3 *)& ((swig_b0)->m_rayDirectionInverse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_SetbtSingleRayCallback_M_signs_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, intgo *_swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  ;
  
}


intgo *_wrap_GetbtSingleRayCallback_M_signs_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (unsigned int *)(unsigned int *) ((swig_b0)->m_signs);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtSingleRayCallback_M_lambda_max_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0, float _swig_go_1) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  if (swig_b0) (swig_b0)->m_lambda_max = arg2;
  
}


float _wrap_GetbtSingleRayCallback_M_lambda_max_bt_e001408c92acdfd7(btSingleRayCallback *_swig_go_0) {
  btSingleRayCallback *arg1 = (btSingleRayCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSingleRayCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (btScalar) ((swig_b0)->m_lambda_max);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_convexFromTrans_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btTransform *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexFromTrans = *arg2;
  
}


btTransform *_wrap_btSingleSweepCallback_m_convexFromTrans_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_convexFromTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_convexToTrans_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btTransform *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_convexToTrans = *arg2;
  
}


btTransform *_wrap_btSingleSweepCallback_m_convexToTrans_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_convexToTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_hitNormal_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_hitNormal = *arg2;
  
}


btVector3 *_wrap_btSingleSweepCallback_m_hitNormal_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_hitNormal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_world_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btCollisionWorld *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_world = (btCollisionWorld const *)arg2;
  
}


btCollisionWorld *_wrap_btSingleSweepCallback_m_world_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btCollisionWorld *result = 0 ;
  btCollisionWorld *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld *) ((arg1)->m_world);
  *(btCollisionWorld **)&_swig_go_result = (btCollisionWorld *)result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_resultCallback_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btCollisionWorld::ConvexResultCallback *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btCollisionWorld::ConvexResultCallback *arg2 = 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_resultCallback = *arg2;
  
}


btCollisionWorld::ConvexResultCallback *_wrap_btSingleSweepCallback_m_resultCallback_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btCollisionWorld::ConvexResultCallback *result = 0 ;
  btCollisionWorld::ConvexResultCallback *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld::ConvexResultCallback *) &(btCollisionWorld::ConvexResultCallback &) ((arg1)->m_resultCallback);
  *(btCollisionWorld::ConvexResultCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_allowedCcdPenetration_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, float _swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_allowedCcdPenetration = arg2;
  
}


float _wrap_btSingleSweepCallback_m_allowedCcdPenetration_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_allowedCcdPenetration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSingleSweepCallback_m_castShape_set_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btConvexShape *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_castShape = (btConvexShape const *)arg2;
  
}


btConvexShape *_wrap_btSingleSweepCallback_m_castShape_get_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btConvexShape *result = 0 ;
  btConvexShape *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  result = (btConvexShape *) ((arg1)->m_castShape);
  *(btConvexShape **)&_swig_go_result = (btConvexShape *)result; 
  return _swig_go_result;
}


btSingleSweepCallback *_wrap_new_btSingleSweepCallback_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionWorld *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionWorld *arg4 = (btCollisionWorld *) 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  btSingleSweepCallback *result = 0 ;
  btSingleSweepCallback *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionWorld **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  result = (btSingleSweepCallback *)new btSingleSweepCallback((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,(btCollisionWorld const *)arg4,*arg5,arg6);
  *(btSingleSweepCallback **)&_swig_go_result = (btSingleSweepCallback *)result; 
  return _swig_go_result;
}


bool _wrap_btSingleSweepCallback_process_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (bool)(arg1)->process((btBroadphaseProxy const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSingleSweepCallback_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtSingleSweepCallback_M_rayDirectionInverse_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, btVector3 *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  if (swig_b0) (swig_b0)->m_rayDirectionInverse = *arg2;
  
}


btVector3 *_wrap_GetbtSingleSweepCallback_M_rayDirectionInverse_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (btVector3 *)& ((swig_b0)->m_rayDirectionInverse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_SetbtSingleSweepCallback_M_signs_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, intgo *_swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  ;
  
}


intgo *_wrap_GetbtSingleSweepCallback_M_signs_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (unsigned int *)(unsigned int *) ((swig_b0)->m_signs);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtSingleSweepCallback_M_lambda_max_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0, float _swig_go_1) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  if (swig_b0) (swig_b0)->m_lambda_max = arg2;
  
}


float _wrap_GetbtSingleSweepCallback_M_lambda_max_bt_e001408c92acdfd7(btSingleSweepCallback *_swig_go_0) {
  btSingleSweepCallback *arg1 = (btSingleSweepCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSingleSweepCallback **)&_swig_go_0; 
  
  btBroadphaseRayCallback *swig_b0 = (btBroadphaseRayCallback *)arg1;
  result = (btScalar) ((swig_b0)->m_lambda_max);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btBridgedManifoldResult_m_resultCallback_set_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, btCollisionWorld::ContactResultCallback *_swig_go_1) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionWorld::ContactResultCallback *arg2 = 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_resultCallback = *arg2;
  
}


btCollisionWorld::ContactResultCallback *_wrap_btBridgedManifoldResult_m_resultCallback_get_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionWorld::ContactResultCallback *result = 0 ;
  btCollisionWorld::ContactResultCallback *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  result = (btCollisionWorld::ContactResultCallback *) &(btCollisionWorld::ContactResultCallback &) ((arg1)->m_resultCallback);
  *(btCollisionWorld::ContactResultCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


btBridgedManifoldResult *_wrap_new_btBridgedManifoldResult_bt_e001408c92acdfd7(btCollisionObjectWrapper *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionWorld::ContactResultCallback *_swig_go_2) {
  btCollisionObjectWrapper *arg1 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::ContactResultCallback *arg3 = 0 ;
  btBridgedManifoldResult *result = 0 ;
  btBridgedManifoldResult *_swig_go_result;
  
  arg1 = *(btCollisionObjectWrapper **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_2; 
  
  result = (btBridgedManifoldResult *)new btBridgedManifoldResult((btCollisionObjectWrapper const *)arg1,(btCollisionObjectWrapper const *)arg2,*arg3);
  *(btBridgedManifoldResult **)&_swig_go_result = (btBridgedManifoldResult *)result; 
  return _swig_go_result;
}


void _wrap_btBridgedManifoldResult_addContactPoint_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->addContactPoint((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4);
  
}


void _wrap_delete_btBridgedManifoldResult_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBridgedManifoldResult_setPersistentManifold_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->setPersistentManifold(arg2);
  
}


btPersistentManifold *_wrap_btBridgedManifoldResult_getPersistentManifold__SWIG_0_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btPersistentManifold *)((btManifoldResult const *)swig_b0)->getPersistentManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btPersistentManifold *_wrap_btBridgedManifoldResult_getPersistentManifold__SWIG_1_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btPersistentManifold *)(swig_b0)->getPersistentManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


void _wrap_btBridgedManifoldResult_setShapeIdentifiersA_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->setShapeIdentifiersA(arg2,arg3);
  
}


void _wrap_btBridgedManifoldResult_setShapeIdentifiersB_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->setShapeIdentifiersB(arg2,arg3);
  
}


void _wrap_btBridgedManifoldResult_refreshContactPoints_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->refreshContactPoints();
  
}


btCollisionObjectWrapper *_wrap_btBridgedManifoldResult_getBody0Wrap_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObjectWrapper *result = 0 ;
  btCollisionObjectWrapper *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btCollisionObjectWrapper *)((btManifoldResult const *)swig_b0)->getBody0Wrap();
  *(btCollisionObjectWrapper **)&_swig_go_result = (btCollisionObjectWrapper *)result; 
  return _swig_go_result;
}


btCollisionObjectWrapper *_wrap_btBridgedManifoldResult_getBody1Wrap_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObjectWrapper *result = 0 ;
  btCollisionObjectWrapper *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btCollisionObjectWrapper *)((btManifoldResult const *)swig_b0)->getBody1Wrap();
  *(btCollisionObjectWrapper **)&_swig_go_result = (btCollisionObjectWrapper *)result; 
  return _swig_go_result;
}


void _wrap_btBridgedManifoldResult_setBody0Wrap_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, btCollisionObjectWrapper *_swig_go_1) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->setBody0Wrap((btCollisionObjectWrapper const *)arg2);
  
}


void _wrap_btBridgedManifoldResult_setBody1Wrap_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, btCollisionObjectWrapper *_swig_go_1) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  (swig_b0)->setBody1Wrap((btCollisionObjectWrapper const *)arg2);
  
}


btCollisionObject *_wrap_btBridgedManifoldResult_getBody0Internal_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btCollisionObject *)((btManifoldResult const *)swig_b0)->getBody0Internal();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


btCollisionObject *_wrap_btBridgedManifoldResult_getBody1Internal_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btCollisionObject *)((btManifoldResult const *)swig_b0)->getBody1Internal();
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_SetbtBridgedManifoldResult_M_closestPointDistanceThreshold_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0, float _swig_go_1) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  if (swig_b0) (swig_b0)->m_closestPointDistanceThreshold = arg2;
  
}


float _wrap_GetbtBridgedManifoldResult_M_closestPointDistanceThreshold_bt_e001408c92acdfd7(btBridgedManifoldResult *_swig_go_0) {
  btBridgedManifoldResult *arg1 = (btBridgedManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBridgedManifoldResult **)&_swig_go_0; 
  
  btManifoldResult *swig_b0 = (btManifoldResult *)arg1;
  result = (btScalar) ((swig_b0)->m_closestPointDistanceThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedRestitution_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedRestitution((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedRollingFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedRollingFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedSpinningFriction_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedSpinningFriction((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedContactDamping_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedContactDamping((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btBridgedManifoldResult_calculateCombinedContactStiffness_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionObject *_swig_go_1) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  result = (btScalar)btManifoldResult::calculateCombinedContactStiffness((btCollisionObject const *)arg1,(btCollisionObject const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSingleContactCallback_m_collisionObject_set_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0, btCollisionObject *_swig_go_1) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionObject = arg2;
  
}


btCollisionObject *_wrap_btSingleContactCallback_m_collisionObject_get_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  
  result = (btCollisionObject *) ((arg1)->m_collisionObject);
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_btSingleContactCallback_m_world_set_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0, btCollisionWorld *_swig_go_1) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_world = arg2;
  
}


btCollisionWorld *_wrap_btSingleContactCallback_m_world_get_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionWorld *result = 0 ;
  btCollisionWorld *_swig_go_result;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld *) ((arg1)->m_world);
  *(btCollisionWorld **)&_swig_go_result = (btCollisionWorld *)result; 
  return _swig_go_result;
}


void _wrap_btSingleContactCallback_m_resultCallback_set_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0, btCollisionWorld::ContactResultCallback *_swig_go_1) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionWorld::ContactResultCallback *arg2 = 0 ;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_resultCallback = *arg2;
  
}


btCollisionWorld::ContactResultCallback *_wrap_btSingleContactCallback_m_resultCallback_get_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btCollisionWorld::ContactResultCallback *result = 0 ;
  btCollisionWorld::ContactResultCallback *_swig_go_result;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  
  result = (btCollisionWorld::ContactResultCallback *) &(btCollisionWorld::ContactResultCallback &) ((arg1)->m_resultCallback);
  *(btCollisionWorld::ContactResultCallback **)&_swig_go_result = result; 
  return _swig_go_result;
}


btSingleContactCallback *_wrap_new_btSingleContactCallback_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btCollisionWorld *_swig_go_1, btCollisionWorld::ContactResultCallback *_swig_go_2) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  btCollisionWorld::ContactResultCallback *arg3 = 0 ;
  btSingleContactCallback *result = 0 ;
  btSingleContactCallback *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  arg3 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_2; 
  
  result = (btSingleContactCallback *)new btSingleContactCallback(arg1,arg2,*arg3);
  *(btSingleContactCallback **)&_swig_go_result = (btSingleContactCallback *)result; 
  return _swig_go_result;
}


bool _wrap_btSingleContactCallback_process_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (bool)(arg1)->process((btBroadphaseProxy const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSingleContactCallback_bt_e001408c92acdfd7(btSingleContactCallback *_swig_go_0) {
  btSingleContactCallback *arg1 = (btSingleContactCallback *) 0 ;
  
  arg1 = *(btSingleContactCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


DebugDrawcallback *_wrap_new_DebugDrawcallback_bt_e001408c92acdfd7(btIDebugDraw *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2) {
  btIDebugDraw *arg1 = (btIDebugDraw *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  DebugDrawcallback *result = 0 ;
  DebugDrawcallback *_swig_go_result;
  
  arg1 = *(btIDebugDraw **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (DebugDrawcallback *)new DebugDrawcallback(arg1,(btTransform const &)*arg2,(btVector3 const &)*arg3);
  *(DebugDrawcallback **)&_swig_go_result = (DebugDrawcallback *)result; 
  return _swig_go_result;
}


void _wrap_DebugDrawcallback_internalProcessTriangleIndex_bt_e001408c92acdfd7(DebugDrawcallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  DebugDrawcallback *arg1 = (DebugDrawcallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(DebugDrawcallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->internalProcessTriangleIndex(arg2,arg3,arg4);
  
}


void _wrap_DebugDrawcallback_processTriangle_bt_e001408c92acdfd7(DebugDrawcallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  DebugDrawcallback *arg1 = (DebugDrawcallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(DebugDrawcallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


void _wrap_delete_DebugDrawcallback_bt_e001408c92acdfd7(DebugDrawcallback *_swig_go_0) {
  DebugDrawcallback *arg1 = (DebugDrawcallback *) 0 ;
  
  arg1 = *(DebugDrawcallback **)&_swig_go_0; 
  
  delete arg1;
  
}


btInternalTriangleIndexCallback *_wrap_DebugDrawcallback_SwigGetBtInternalTriangleIndexCallback_bt_e001408c92acdfd7(DebugDrawcallback *_swig_go_0) {
  DebugDrawcallback *arg1 = (DebugDrawcallback *) 0 ;
  btInternalTriangleIndexCallback *result = 0 ;
  btInternalTriangleIndexCallback *_swig_go_result;
  
  arg1 = *(DebugDrawcallback **)&_swig_go_0; 
  
  result = (btInternalTriangleIndexCallback*)arg1;
  *(btInternalTriangleIndexCallback **)&_swig_go_result = (btInternalTriangleIndexCallback *)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_RANDMIZE_ORDER_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_RANDMIZE_ORDER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_FRICTION_SEPARATE_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_FRICTION_SEPARATE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_USE_WARMSTARTING_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_USE_WARMSTARTING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_USE_2_FRICTION_DIRECTIONS_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_USE_2_FRICTION_DIRECTIONS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_ENABLE_FRICTION_DIRECTION_CACHING_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_ENABLE_FRICTION_DIRECTION_CACHING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_CACHE_FRIENDLY_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_CACHE_FRIENDLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_SIMD_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_SIMD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_DISABLE_IMPLICIT_CONE_FRICTION_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_DISABLE_IMPLICIT_CONE_FRICTION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SOLVER_USE_ARTICULATED_WARMSTARTING_bt_e001408c92acdfd7() {
  btSolverMode result;
  intgo _swig_go_result;
  
  
  result = SOLVER_USE_ARTICULATED_WARMSTARTING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_tau_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_tau = arg2;
  
}


float _wrap_btContactSolverInfoData_m_tau_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_tau);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_damping_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


float _wrap_btContactSolverInfoData_m_damping_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_friction_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


float _wrap_btContactSolverInfoData_m_friction_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_timeStep_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_timeStep = arg2;
  
}


float _wrap_btContactSolverInfoData_m_timeStep_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_timeStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_restitution_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


float _wrap_btContactSolverInfoData_m_restitution_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_numIterations_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numIterations = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_numIterations_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_maxErrorReduction_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxErrorReduction = arg2;
  
}


float _wrap_btContactSolverInfoData_m_maxErrorReduction_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_sor_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_sor = arg2;
  
}


float _wrap_btContactSolverInfoData_m_sor_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_sor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_erp_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp = arg2;
  
}


float _wrap_btContactSolverInfoData_m_erp_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_erp2_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp2 = arg2;
  
}


float _wrap_btContactSolverInfoData_m_erp2_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_erp2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_deformable_erp_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_deformable_erp = arg2;
  
}


float _wrap_btContactSolverInfoData_m_deformable_erp_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_deformable_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_deformable_cfm_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_deformable_cfm = arg2;
  
}


float _wrap_btContactSolverInfoData_m_deformable_cfm_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_deformable_cfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_deformable_maxErrorReduction_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_deformable_maxErrorReduction = arg2;
  
}


float _wrap_btContactSolverInfoData_m_deformable_maxErrorReduction_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_deformable_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_globalCfm_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_globalCfm = arg2;
  
}


float _wrap_btContactSolverInfoData_m_globalCfm_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_globalCfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_frictionERP_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_frictionERP = arg2;
  
}


float _wrap_btContactSolverInfoData_m_frictionERP_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_frictionERP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_frictionCFM_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_frictionCFM = arg2;
  
}


float _wrap_btContactSolverInfoData_m_frictionCFM_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_frictionCFM);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_splitImpulse_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulse = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_splitImpulse_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_splitImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulsePenetrationThreshold = arg2;
  
}


float _wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_splitImpulsePenetrationThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_splitImpulseTurnErp_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulseTurnErp = arg2;
  
}


float _wrap_btContactSolverInfoData_m_splitImpulseTurnErp_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_splitImpulseTurnErp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_linearSlop_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearSlop = arg2;
  
}


float _wrap_btContactSolverInfoData_m_linearSlop_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_linearSlop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_warmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_warmstartingFactor = arg2;
  
}


float _wrap_btContactSolverInfoData_m_warmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_warmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_articulatedWarmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_articulatedWarmstartingFactor = arg2;
  
}


float _wrap_btContactSolverInfoData_m_articulatedWarmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_articulatedWarmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_solverMode_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_solverMode = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_solverMode_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_solverMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_restingContactRestitutionThreshold = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_restingContactRestitutionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_minimumSolverBatchSize_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_minimumSolverBatchSize = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_minimumSolverBatchSize_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_minimumSolverBatchSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_maxGyroscopicForce_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxGyroscopicForce = arg2;
  
}


float _wrap_btContactSolverInfoData_m_maxGyroscopicForce_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxGyroscopicForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_singleAxisRollingFrictionThreshold = arg2;
  
}


float _wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_singleAxisRollingFrictionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_leastSquaresResidualThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_leastSquaresResidualThreshold = arg2;
  
}


float _wrap_btContactSolverInfoData_m_leastSquaresResidualThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_leastSquaresResidualThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_restitutionVelocityThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitutionVelocityThreshold = arg2;
  
}


float _wrap_btContactSolverInfoData_m_restitutionVelocityThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_restitutionVelocityThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_jointFeedbackInWorldSpace_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, bool _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  bool arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_jointFeedbackInWorldSpace = arg2;
  
}


bool _wrap_btContactSolverInfoData_m_jointFeedbackInWorldSpace_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_jointFeedbackInWorldSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_jointFeedbackInJointFrame_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, bool _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  bool arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_jointFeedbackInJointFrame = arg2;
  
}


bool _wrap_btContactSolverInfoData_m_jointFeedbackInJointFrame_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_jointFeedbackInJointFrame);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_reportSolverAnalytics_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_reportSolverAnalytics = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_reportSolverAnalytics_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_reportSolverAnalytics);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoData_m_numNonContactInnerIterations_set_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numNonContactInnerIterations = arg2;
  
}


intgo _wrap_btContactSolverInfoData_m_numNonContactInnerIterations_get_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numNonContactInnerIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


btContactSolverInfoData *_wrap_new_btContactSolverInfoData_bt_e001408c92acdfd7() {
  btContactSolverInfoData *result = 0 ;
  btContactSolverInfoData *_swig_go_result;
  
  
  result = (btContactSolverInfoData *)new btContactSolverInfoData();
  *(btContactSolverInfoData **)&_swig_go_result = (btContactSolverInfoData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btContactSolverInfoData_bt_e001408c92acdfd7(btContactSolverInfoData *_swig_go_0) {
  btContactSolverInfoData *arg1 = (btContactSolverInfoData *) 0 ;
  
  arg1 = *(btContactSolverInfoData **)&_swig_go_0; 
  
  delete arg1;
  
}


btContactSolverInfo *_wrap_new_btContactSolverInfo_bt_e001408c92acdfd7() {
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  
  result = (btContactSolverInfo *)new btContactSolverInfo();
  *(btContactSolverInfo **)&_swig_go_result = (btContactSolverInfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_btContactSolverInfo_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtContactSolverInfo_M_tau_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_tau = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_tau_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_tau);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_damping_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_damping = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_damping_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_friction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_friction = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_friction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_timeStep_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_timeStep = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_timeStep_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_timeStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_restitution_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_restitution = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_restitution_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_numIterations_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_numIterations = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_numIterations_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_numIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_maxErrorReduction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_maxErrorReduction = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_maxErrorReduction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_sor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_sor = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_sor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_sor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_erp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_erp = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_erp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_erp2_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_erp2 = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_erp2_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_erp2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_deformable_erp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_deformable_erp = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_deformable_erp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_deformable_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_deformable_cfm_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_deformable_cfm = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_deformable_cfm_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_deformable_cfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_deformable_maxErrorReduction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_deformable_maxErrorReduction = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_deformable_maxErrorReduction_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_deformable_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_globalCfm_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_globalCfm = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_globalCfm_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_globalCfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_frictionERP_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_frictionERP = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_frictionERP_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_frictionERP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_frictionCFM_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_frictionCFM = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_frictionCFM_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_frictionCFM);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_splitImpulse_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_splitImpulse = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_splitImpulse_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_splitImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_splitImpulsePenetrationThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_splitImpulsePenetrationThreshold = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_splitImpulsePenetrationThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_splitImpulsePenetrationThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_splitImpulseTurnErp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_splitImpulseTurnErp = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_splitImpulseTurnErp_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_splitImpulseTurnErp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_linearSlop_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_linearSlop = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_linearSlop_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_linearSlop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_warmstartingFactor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_warmstartingFactor = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_warmstartingFactor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_warmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_articulatedWarmstartingFactor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_articulatedWarmstartingFactor = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_articulatedWarmstartingFactor_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_articulatedWarmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_solverMode_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_solverMode = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_solverMode_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_solverMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_restingContactRestitutionThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_restingContactRestitutionThreshold = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_restingContactRestitutionThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_restingContactRestitutionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_minimumSolverBatchSize_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_minimumSolverBatchSize = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_minimumSolverBatchSize_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_minimumSolverBatchSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_maxGyroscopicForce_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_maxGyroscopicForce = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_maxGyroscopicForce_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_maxGyroscopicForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_singleAxisRollingFrictionThreshold = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_singleAxisRollingFrictionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_leastSquaresResidualThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_leastSquaresResidualThreshold = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_leastSquaresResidualThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_leastSquaresResidualThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_restitutionVelocityThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, float _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_restitutionVelocityThreshold = arg2;
  
}


float _wrap_GetbtContactSolverInfo_M_restitutionVelocityThreshold_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (btScalar) ((swig_b0)->m_restitutionVelocityThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_jointFeedbackInWorldSpace_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, bool _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_jointFeedbackInWorldSpace = arg2;
  
}


bool _wrap_GetbtContactSolverInfo_M_jointFeedbackInWorldSpace_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (bool) ((swig_b0)->m_jointFeedbackInWorldSpace);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_jointFeedbackInJointFrame_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, bool _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  bool arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_jointFeedbackInJointFrame = arg2;
  
}


bool _wrap_GetbtContactSolverInfo_M_jointFeedbackInJointFrame_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (bool) ((swig_b0)->m_jointFeedbackInJointFrame);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_reportSolverAnalytics_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_reportSolverAnalytics = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_reportSolverAnalytics_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_reportSolverAnalytics);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtContactSolverInfo_M_numNonContactInnerIterations_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  if (swig_b0) (swig_b0)->m_numNonContactInnerIterations = arg2;
  
}


intgo _wrap_GetbtContactSolverInfo_M_numNonContactInnerIterations_bt_e001408c92acdfd7(btContactSolverInfo *_swig_go_0) {
  btContactSolverInfo *arg1 = (btContactSolverInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfo **)&_swig_go_0; 
  
  btContactSolverInfoData *swig_b0 = (btContactSolverInfoData *)arg1;
  result = (int) ((swig_b0)->m_numNonContactInnerIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_tau_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_tau = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_tau_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_tau);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_damping_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_damping_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_friction_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_friction_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_timeStep_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_timeStep = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_timeStep_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_timeStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_restitution_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_restitution_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxErrorReduction = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_sor_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_sor = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_sor_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_sor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_erp_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_erp_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_erp2_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp2 = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_erp2_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_erp2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_globalCfm_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_globalCfm = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_globalCfm_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_globalCfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulsePenetrationThreshold = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_splitImpulsePenetrationThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulseTurnErp = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_splitImpulseTurnErp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_linearSlop_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearSlop = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_linearSlop_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_linearSlop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_warmstartingFactor = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_warmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_articulatedWarmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_articulatedWarmstartingFactor = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_articulatedWarmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_articulatedWarmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxGyroscopicForce = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_maxGyroscopicForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, double _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_singleAxisRollingFrictionThreshold = arg2;
  
}


double _wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_singleAxisRollingFrictionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_numIterations_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numIterations = arg2;
  
}


intgo _wrap_btContactSolverInfoDoubleData_m_numIterations_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_solverMode_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_solverMode = arg2;
  
}


intgo _wrap_btContactSolverInfoDoubleData_m_solverMode_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_solverMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_restingContactRestitutionThreshold = arg2;
  
}


intgo _wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_restingContactRestitutionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_minimumSolverBatchSize = arg2;
  
}


intgo _wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_minimumSolverBatchSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_splitImpulse_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulse = arg2;
  
}


intgo _wrap_btContactSolverInfoDoubleData_m_splitImpulse_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_splitImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoDoubleData_m_padding_set_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0, _gostring_ _swig_go_1) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_padding, (const char *)arg2, 4-1);
      arg1->m_padding[4-1] = 0;
    } else {
      arg1->m_padding[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btContactSolverInfoDoubleData_m_padding_get_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_padding);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btContactSolverInfoDoubleData *_wrap_new_btContactSolverInfoDoubleData_bt_e001408c92acdfd7() {
  btContactSolverInfoDoubleData *result = 0 ;
  btContactSolverInfoDoubleData *_swig_go_result;
  
  
  result = (btContactSolverInfoDoubleData *)new btContactSolverInfoDoubleData();
  *(btContactSolverInfoDoubleData **)&_swig_go_result = (btContactSolverInfoDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btContactSolverInfoDoubleData_bt_e001408c92acdfd7(btContactSolverInfoDoubleData *_swig_go_0) {
  btContactSolverInfoDoubleData *arg1 = (btContactSolverInfoDoubleData *) 0 ;
  
  arg1 = *(btContactSolverInfoDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btContactSolverInfoFloatData_m_tau_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_tau = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_tau_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_tau);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_damping_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_damping_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_friction_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_friction = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_friction_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_friction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_timeStep_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_timeStep = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_timeStep_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_timeStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_restitution_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_restitution_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_maxErrorReduction_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxErrorReduction = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_maxErrorReduction_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_maxErrorReduction);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_sor_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_sor = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_sor_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_sor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_erp_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_erp_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_erp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_erp2_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_erp2 = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_erp2_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_erp2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_globalCfm_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_globalCfm = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_globalCfm_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_globalCfm);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulsePenetrationThreshold = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_splitImpulsePenetrationThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulseTurnErp = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_splitImpulseTurnErp);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_linearSlop_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_linearSlop = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_linearSlop_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_linearSlop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_warmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_warmstartingFactor = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_warmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_warmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_articulatedWarmstartingFactor_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_articulatedWarmstartingFactor = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_articulatedWarmstartingFactor_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_articulatedWarmstartingFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxGyroscopicForce = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_maxGyroscopicForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, float _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_singleAxisRollingFrictionThreshold = arg2;
  
}


float _wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_singleAxisRollingFrictionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_numIterations_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numIterations = arg2;
  
}


intgo _wrap_btContactSolverInfoFloatData_m_numIterations_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numIterations);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_solverMode_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_solverMode = arg2;
  
}


intgo _wrap_btContactSolverInfoFloatData_m_solverMode_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_solverMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_restingContactRestitutionThreshold = arg2;
  
}


intgo _wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_restingContactRestitutionThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_minimumSolverBatchSize = arg2;
  
}


intgo _wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_minimumSolverBatchSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btContactSolverInfoFloatData_m_splitImpulse_set_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0, intgo _swig_go_1) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int arg2 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_splitImpulse = arg2;
  
}


intgo _wrap_btContactSolverInfoFloatData_m_splitImpulse_get_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_splitImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


btContactSolverInfoFloatData *_wrap_new_btContactSolverInfoFloatData_bt_e001408c92acdfd7() {
  btContactSolverInfoFloatData *result = 0 ;
  btContactSolverInfoFloatData *_swig_go_result;
  
  
  result = (btContactSolverInfoFloatData *)new btContactSolverInfoFloatData();
  *(btContactSolverInfoFloatData **)&_swig_go_result = (btContactSolverInfoFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btContactSolverInfoFloatData_bt_e001408c92acdfd7(btContactSolverInfoFloatData *_swig_go_0) {
  btContactSolverInfoFloatData *arg1 = (btContactSolverInfoFloatData *) 0 ;
  
  arg1 = *(btContactSolverInfoFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_SIMPLE_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_SIMPLE_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_DISCRETE_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_DISCRETE_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONTINUOUS_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_CONTINUOUS_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SOFT_RIGID_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_SOFT_RIGID_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_GPU_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_GPU_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_SOFT_MULTIBODY_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_SOFT_MULTIBODY_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_DEFORMABLE_MULTIBODY_DYNAMICS_WORLD_bt_e001408c92acdfd7() {
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  
  result = BT_DEFORMABLE_MULTIBODY_DYNAMICS_WORLD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btDynamicsWorld_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btDynamicsWorld_stepSimulation__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, float _swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int arg3 ;
  btScalar arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  result = (int)(arg1)->stepSimulation(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDynamicsWorld_stepSimulation__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, float _swig_go_1, intgo _swig_go_2) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->stepSimulation(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDynamicsWorld_stepSimulation__SWIG_2_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, float _swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (int)(arg1)->stepSimulation(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_debugDrawWorld_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->debugDrawWorld();
  
}


void _wrap_btDynamicsWorld_addConstraint__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1, bool _swig_go_2) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  bool arg3 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->addConstraint(arg2,arg3);
  
}


void _wrap_btDynamicsWorld_addConstraint__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->addConstraint(arg2);
  
}


void _wrap_btDynamicsWorld_removeConstraint_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->removeConstraint(arg2);
  
}


void _wrap_btDynamicsWorld_addAction_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addAction(arg2);
  
}


void _wrap_btDynamicsWorld_removeAction_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeAction(arg2);
  
}


void _wrap_btDynamicsWorld_setGravity_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btVector3 *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setGravity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btDynamicsWorld_getGravity_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = ((btDynamicsWorld const *)arg1)->getGravity();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_synchronizeMotionStates_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->synchronizeMotionStates();
  
}


void _wrap_btDynamicsWorld_addRigidBody__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  (arg1)->addRigidBody(arg2);
  
}


void _wrap_btDynamicsWorld_addRigidBody__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->addRigidBody(arg2,arg3,arg4);
  
}


void _wrap_btDynamicsWorld_removeRigidBody_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  (arg1)->removeRigidBody(arg2);
  
}


void _wrap_btDynamicsWorld_setConstraintSolver_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btConstraintSolver *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btConstraintSolver *arg2 = (btConstraintSolver *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConstraintSolver **)&_swig_go_1; 
  
  (arg1)->setConstraintSolver(arg2);
  
}


btConstraintSolver *_wrap_btDynamicsWorld_getConstraintSolver_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btConstraintSolver *result = 0 ;
  btConstraintSolver *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (btConstraintSolver *)(arg1)->getConstraintSolver();
  *(btConstraintSolver **)&_swig_go_result = (btConstraintSolver *)result; 
  return _swig_go_result;
}


intgo _wrap_btDynamicsWorld_getNumConstraints_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (int)((btDynamicsWorld const *)arg1)->getNumConstraints();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTypedConstraint *_wrap_btDynamicsWorld_getConstraint__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, intgo _swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  int arg2 ;
  btTypedConstraint *result = 0 ;
  btTypedConstraint *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btTypedConstraint *)(arg1)->getConstraint(arg2);
  *(btTypedConstraint **)&_swig_go_result = (btTypedConstraint *)result; 
  return _swig_go_result;
}


btTypedConstraint *_wrap_btDynamicsWorld_getConstraint__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, intgo _swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  int arg2 ;
  btTypedConstraint *result = 0 ;
  btTypedConstraint *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btTypedConstraint *)((btDynamicsWorld const *)arg1)->getConstraint(arg2);
  *(btTypedConstraint **)&_swig_go_result = (btTypedConstraint *)result; 
  return _swig_go_result;
}


intgo _wrap_btDynamicsWorld_getWorldType_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (btDynamicsWorldType)((btDynamicsWorld const *)arg1)->getWorldType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_clearForces_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->clearForces();
  
}


void _wrap_btDynamicsWorld_setInternalTickCallback__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, void* _swig_go_1, void *_swig_go_2, bool _swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  void *arg3 = (void *) 0 ;
  bool arg4 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->setInternalTickCallback(arg2,arg3,arg4);
  
}


void _wrap_btDynamicsWorld_setInternalTickCallback__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->setInternalTickCallback(arg2,arg3);
  
}


void _wrap_btDynamicsWorld_setInternalTickCallback__SWIG_2_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, void* _swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  
  (arg1)->setInternalTickCallback(arg2);
  
}


void _wrap_btDynamicsWorld_setWorldUserInfo_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, void *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->setWorldUserInfo(arg2);
  
}


void *_wrap_btDynamicsWorld_getWorldUserInfo_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (void *)((btDynamicsWorld const *)arg1)->getWorldUserInfo();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


btContactSolverInfo *_wrap_btDynamicsWorld_getSolverInfo__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (btContactSolverInfo *) &(arg1)->getSolverInfo();
  *(btContactSolverInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


btContactSolverInfo *_wrap_btDynamicsWorld_getSolverInfo__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  result = (btContactSolverInfo *) &((btDynamicsWorld const *)arg1)->getSolverInfo();
  *(btContactSolverInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_addVehicle_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addVehicle(arg2);
  
}


void _wrap_btDynamicsWorld_removeVehicle_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeVehicle(arg2);
  
}


void _wrap_btDynamicsWorld_addCharacter_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addCharacter(arg2);
  
}


void _wrap_btDynamicsWorld_removeCharacter_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeCharacter(arg2);
  
}


void _wrap_btDynamicsWorld_setBroadphase_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btBroadphaseInterface *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btBroadphaseInterface *arg2 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btBroadphaseInterface **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->setBroadphase(arg2);
  
}


btBroadphaseInterface *_wrap_btDynamicsWorld_getBroadphase__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btBroadphaseInterface *)((btCollisionWorld const *)swig_b0)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btBroadphaseInterface *_wrap_btDynamicsWorld_getBroadphase__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btBroadphaseInterface *)(swig_b0)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btOverlappingPairCache *_wrap_btDynamicsWorld_getPairCache_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btOverlappingPairCache *)(swig_b0)->getPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btDynamicsWorld_getDispatcher__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btDispatcher *)(swig_b0)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btDynamicsWorld_getDispatcher__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btDispatcher *)((btCollisionWorld const *)swig_b0)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_updateSingleAabb_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->updateSingleAabb(arg2);
  
}


void _wrap_btDynamicsWorld_updateAabbs_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->updateAabbs();
  
}


void _wrap_btDynamicsWorld_computeOverlappingPairs_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->computeOverlappingPairs();
  
}


void _wrap_btDynamicsWorld_setDebugDrawer_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btIDebugDraw *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btIDebugDraw *arg2 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btIDebugDraw **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->setDebugDrawer(arg2);
  
}


btIDebugDraw *_wrap_btDynamicsWorld_getDebugDrawer_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btIDebugDraw *result = 0 ;
  btIDebugDraw *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btIDebugDraw *)(swig_b0)->getDebugDrawer();
  *(btIDebugDraw **)&_swig_go_result = (btIDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_debugDrawObject_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btTransform *_swig_go_1, btCollisionShape *_swig_go_2, btVector3 *_swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btTransform *arg2 = 0 ;
  btCollisionShape *arg3 = (btCollisionShape *) 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionShape **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->debugDrawObject((btTransform const &)*arg2,(btCollisionShape const *)arg3,(btVector3 const &)*arg4);
  
}


intgo _wrap_btDynamicsWorld_getNumCollisionObjects_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (int)((btCollisionWorld const *)swig_b0)->getNumCollisionObjects();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_rayTest_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  ((btCollisionWorld const *)swig_b0)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btDynamicsWorld_convexSweepTest__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  ((btCollisionWorld const *)swig_b0)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5,arg6);
  
}


void _wrap_btDynamicsWorld_convexSweepTest__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  ((btCollisionWorld const *)swig_b0)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5);
  
}


void _wrap_btDynamicsWorld_contactTest_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionWorld::ContactResultCallback *_swig_go_2) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg3 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_2; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->contactTest(arg2,*arg3);
  
}


void _wrap_btDynamicsWorld_contactPairTest_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionWorld::ContactResultCallback *_swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg4 = 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_3; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->contactPairTest(arg2,arg3,*arg4);
  
}


void _wrap_btDynamicsWorld_rayTestSingle_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionShape *_swig_go_3, btTransform *_swig_go_4, btCollisionWorld::RayResultCallback *_swig_go_5) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionShape *arg4 = (btCollisionShape *) 0 ;
  btTransform *arg5 = 0 ;
  btCollisionWorld::RayResultCallback *arg6 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btCollisionWorld::RayResultCallback **)&_swig_go_5; 
  
  btCollisionWorld::rayTestSingle((btTransform const &)*arg1,(btTransform const &)*arg2,arg3,(btCollisionShape const *)arg4,(btTransform const &)*arg5,*arg6);
  
}


void _wrap_btDynamicsWorld_rayTestSingleInternal_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  btCollisionWorld::rayTestSingleInternal((btTransform const &)*arg1,(btTransform const &)*arg2,(btCollisionObjectWrapper const *)arg3,*arg4);
  
}


void _wrap_btDynamicsWorld_objectQuerySingle_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObject *_swig_go_3, btCollisionShape *_swig_go_4, btTransform *_swig_go_5, btCollisionWorld::ConvexResultCallback *_swig_go_6, float _swig_go_7) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObject *arg4 = (btCollisionObject *) 0 ;
  btCollisionShape *arg5 = (btCollisionShape *) 0 ;
  btTransform *arg6 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg7 = 0 ;
  btScalar arg8 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObject **)&_swig_go_3; 
  arg5 = *(btCollisionShape **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  
  btCollisionWorld::objectQuerySingle((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,arg4,(btCollisionShape const *)arg5,(btTransform const &)*arg6,*arg7,arg8);
  
}


void _wrap_btDynamicsWorld_objectQuerySingleInternal_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  btCollisionWorld::objectQuerySingleInternal((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,(btCollisionObjectWrapper const *)arg4,*arg5,arg6);
  
}


void _wrap_btDynamicsWorld_addCollisionObject__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->addCollisionObject(arg2,arg3,arg4);
  
}


void _wrap_btDynamicsWorld_addCollisionObject__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->addCollisionObject(arg2,arg3);
  
}


void _wrap_btDynamicsWorld_addCollisionObject__SWIG_2_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->addCollisionObject(arg2);
  
}


void _wrap_btDynamicsWorld_refreshBroadphaseProxy_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->refreshBroadphaseProxy(arg2);
  
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btCollisionObjectArray *) &(swig_b0)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btCollisionObjectArray *) &((btCollisionWorld const *)swig_b0)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_removeCollisionObject_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->removeCollisionObject(arg2);
  
}


void _wrap_btDynamicsWorld_performDiscreteCollisionDetection_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->performDiscreteCollisionDetection();
  
}


btDispatcherInfo *_wrap_btDynamicsWorld_getDispatchInfo__SWIG_0_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btDispatcherInfo *) &(swig_b0)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


btDispatcherInfo *_wrap_btDynamicsWorld_getDispatchInfo__SWIG_1_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (btDispatcherInfo *) &((btCollisionWorld const *)swig_b0)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDynamicsWorld_getForceUpdateAllAabbs_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  result = (bool)((btCollisionWorld const *)swig_b0)->getForceUpdateAllAabbs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorld_setForceUpdateAllAabbs_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, bool _swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->setForceUpdateAllAabbs(arg2);
  
}


void _wrap_btDynamicsWorld_serialize_bt_e001408c92acdfd7(btDynamicsWorld *_swig_go_0, btSerializer *_swig_go_1) {
  btDynamicsWorld *arg1 = (btDynamicsWorld *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btCollisionWorld *swig_b0 = (btCollisionWorld *)arg1;
  (swig_b0)->serialize(arg2);
  
}


void _wrap_btDynamicsWorldDoubleData_m_solverInfo_set_bt_e001408c92acdfd7(btDynamicsWorldDoubleData *_swig_go_0, btContactSolverInfoDoubleData *_swig_go_1) {
  btDynamicsWorldDoubleData *arg1 = (btDynamicsWorldDoubleData *) 0 ;
  btContactSolverInfoDoubleData *arg2 = (btContactSolverInfoDoubleData *) 0 ;
  
  arg1 = *(btDynamicsWorldDoubleData **)&_swig_go_0; 
  arg2 = *(btContactSolverInfoDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_solverInfo = *arg2;
  
}


btContactSolverInfoDoubleData *_wrap_btDynamicsWorldDoubleData_m_solverInfo_get_bt_e001408c92acdfd7(btDynamicsWorldDoubleData *_swig_go_0) {
  btDynamicsWorldDoubleData *arg1 = (btDynamicsWorldDoubleData *) 0 ;
  btContactSolverInfoDoubleData *result = 0 ;
  btContactSolverInfoDoubleData *_swig_go_result;
  
  arg1 = *(btDynamicsWorldDoubleData **)&_swig_go_0; 
  
  result = (btContactSolverInfoDoubleData *)& ((arg1)->m_solverInfo);
  *(btContactSolverInfoDoubleData **)&_swig_go_result = (btContactSolverInfoDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorldDoubleData_m_gravity_set_bt_e001408c92acdfd7(btDynamicsWorldDoubleData *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btDynamicsWorldDoubleData *arg1 = (btDynamicsWorldDoubleData *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btDynamicsWorldDoubleData **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity = *arg2;
  
}


btVector3DoubleData *_wrap_btDynamicsWorldDoubleData_m_gravity_get_bt_e001408c92acdfd7(btDynamicsWorldDoubleData *_swig_go_0) {
  btDynamicsWorldDoubleData *arg1 = (btDynamicsWorldDoubleData *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btDynamicsWorldDoubleData **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_gravity);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


btDynamicsWorldDoubleData *_wrap_new_btDynamicsWorldDoubleData_bt_e001408c92acdfd7() {
  btDynamicsWorldDoubleData *result = 0 ;
  btDynamicsWorldDoubleData *_swig_go_result;
  
  
  result = (btDynamicsWorldDoubleData *)new btDynamicsWorldDoubleData();
  *(btDynamicsWorldDoubleData **)&_swig_go_result = (btDynamicsWorldDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDynamicsWorldDoubleData_bt_e001408c92acdfd7(btDynamicsWorldDoubleData *_swig_go_0) {
  btDynamicsWorldDoubleData *arg1 = (btDynamicsWorldDoubleData *) 0 ;
  
  arg1 = *(btDynamicsWorldDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btDynamicsWorldFloatData_m_solverInfo_set_bt_e001408c92acdfd7(btDynamicsWorldFloatData *_swig_go_0, btContactSolverInfoFloatData *_swig_go_1) {
  btDynamicsWorldFloatData *arg1 = (btDynamicsWorldFloatData *) 0 ;
  btContactSolverInfoFloatData *arg2 = (btContactSolverInfoFloatData *) 0 ;
  
  arg1 = *(btDynamicsWorldFloatData **)&_swig_go_0; 
  arg2 = *(btContactSolverInfoFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_solverInfo = *arg2;
  
}


btContactSolverInfoFloatData *_wrap_btDynamicsWorldFloatData_m_solverInfo_get_bt_e001408c92acdfd7(btDynamicsWorldFloatData *_swig_go_0) {
  btDynamicsWorldFloatData *arg1 = (btDynamicsWorldFloatData *) 0 ;
  btContactSolverInfoFloatData *result = 0 ;
  btContactSolverInfoFloatData *_swig_go_result;
  
  arg1 = *(btDynamicsWorldFloatData **)&_swig_go_0; 
  
  result = (btContactSolverInfoFloatData *)& ((arg1)->m_solverInfo);
  *(btContactSolverInfoFloatData **)&_swig_go_result = (btContactSolverInfoFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btDynamicsWorldFloatData_m_gravity_set_bt_e001408c92acdfd7(btDynamicsWorldFloatData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btDynamicsWorldFloatData *arg1 = (btDynamicsWorldFloatData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btDynamicsWorldFloatData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_gravity = *arg2;
  
}


btVector3FloatData *_wrap_btDynamicsWorldFloatData_m_gravity_get_bt_e001408c92acdfd7(btDynamicsWorldFloatData *_swig_go_0) {
  btDynamicsWorldFloatData *arg1 = (btDynamicsWorldFloatData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btDynamicsWorldFloatData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_gravity);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


btDynamicsWorldFloatData *_wrap_new_btDynamicsWorldFloatData_bt_e001408c92acdfd7() {
  btDynamicsWorldFloatData *result = 0 ;
  btDynamicsWorldFloatData *_swig_go_result;
  
  
  result = (btDynamicsWorldFloatData *)new btDynamicsWorldFloatData();
  *(btDynamicsWorldFloatData **)&_swig_go_result = (btDynamicsWorldFloatData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDynamicsWorldFloatData_bt_e001408c92acdfd7(btDynamicsWorldFloatData *_swig_go_0) {
  btDynamicsWorldFloatData *arg1 = (btDynamicsWorldFloatData *) 0 ;
  
  arg1 = *(btDynamicsWorldFloatData **)&_swig_go_0; 
  
  delete arg1;
  
}


btDiscreteDynamicsWorld *_wrap_new_btDiscreteDynamicsWorld_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btBroadphaseInterface *_swig_go_1, btConstraintSolver *_swig_go_2, btCollisionConfiguration *_swig_go_3) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btBroadphaseInterface *arg2 = (btBroadphaseInterface *) 0 ;
  btConstraintSolver *arg3 = (btConstraintSolver *) 0 ;
  btCollisionConfiguration *arg4 = (btCollisionConfiguration *) 0 ;
  btDiscreteDynamicsWorld *result = 0 ;
  btDiscreteDynamicsWorld *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btBroadphaseInterface **)&_swig_go_1; 
  arg3 = *(btConstraintSolver **)&_swig_go_2; 
  arg4 = *(btCollisionConfiguration **)&_swig_go_3; 
  
  result = (btDiscreteDynamicsWorld *)new btDiscreteDynamicsWorld(arg1,arg2,arg3,arg4);
  *(btDiscreteDynamicsWorld **)&_swig_go_result = (btDiscreteDynamicsWorld *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDiscreteDynamicsWorld_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, float _swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int arg3 ;
  btScalar arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  result = (int)(arg1)->stepSimulation(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, float _swig_go_1, intgo _swig_go_2) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->stepSimulation(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_2_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, float _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btScalar arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (int)(arg1)->stepSimulation(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_solveConstraints_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btContactSolverInfo *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btContactSolverInfo *arg2 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btContactSolverInfo **)&_swig_go_1; 
  
  (arg1)->solveConstraints(*arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_synchronizeMotionStates_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->synchronizeMotionStates();
  
}


void _wrap_btDiscreteDynamicsWorld_synchronizeSingleMotionState_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  (arg1)->synchronizeSingleMotionState(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1, bool _swig_go_2) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  bool arg3 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->addConstraint(arg2,arg3);
  
}


void _wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->addConstraint(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_removeConstraint_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->removeConstraint(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addAction_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addAction(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_removeAction_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeAction(arg2);
  
}


btSimulationIslandManager *_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btSimulationIslandManager *result = 0 ;
  btSimulationIslandManager *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btSimulationIslandManager *)(arg1)->getSimulationIslandManager();
  *(btSimulationIslandManager **)&_swig_go_result = (btSimulationIslandManager *)result; 
  return _swig_go_result;
}


btSimulationIslandManager *_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btSimulationIslandManager *result = 0 ;
  btSimulationIslandManager *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btSimulationIslandManager *)((btDiscreteDynamicsWorld const *)arg1)->getSimulationIslandManager();
  *(btSimulationIslandManager **)&_swig_go_result = (btSimulationIslandManager *)result; 
  return _swig_go_result;
}


btCollisionWorld *_wrap_btDiscreteDynamicsWorld_getCollisionWorld_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionWorld *result = 0 ;
  btCollisionWorld *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btCollisionWorld *)(arg1)->getCollisionWorld();
  *(btCollisionWorld **)&_swig_go_result = (btCollisionWorld *)result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_setGravity_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btVector3 *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setGravity((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btDiscreteDynamicsWorld_getGravity_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = ((btDiscreteDynamicsWorld const *)arg1)->getGravity();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->addCollisionObject(arg2,arg3,arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, intgo _swig_go_2) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  int arg3 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->addCollisionObject(arg2,arg3);
  
}


void _wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_2_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->addCollisionObject(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  (arg1)->addRigidBody(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->addRigidBody(arg2,arg3,arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_removeRigidBody_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btRigidBody *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btRigidBody *arg2 = (btRigidBody *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  
  (arg1)->removeRigidBody(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_removeCollisionObject_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  (arg1)->removeCollisionObject(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_debugDrawConstraint_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btTypedConstraint *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btTypedConstraint *arg2 = (btTypedConstraint *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTypedConstraint **)&_swig_go_1; 
  
  (arg1)->debugDrawConstraint(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_debugDrawWorld_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->debugDrawWorld();
  
}


void _wrap_btDiscreteDynamicsWorld_setConstraintSolver_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btConstraintSolver *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btConstraintSolver *arg2 = (btConstraintSolver *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConstraintSolver **)&_swig_go_1; 
  
  (arg1)->setConstraintSolver(arg2);
  
}


btConstraintSolver *_wrap_btDiscreteDynamicsWorld_getConstraintSolver_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btConstraintSolver *result = 0 ;
  btConstraintSolver *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btConstraintSolver *)(arg1)->getConstraintSolver();
  *(btConstraintSolver **)&_swig_go_result = (btConstraintSolver *)result; 
  return _swig_go_result;
}


intgo _wrap_btDiscreteDynamicsWorld_getNumConstraints_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (int)((btDiscreteDynamicsWorld const *)arg1)->getNumConstraints();
  _swig_go_result = result; 
  return _swig_go_result;
}


btTypedConstraint *_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, intgo _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  int arg2 ;
  btTypedConstraint *result = 0 ;
  btTypedConstraint *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btTypedConstraint *)(arg1)->getConstraint(arg2);
  *(btTypedConstraint **)&_swig_go_result = (btTypedConstraint *)result; 
  return _swig_go_result;
}


btTypedConstraint *_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, intgo _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  int arg2 ;
  btTypedConstraint *result = 0 ;
  btTypedConstraint *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btTypedConstraint *)((btDiscreteDynamicsWorld const *)arg1)->getConstraint(arg2);
  *(btTypedConstraint **)&_swig_go_result = (btTypedConstraint *)result; 
  return _swig_go_result;
}


intgo _wrap_btDiscreteDynamicsWorld_getWorldType_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btDynamicsWorldType result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btDynamicsWorldType)((btDiscreteDynamicsWorld const *)arg1)->getWorldType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_clearForces_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->clearForces();
  
}


void _wrap_btDiscreteDynamicsWorld_applyGravity_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  (arg1)->applyGravity();
  
}


void _wrap_btDiscreteDynamicsWorld_setNumTasks_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, intgo _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  int arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setNumTasks(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_updateVehicles_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, float _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->updateVehicles(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addVehicle_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addVehicle(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_removeVehicle_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeVehicle(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_addCharacter_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->addCharacter(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_removeCharacter_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btActionInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btActionInterface *arg2 = (btActionInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btActionInterface **)&_swig_go_1; 
  
  (arg1)->removeCharacter(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_setSynchronizeAllMotionStates_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, bool _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setSynchronizeAllMotionStates(arg2);
  
}


bool _wrap_btDiscreteDynamicsWorld_getSynchronizeAllMotionStates_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (bool)((btDiscreteDynamicsWorld const *)arg1)->getSynchronizeAllMotionStates();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, bool _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setApplySpeculativeContactRestitution(arg2);
  
}


bool _wrap_btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (bool)((btDiscreteDynamicsWorld const *)arg1)->getApplySpeculativeContactRestitution();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_serialize_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btSerializer *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  (arg1)->serialize(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, bool _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setLatencyMotionStateInterpolation(arg2);
  
}


bool _wrap_btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (bool)((btDiscreteDynamicsWorld const *)arg1)->getLatencyMotionStateInterpolation();
  _swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btRigidBody * > *_wrap_btDiscreteDynamicsWorld_getNonStaticRigidBodies__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btAlignedObjectArray< btRigidBody * > *result = 0 ;
  btAlignedObjectArray< btRigidBody * > *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btRigidBody * > *) &(arg1)->getNonStaticRigidBodies();
  *(btAlignedObjectArray< btRigidBody * > **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btRigidBody * > *_wrap_btDiscreteDynamicsWorld_getNonStaticRigidBodies__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btAlignedObjectArray< btRigidBody * > *result = 0 ;
  btAlignedObjectArray< btRigidBody * > *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btRigidBody * > *) &((btDiscreteDynamicsWorld const *)arg1)->getNonStaticRigidBodies();
  *(btAlignedObjectArray< btRigidBody * > **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, void* _swig_go_1, void *_swig_go_2, bool _swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  void *arg3 = (void *) 0 ;
  bool arg4 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  (swig_b0)->setInternalTickCallback(arg2,arg3,arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  (swig_b0)->setInternalTickCallback(arg2,arg3);
  
}


void _wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_2_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, void* _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btInternalTickCallback arg2 = (btInternalTickCallback) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btInternalTickCallback *)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  (swig_b0)->setInternalTickCallback(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_setWorldUserInfo_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, void *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  (swig_b0)->setWorldUserInfo(arg2);
  
}


void *_wrap_btDiscreteDynamicsWorld_getWorldUserInfo_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  result = (void *)((btDynamicsWorld const *)swig_b0)->getWorldUserInfo();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


btContactSolverInfo *_wrap_btDiscreteDynamicsWorld_getSolverInfo__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  result = (btContactSolverInfo *) &(swig_b0)->getSolverInfo();
  *(btContactSolverInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


btContactSolverInfo *_wrap_btDiscreteDynamicsWorld_getSolverInfo__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  result = (btContactSolverInfo *) &((btDynamicsWorld const *)swig_b0)->getSolverInfo();
  *(btContactSolverInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_setBroadphase_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btBroadphaseInterface *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btBroadphaseInterface *arg2 = (btBroadphaseInterface *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btBroadphaseInterface **)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->setBroadphase(arg2);
  
}


btBroadphaseInterface *_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btBroadphaseInterface *)((btCollisionWorld const *)swig_b1)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btBroadphaseInterface *_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btBroadphaseInterface *result = 0 ;
  btBroadphaseInterface *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btBroadphaseInterface *)(swig_b1)->getBroadphase();
  *(btBroadphaseInterface **)&_swig_go_result = (btBroadphaseInterface *)result; 
  return _swig_go_result;
}


btOverlappingPairCache *_wrap_btDiscreteDynamicsWorld_getPairCache_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btOverlappingPairCache *)(swig_b1)->getPairCache();
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btDispatcher *)(swig_b1)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


btDispatcher *_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btDispatcher *)((btCollisionWorld const *)swig_b1)->getDispatcher();
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_updateSingleAabb_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->updateSingleAabb(arg2);
  
}


void _wrap_btDiscreteDynamicsWorld_updateAabbs_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->updateAabbs();
  
}


void _wrap_btDiscreteDynamicsWorld_computeOverlappingPairs_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->computeOverlappingPairs();
  
}


void _wrap_btDiscreteDynamicsWorld_setDebugDrawer_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btIDebugDraw *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btIDebugDraw *arg2 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btIDebugDraw **)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->setDebugDrawer(arg2);
  
}


btIDebugDraw *_wrap_btDiscreteDynamicsWorld_getDebugDrawer_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btIDebugDraw *result = 0 ;
  btIDebugDraw *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btIDebugDraw *)(swig_b1)->getDebugDrawer();
  *(btIDebugDraw **)&_swig_go_result = (btIDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_debugDrawObject_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btTransform *_swig_go_1, btCollisionShape *_swig_go_2, btVector3 *_swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btTransform *arg2 = 0 ;
  btCollisionShape *arg3 = (btCollisionShape *) 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionShape **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->debugDrawObject((btTransform const &)*arg2,(btCollisionShape const *)arg3,(btVector3 const &)*arg4);
  
}


intgo _wrap_btDiscreteDynamicsWorld_getNumCollisionObjects_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (int)((btCollisionWorld const *)swig_b1)->getNumCollisionObjects();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_rayTest_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  ((btCollisionWorld const *)swig_b1)->rayTest((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  ((btCollisionWorld const *)swig_b1)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5,arg6);
  
}


void _wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btConvexShape *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  ((btCollisionWorld const *)swig_b1)->convexSweepTest((btConvexShape const *)arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5);
  
}


void _wrap_btDiscreteDynamicsWorld_contactTest_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionWorld::ContactResultCallback *_swig_go_2) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg3 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_2; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->contactTest(arg2,*arg3);
  
}


void _wrap_btDiscreteDynamicsWorld_contactPairTest_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionWorld::ContactResultCallback *_swig_go_3) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionWorld::ContactResultCallback *arg4 = 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::ContactResultCallback **)&_swig_go_3; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->contactPairTest(arg2,arg3,*arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_rayTestSingle_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObject *_swig_go_2, btCollisionShape *_swig_go_3, btTransform *_swig_go_4, btCollisionWorld::RayResultCallback *_swig_go_5) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btCollisionShape *arg4 = (btCollisionShape *) 0 ;
  btTransform *arg5 = 0 ;
  btCollisionWorld::RayResultCallback *arg6 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btCollisionShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btCollisionWorld::RayResultCallback **)&_swig_go_5; 
  
  btCollisionWorld::rayTestSingle((btTransform const &)*arg1,(btTransform const &)*arg2,arg3,(btCollisionShape const *)arg4,(btTransform const &)*arg5,*arg6);
  
}


void _wrap_btDiscreteDynamicsWorld_rayTestSingleInternal_bt_e001408c92acdfd7(btTransform *_swig_go_0, btTransform *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionWorld::RayResultCallback *_swig_go_3) {
  btTransform *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::RayResultCallback *arg4 = 0 ;
  
  arg1 = *(btTransform **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionWorld::RayResultCallback **)&_swig_go_3; 
  
  btCollisionWorld::rayTestSingleInternal((btTransform const &)*arg1,(btTransform const &)*arg2,(btCollisionObjectWrapper const *)arg3,*arg4);
  
}


void _wrap_btDiscreteDynamicsWorld_objectQuerySingle_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObject *_swig_go_3, btCollisionShape *_swig_go_4, btTransform *_swig_go_5, btCollisionWorld::ConvexResultCallback *_swig_go_6, float _swig_go_7) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObject *arg4 = (btCollisionObject *) 0 ;
  btCollisionShape *arg5 = (btCollisionShape *) 0 ;
  btTransform *arg6 = 0 ;
  btCollisionWorld::ConvexResultCallback *arg7 = 0 ;
  btScalar arg8 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObject **)&_swig_go_3; 
  arg5 = *(btCollisionShape **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  
  btCollisionWorld::objectQuerySingle((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,arg4,(btCollisionShape const *)arg5,(btTransform const &)*arg6,*arg7,arg8);
  
}


void _wrap_btDiscreteDynamicsWorld_objectQuerySingleInternal_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btCollisionWorld::ConvexResultCallback *_swig_go_4, float _swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btCollisionWorld::ConvexResultCallback *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btCollisionWorld::ConvexResultCallback **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  btCollisionWorld::objectQuerySingleInternal((btConvexShape const *)arg1,(btTransform const &)*arg2,(btTransform const &)*arg3,(btCollisionObjectWrapper const *)arg4,*arg5,arg6);
  
}


void _wrap_btDiscreteDynamicsWorld_refreshBroadphaseProxy_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, btCollisionObject *_swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->refreshBroadphaseProxy(arg2);
  
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btCollisionObjectArray *) &(swig_b1)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btCollisionObject * > *_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btCollisionObjectArray *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btCollisionObjectArray *) &((btCollisionWorld const *)swig_b1)->getCollisionObjectArray();
  *(btCollisionObjectArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_performDiscreteCollisionDetection_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->performDiscreteCollisionDetection();
  
}


btDispatcherInfo *_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_0_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btDispatcherInfo *) &(swig_b1)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


btDispatcherInfo *_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_1_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  btDispatcherInfo *result = 0 ;
  btDispatcherInfo *_swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (btDispatcherInfo *) &((btCollisionWorld const *)swig_b1)->getDispatchInfo();
  *(btDispatcherInfo **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btDiscreteDynamicsWorld_getForceUpdateAllAabbs_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  result = (bool)((btCollisionWorld const *)swig_b1)->getForceUpdateAllAabbs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_bt_e001408c92acdfd7(btDiscreteDynamicsWorld *_swig_go_0, bool _swig_go_1) {
  btDiscreteDynamicsWorld *arg1 = (btDiscreteDynamicsWorld *) 0 ;
  bool arg2 ;
  
  arg1 = *(btDiscreteDynamicsWorld **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btDynamicsWorld *swig_b0 = (btDynamicsWorld *)arg1;
  btCollisionWorld *swig_b1 = (btCollisionWorld *)swig_b0;
  (swig_b1)->setForceUpdateAllAabbs(arg2);
  
}


void _wrap_btElement_m_id_set_bt_e001408c92acdfd7(btElement *_swig_go_0, intgo _swig_go_1) {
  btElement *arg1 = (btElement *) 0 ;
  int arg2 ;
  
  arg1 = *(btElement **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_id = arg2;
  
}


intgo _wrap_btElement_m_id_get_bt_e001408c92acdfd7(btElement *_swig_go_0) {
  btElement *arg1 = (btElement *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btElement **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_id);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btElement_m_sz_set_bt_e001408c92acdfd7(btElement *_swig_go_0, intgo _swig_go_1) {
  btElement *arg1 = (btElement *) 0 ;
  int arg2 ;
  
  arg1 = *(btElement **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_sz = arg2;
  
}


intgo _wrap_btElement_m_sz_get_bt_e001408c92acdfd7(btElement *_swig_go_0) {
  btElement *arg1 = (btElement *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btElement **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_sz);
  _swig_go_result = result; 
  return _swig_go_result;
}


btElement *_wrap_new_btElement_bt_e001408c92acdfd7() {
  btElement *result = 0 ;
  btElement *_swig_go_result;
  
  
  result = (btElement *)new btElement();
  *(btElement **)&_swig_go_result = (btElement *)result; 
  return _swig_go_result;
}


void _wrap_delete_btElement_bt_e001408c92acdfd7(btElement *_swig_go_0) {
  btElement *arg1 = (btElement *) 0 ;
  
  arg1 = *(btElement **)&_swig_go_0; 
  
  delete arg1;
  
}


btUnionFind *_wrap_new_btUnionFind_bt_e001408c92acdfd7() {
  btUnionFind *result = 0 ;
  btUnionFind *_swig_go_result;
  
  
  result = (btUnionFind *)new btUnionFind();
  *(btUnionFind **)&_swig_go_result = (btUnionFind *)result; 
  return _swig_go_result;
}


void _wrap_delete_btUnionFind_bt_e001408c92acdfd7(btUnionFind *_swig_go_0) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btUnionFind_sortIslands_bt_e001408c92acdfd7(btUnionFind *_swig_go_0) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  
  (arg1)->sortIslands();
  
}


void _wrap_btUnionFind_reset_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->reset(arg2);
  
}


intgo _wrap_btUnionFind_getNumElements_bt_e001408c92acdfd7(btUnionFind *_swig_go_0) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  
  result = (int)((btUnionFind const *)arg1)->getNumElements();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btUnionFind_isRoot_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btUnionFind const *)arg1)->isRoot(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btElement *_wrap_btUnionFind_getElement__SWIG_0_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  btElement *result = 0 ;
  btElement *_swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btElement *) &(arg1)->getElement(arg2);
  *(btElement **)&_swig_go_result = result; 
  return _swig_go_result;
}


btElement *_wrap_btUnionFind_getElement__SWIG_1_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  btElement *result = 0 ;
  btElement *_swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btElement *) &((btUnionFind const *)arg1)->getElement(arg2);
  *(btElement **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUnionFind_allocate_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->allocate(arg2);
  
}


void _wrap_btUnionFind_Free_bt_e001408c92acdfd7(btUnionFind *_swig_go_0) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  
  (arg1)->Free();
  
}


intgo _wrap_btUnionFind_find__SWIG_0_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->find(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btUnionFind_unite_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->unite(arg2,arg3);
  
}


intgo _wrap_btUnionFind_find__SWIG_1_bt_e001408c92acdfd7(btUnionFind *_swig_go_0, intgo _swig_go_1) {
  btUnionFind *arg1 = (btUnionFind *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btUnionFind **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)(arg1)->find(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btSimulationIslandManager *_wrap_new_btSimulationIslandManager_bt_e001408c92acdfd7() {
  btSimulationIslandManager *result = 0 ;
  btSimulationIslandManager *_swig_go_result;
  
  
  result = (btSimulationIslandManager *)new btSimulationIslandManager();
  *(btSimulationIslandManager **)&_swig_go_result = (btSimulationIslandManager *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSimulationIslandManager_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSimulationIslandManager_initUnionFind_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, intgo _swig_go_1) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  int arg2 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->initUnionFind(arg2);
  
}


btUnionFind *_wrap_btSimulationIslandManager_getUnionFind_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btUnionFind *result = 0 ;
  btUnionFind *_swig_go_result;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  
  result = (btUnionFind *) &(arg1)->getUnionFind();
  *(btUnionFind **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSimulationIslandManager_updateActivationState_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btCollisionWorld *_swig_go_1, btDispatcher *_swig_go_2) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  (arg1)->updateActivationState(arg2,arg3);
  
}


void _wrap_btSimulationIslandManager_storeIslandActivationState_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btCollisionWorld *_swig_go_1) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btCollisionWorld *arg2 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btCollisionWorld **)&_swig_go_1; 
  
  (arg1)->storeIslandActivationState(arg2);
  
}


void _wrap_btSimulationIslandManager_findUnions_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btDispatcher *_swig_go_1, btCollisionWorld *_swig_go_2) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  btCollisionWorld *arg3 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  arg3 = *(btCollisionWorld **)&_swig_go_2; 
  
  (arg1)->findUnions(arg2,arg3);
  
}


void _wrap_btSimulationIslandManager_buildAndProcessIslands_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btDispatcher *_swig_go_1, btCollisionWorld *_swig_go_2, btSimulationIslandManager::IslandCallback *_swig_go_3) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  btCollisionWorld *arg3 = (btCollisionWorld *) 0 ;
  btSimulationIslandManager::IslandCallback *arg4 = (btSimulationIslandManager::IslandCallback *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  arg3 = *(btCollisionWorld **)&_swig_go_2; 
  arg4 = *(btSimulationIslandManager::IslandCallback **)&_swig_go_3; 
  
  (arg1)->buildAndProcessIslands(arg2,arg3,arg4);
  
}


void _wrap_btSimulationIslandManager_buildIslands_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btDispatcher *_swig_go_1, btCollisionWorld *_swig_go_2) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  btCollisionWorld *arg3 = (btCollisionWorld *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  arg3 = *(btCollisionWorld **)&_swig_go_2; 
  
  (arg1)->buildIslands(arg2,arg3);
  
}


void _wrap_btSimulationIslandManager_processIslands_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, btDispatcher *_swig_go_1, btCollisionWorld *_swig_go_2, btSimulationIslandManager::IslandCallback *_swig_go_3) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  btCollisionWorld *arg3 = (btCollisionWorld *) 0 ;
  btSimulationIslandManager::IslandCallback *arg4 = (btSimulationIslandManager::IslandCallback *) 0 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  arg3 = *(btCollisionWorld **)&_swig_go_2; 
  arg4 = *(btSimulationIslandManager::IslandCallback **)&_swig_go_3; 
  
  (arg1)->processIslands(arg2,arg3,arg4);
  
}


bool _wrap_btSimulationIslandManager_getSplitIslands_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  
  result = (bool)(arg1)->getSplitIslands();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSimulationIslandManager_setSplitIslands_bt_e001408c92acdfd7(btSimulationIslandManager *_swig_go_0, bool _swig_go_1) {
  btSimulationIslandManager *arg1 = (btSimulationIslandManager *) 0 ;
  bool arg2 ;
  
  arg1 = *(btSimulationIslandManager **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setSplitIslands(arg2);
  
}


intgo _wrap_BT_SEQUENTIAL_IMPULSE_SOLVER_bt_e001408c92acdfd7() {
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  
  result = BT_SEQUENTIAL_IMPULSE_SOLVER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_MLCP_SOLVER_bt_e001408c92acdfd7() {
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  
  result = BT_MLCP_SOLVER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_NNCG_SOLVER_bt_e001408c92acdfd7() {
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  
  result = BT_NNCG_SOLVER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_MULTIBODY_SOLVER_bt_e001408c92acdfd7() {
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  
  result = BT_MULTIBODY_SOLVER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_BLOCK_SOLVER_bt_e001408c92acdfd7() {
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  
  result = BT_BLOCK_SOLVER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_btConstraintSolver_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConstraintSolver_prepareSolve_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->prepareSolve(arg2,arg3);
  
}


float _wrap_btConstraintSolver_solveGroup_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0, btCollisionObject **_swig_go_1, intgo _swig_go_2, btPersistentManifold **_swig_go_3, intgo _swig_go_4, btTypedConstraint **_swig_go_5, intgo _swig_go_6, btContactSolverInfo *_swig_go_7, btIDebugDraw *_swig_go_8, btDispatcher *_swig_go_9) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  btCollisionObject **arg2 = (btCollisionObject **) 0 ;
  int arg3 ;
  btPersistentManifold **arg4 = (btPersistentManifold **) 0 ;
  int arg5 ;
  btTypedConstraint **arg6 = (btTypedConstraint **) 0 ;
  int arg7 ;
  btContactSolverInfo *arg8 = 0 ;
  btIDebugDraw *arg9 = (btIDebugDraw *) 0 ;
  btDispatcher *arg10 = (btDispatcher *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  arg2 = *(btCollisionObject ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btPersistentManifold ***)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btTypedConstraint ***)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(btContactSolverInfo **)&_swig_go_7; 
  arg9 = *(btIDebugDraw **)&_swig_go_8; 
  arg10 = *(btDispatcher **)&_swig_go_9; 
  
  result = (btScalar)(arg1)->solveGroup(arg2,arg3,arg4,arg5,arg6,arg7,(btContactSolverInfo const &)*arg8,arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConstraintSolver_allSolved_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0, btContactSolverInfo *_swig_go_1, btIDebugDraw *_swig_go_2) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  btContactSolverInfo *arg2 = 0 ;
  btIDebugDraw *arg3 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  arg2 = *(btContactSolverInfo **)&_swig_go_1; 
  arg3 = *(btIDebugDraw **)&_swig_go_2; 
  
  (arg1)->allSolved((btContactSolverInfo const &)*arg2,arg3);
  
}


void _wrap_btConstraintSolver_reset_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


intgo _wrap_btConstraintSolver_getSolverType_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  
  result = (btConstraintSolverType)((btConstraintSolver const *)arg1)->getSolverType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btSolverAnalyticsData *_wrap_new_btSolverAnalyticsData_bt_e001408c92acdfd7() {
  btSolverAnalyticsData *result = 0 ;
  btSolverAnalyticsData *_swig_go_result;
  
  
  result = (btSolverAnalyticsData *)new btSolverAnalyticsData();
  *(btSolverAnalyticsData **)&_swig_go_result = (btSolverAnalyticsData *)result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_islandId_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, intgo _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_islandId = arg2;
  
}


intgo _wrap_btSolverAnalyticsData_m_islandId_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_islandId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_numBodies_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, intgo _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numBodies = arg2;
  
}


intgo _wrap_btSolverAnalyticsData_m_numBodies_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numBodies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_numContactManifolds_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, intgo _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numContactManifolds = arg2;
  
}


intgo _wrap_btSolverAnalyticsData_m_numContactManifolds_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numContactManifolds);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_numSolverCalls_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, intgo _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numSolverCalls = arg2;
  
}


intgo _wrap_btSolverAnalyticsData_m_numSolverCalls_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numSolverCalls);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_numIterationsUsed_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, intgo _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numIterationsUsed = arg2;
  
}


intgo _wrap_btSolverAnalyticsData_m_numIterationsUsed_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numIterationsUsed);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSolverAnalyticsData_m_remainingLeastSquaresResidual_set_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0, double _swig_go_1) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  double arg2 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_remainingLeastSquaresResidual = arg2;
  
}


double _wrap_btSolverAnalyticsData_m_remainingLeastSquaresResidual_get_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_remainingLeastSquaresResidual);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSolverAnalyticsData_bt_e001408c92acdfd7(btSolverAnalyticsData *_swig_go_0) {
  btSolverAnalyticsData *arg1 = (btSolverAnalyticsData *) 0 ;
  
  arg1 = *(btSolverAnalyticsData **)&_swig_go_0; 
  
  delete arg1;
  
}


btSequentialImpulseConstraintSolver *_wrap_new_btSequentialImpulseConstraintSolver_bt_e001408c92acdfd7() {
  btSequentialImpulseConstraintSolver *result = 0 ;
  btSequentialImpulseConstraintSolver *_swig_go_result;
  
  
  result = (btSequentialImpulseConstraintSolver *)new btSequentialImpulseConstraintSolver();
  *(btSequentialImpulseConstraintSolver **)&_swig_go_result = (btSequentialImpulseConstraintSolver *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSequentialImpulseConstraintSolver_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


float _wrap_btSequentialImpulseConstraintSolver_solveGroup_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, btCollisionObject **_swig_go_1, intgo _swig_go_2, btPersistentManifold **_swig_go_3, intgo _swig_go_4, btTypedConstraint **_swig_go_5, intgo _swig_go_6, btContactSolverInfo *_swig_go_7, btIDebugDraw *_swig_go_8, btDispatcher *_swig_go_9) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btCollisionObject **arg2 = (btCollisionObject **) 0 ;
  int arg3 ;
  btPersistentManifold **arg4 = (btPersistentManifold **) 0 ;
  int arg5 ;
  btTypedConstraint **arg6 = (btTypedConstraint **) 0 ;
  int arg7 ;
  btContactSolverInfo *arg8 = 0 ;
  btIDebugDraw *arg9 = (btIDebugDraw *) 0 ;
  btDispatcher *arg10 = (btDispatcher *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = *(btCollisionObject ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btPersistentManifold ***)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btTypedConstraint ***)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(btContactSolverInfo **)&_swig_go_7; 
  arg9 = *(btIDebugDraw **)&_swig_go_8; 
  arg10 = *(btDispatcher **)&_swig_go_9; 
  
  result = (btScalar)(arg1)->solveGroup(arg2,arg3,arg4,arg5,arg6,arg7,(btContactSolverInfo const &)*arg8,arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_reset_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


long long _wrap_btSequentialImpulseConstraintSolver_btRand2_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (unsigned long)(arg1)->btRand2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSequentialImpulseConstraintSolver_btRandInt2_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, intgo _swig_go_1) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)(arg1)->btRandInt2(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_setRandSeed_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, long long _swig_go_1) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  unsigned long arg2 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  (arg1)->setRandSeed(arg2);
  
}


long long _wrap_btSequentialImpulseConstraintSolver_getRandSeed_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (unsigned long)((btSequentialImpulseConstraintSolver const *)arg1)->getRandSeed();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSequentialImpulseConstraintSolver_getSolverType_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btConstraintSolverType result;
  intgo _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btConstraintSolverType)((btSequentialImpulseConstraintSolver const *)arg1)->getSolverType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void* _wrap_btSequentialImpulseConstraintSolver_getActiveConstraintRowSolverGeneric_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver result;
  void* _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btSingleConstraintRowSolver)(arg1)->getActiveConstraintRowSolverGeneric();
  *(btSingleConstraintRowSolver *)&_swig_go_result = (btSingleConstraintRowSolver)result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_setConstraintRowSolverGeneric_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, void* _swig_go_1) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver arg2 = (btSingleConstraintRowSolver) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = *(btSingleConstraintRowSolver *)&_swig_go_1; 
  
  (arg1)->setConstraintRowSolverGeneric(arg2);
  
}


void* _wrap_btSequentialImpulseConstraintSolver_getActiveConstraintRowSolverLowerLimit_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver result;
  void* _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btSingleConstraintRowSolver)(arg1)->getActiveConstraintRowSolverLowerLimit();
  *(btSingleConstraintRowSolver *)&_swig_go_result = (btSingleConstraintRowSolver)result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_setConstraintRowSolverLowerLimit_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, void* _swig_go_1) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver arg2 = (btSingleConstraintRowSolver) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = *(btSingleConstraintRowSolver *)&_swig_go_1; 
  
  (arg1)->setConstraintRowSolverLowerLimit(arg2);
  
}


void* _wrap_btSequentialImpulseConstraintSolver_getScalarConstraintRowSolverGeneric_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver result;
  void* _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btSingleConstraintRowSolver)(arg1)->getScalarConstraintRowSolverGeneric();
  *(btSingleConstraintRowSolver *)&_swig_go_result = (btSingleConstraintRowSolver)result; 
  return _swig_go_result;
}


void* _wrap_btSequentialImpulseConstraintSolver_getScalarConstraintRowSolverLowerLimit_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSingleConstraintRowSolver result;
  void* _swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btSingleConstraintRowSolver)(arg1)->getScalarConstraintRowSolverLowerLimit();
  *(btSingleConstraintRowSolver *)&_swig_go_result = (btSingleConstraintRowSolver)result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_m_analyticsData_set_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, btSolverAnalyticsData *_swig_go_1) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSolverAnalyticsData *arg2 = (btSolverAnalyticsData *) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = *(btSolverAnalyticsData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_analyticsData = *arg2;
  
}


btSolverAnalyticsData *_wrap_btSequentialImpulseConstraintSolver_m_analyticsData_get_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btSolverAnalyticsData *result = 0 ;
  btSolverAnalyticsData *_swig_go_result;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  
  result = (btSolverAnalyticsData *)& ((arg1)->m_analyticsData);
  *(btSolverAnalyticsData **)&_swig_go_result = (btSolverAnalyticsData *)result; 
  return _swig_go_result;
}


void _wrap_btSequentialImpulseConstraintSolver_prepareSolve_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btConstraintSolver *swig_b0 = (btConstraintSolver *)arg1;
  (swig_b0)->prepareSolve(arg2,arg3);
  
}


void _wrap_btSequentialImpulseConstraintSolver_allSolved_bt_e001408c92acdfd7(btSequentialImpulseConstraintSolver *_swig_go_0, btContactSolverInfo *_swig_go_1, btIDebugDraw *_swig_go_2) {
  btSequentialImpulseConstraintSolver *arg1 = (btSequentialImpulseConstraintSolver *) 0 ;
  btContactSolverInfo *arg2 = 0 ;
  btIDebugDraw *arg3 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btSequentialImpulseConstraintSolver **)&_swig_go_0; 
  arg2 = *(btContactSolverInfo **)&_swig_go_1; 
  arg3 = *(btIDebugDraw **)&_swig_go_2; 
  
  btConstraintSolver *swig_b0 = (btConstraintSolver *)arg1;
  (swig_b0)->allSolved((btContactSolverInfo const &)*arg2,arg3);
  
}


intgo _wrap_BT_CONETWIST_FLAGS_LIN_CFM_bt_e001408c92acdfd7() {
  btConeTwistFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONETWIST_FLAGS_LIN_CFM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONETWIST_FLAGS_LIN_ERP_bt_e001408c92acdfd7() {
  btConeTwistFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONETWIST_FLAGS_LIN_ERP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_CONETWIST_FLAGS_ANG_CFM_bt_e001408c92acdfd7() {
  btConeTwistFlags result;
  intgo _swig_go_result;
  
  
  result = BT_CONETWIST_FLAGS_ANG_CFM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


btConeTwistConstraint *_wrap_new_btConeTwistConstraint__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btRigidBody *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3) {
  btRigidBody *arg1 = 0 ;
  btRigidBody *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btConeTwistConstraint *result = 0 ;
  btConeTwistConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  
  result = (btConeTwistConstraint *)new btConeTwistConstraint(*arg1,*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4);
  *(btConeTwistConstraint **)&_swig_go_result = (btConeTwistConstraint *)result; 
  return _swig_go_result;
}


btConeTwistConstraint *_wrap_new_btConeTwistConstraint__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1) {
  btRigidBody *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  btConeTwistConstraint *result = 0 ;
  btConeTwistConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  result = (btConeTwistConstraint *)new btConeTwistConstraint(*arg1,(btTransform const &)*arg2);
  *(btConeTwistConstraint **)&_swig_go_result = (btConeTwistConstraint *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_buildJacobian_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  (arg1)->buildJacobian();
  
}


void _wrap_btConeTwistConstraint_getInfo1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  (arg1)->getInfo1(arg2);
  
}


void _wrap_btConeTwistConstraint_getInfo1NonVirtual_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  (arg1)->getInfo1NonVirtual(arg2);
  
}


void _wrap_btConeTwistConstraint_getInfo2_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  
  (arg1)->getInfo2(arg2);
  
}


void _wrap_btConeTwistConstraint_getInfo2NonVirtual_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btMatrix3x3 *_swig_go_4, btMatrix3x3 *_swig_go_5) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btMatrix3x3 *arg5 = 0 ;
  btMatrix3x3 *arg6 = 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btMatrix3x3 **)&_swig_go_4; 
  arg6 = *(btMatrix3x3 **)&_swig_go_5; 
  
  (arg1)->getInfo2NonVirtual(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btMatrix3x3 const &)*arg5,(btMatrix3x3 const &)*arg6);
  
}


void _wrap_btConeTwistConstraint_solveConstraintObsolete_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btSolverBody *_swig_go_1, btSolverBody *_swig_go_2, float _swig_go_3) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btSolverBody *arg2 = 0 ;
  btSolverBody *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btSolverBody **)&_swig_go_1; 
  arg3 = *(btSolverBody **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->solveConstraintObsolete(*arg2,*arg3,arg4);
  
}


void _wrap_btConeTwistConstraint_updateRHS_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->updateRHS(arg2);
  
}


btRigidBody *_wrap_btConeTwistConstraint_getRigidBodyA_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &((btConeTwistConstraint const *)arg1)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btConeTwistConstraint_getRigidBodyB_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btRigidBody *) &((btConeTwistConstraint const *)arg1)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setAngularOnly_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, bool _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setAngularOnly(arg2);
  
}


bool _wrap_btConeTwistConstraint_getAngularOnly_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (bool)((btConeTwistConstraint const *)arg1)->getAngularOnly();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setLimit__SWIG_0_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setLimit(arg2,arg3);
  
}


float _wrap_btConeTwistConstraint_getLimit_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getLimit(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setLimit__SWIG_1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  
  (arg1)->setLimit(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_btConeTwistConstraint_setLimit__SWIG_2_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  (arg1)->setLimit(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_btConeTwistConstraint_setLimit__SWIG_3_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  (arg1)->setLimit(arg2,arg3,arg4,arg5);
  
}


void _wrap_btConeTwistConstraint_setLimit__SWIG_4_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setLimit(arg2,arg3,arg4);
  
}


btTransform *_wrap_btConeTwistConstraint_getAFrame_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btConeTwistConstraint const *)arg1)->getAFrame();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btConeTwistConstraint_getBFrame_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btConeTwistConstraint const *)arg1)->getBFrame();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getSolveTwistLimit_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (int)(arg1)->getSolveTwistLimit();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getSolveSwingLimit_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (int)(arg1)->getSolveSwingLimit();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getTwistLimitSign_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->getTwistLimitSign();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_calcAngleInfo_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  (arg1)->calcAngleInfo();
  
}


void _wrap_btConeTwistConstraint_calcAngleInfo2_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2, btMatrix3x3 *_swig_go_3, btMatrix3x3 *_swig_go_4) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btMatrix3x3 *arg4 = 0 ;
  btMatrix3x3 *arg5 = 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btMatrix3x3 **)&_swig_go_3; 
  arg5 = *(btMatrix3x3 **)&_swig_go_4; 
  
  (arg1)->calcAngleInfo2((btTransform const &)*arg2,(btTransform const &)*arg3,(btMatrix3x3 const &)*arg4,(btMatrix3x3 const &)*arg5);
  
}


float _wrap_btConeTwistConstraint_getSwingSpan1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getSwingSpan1();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getSwingSpan2_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getSwingSpan2();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getTwistSpan_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getTwistSpan();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getLimitSoftness_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getLimitSoftness();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getBiasFactor_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getBiasFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getRelaxationFactor_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getRelaxationFactor();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getTwistAngle_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getTwistAngle();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConeTwistConstraint_isPastSwingLimit_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (bool)(arg1)->isPastSwingLimit();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getDamping_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getDamping();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setDamping_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setDamping(arg2);
  
}


void _wrap_btConeTwistConstraint_enableMotor_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, bool _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->enableMotor(arg2);
  
}


bool _wrap_btConeTwistConstraint_isMotorEnabled_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (bool)((btConeTwistConstraint const *)arg1)->isMotorEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getMaxMotorImpulse_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getMaxMotorImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConeTwistConstraint_isMaxMotorImpulseNormalized_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (bool)((btConeTwistConstraint const *)arg1)->isMaxMotorImpulseNormalized();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setMaxMotorImpulse_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMaxMotorImpulse(arg2);
  
}


void _wrap_btConeTwistConstraint_setMaxMotorImpulseNormalized_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMaxMotorImpulseNormalized(arg2);
  
}


float _wrap_btConeTwistConstraint_getFixThresh_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btScalar)(arg1)->getFixThresh();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setFixThresh_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setFixThresh(arg2);
  
}


void _wrap_btConeTwistConstraint_setMotorTarget_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btQuaternion *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  (arg1)->setMotorTarget((btQuaternion const &)*arg2);
  
}


btQuaternion *_wrap_btConeTwistConstraint_getMotorTarget_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btQuaternion *result = 0 ;
  btQuaternion *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btQuaternion *) &((btConeTwistConstraint const *)arg1)->getMotorTarget();
  *(btQuaternion **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setMotorTargetInConstraintSpace_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btQuaternion *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btQuaternion *arg2 = 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  
  (arg1)->setMotorTargetInConstraintSpace((btQuaternion const &)*arg2);
  
}


btVector3 *_wrap_btConeTwistConstraint_GetPointForAngle_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = ((btConeTwistConstraint const *)arg1)->GetPointForAngle(arg2,arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setParam__SWIG_0_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->setParam(arg2,arg3,arg4);
  
}


void _wrap_btConeTwistConstraint_setParam__SWIG_1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setParam(arg2,arg3);
  
}


void _wrap_btConeTwistConstraint_setFrames_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->setFrames((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


btTransform *_wrap_btConeTwistConstraint_getFrameOffsetA_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btConeTwistConstraint const *)arg1)->getFrameOffsetA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btConeTwistConstraint_getFrameOffsetB_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btConeTwistConstraint const *)arg1)->getFrameOffsetB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getParam__SWIG_0_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getParam(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getParam__SWIG_1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btConeTwistConstraint const *)arg1)->getParam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getFlags_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (int)((btConeTwistConstraint const *)arg1)->getFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_calculateSerializeBufferSize_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  result = (int)((btConeTwistConstraint const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btConeTwistConstraint_serialize_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btConeTwistConstraint const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_btConeTwistConstraint_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  delete arg1;
  
}


btRigidBody *_wrap_btConeTwistConstraint_getFixedBody_bt_e001408c92acdfd7() {
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  
  result = (btRigidBody *) &btTypedConstraint::getFixedBody();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getOverrideNumSolverIterations_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getOverrideNumSolverIterations();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setOverrideNumSolverIterations_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setOverrideNumSolverIterations(arg2);
  
}


void _wrap_btConeTwistConstraint_setupSolverConstraint_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btAlignedObjectArray< btSolverConstraint > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btConstraintArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btConstraintArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setupSolverConstraint(*arg2,arg3,arg4,arg5);
  
}


void _wrap_btConeTwistConstraint_internalSetAppliedImpulse_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->internalSetAppliedImpulse(arg2);
  
}


float _wrap_btConeTwistConstraint_internalGetAppliedImpulse_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)(swig_b0)->internalGetAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btConeTwistConstraint_getBreakingImpulseThreshold_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)((btTypedConstraint const *)swig_b0)->getBreakingImpulseThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setBreakingImpulseThreshold_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setBreakingImpulseThreshold(arg2);
  
}


bool _wrap_btConeTwistConstraint_isEnabled_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (bool)((btTypedConstraint const *)swig_b0)->isEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setEnabled_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, bool _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setEnabled(arg2);
  
}


intgo _wrap_btConeTwistConstraint_getUserConstraintType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUserConstraintType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setUserConstraintType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintType(arg2);
  
}


void _wrap_btConeTwistConstraint_setUserConstraintId_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintId(arg2);
  
}


intgo _wrap_btConeTwistConstraint_getUserConstraintId_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUserConstraintId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setUserConstraintPtr_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, void *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintPtr(arg2);
  
}


void *_wrap_btConeTwistConstraint_getUserConstraintPtr_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (void *)(swig_b0)->getUserConstraintPtr();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setJointFeedback_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, btJointFeedback *_swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btJointFeedback *arg2 = (btJointFeedback *) 0 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = *(btJointFeedback **)&_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setJointFeedback(arg2);
  
}


btJointFeedback *_wrap_btConeTwistConstraint_getJointFeedback__SWIG_0_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btJointFeedback *)((btTypedConstraint const *)swig_b0)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


btJointFeedback *_wrap_btConeTwistConstraint_getJointFeedback__SWIG_1_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btJointFeedback *)(swig_b0)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getUid_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btConeTwistConstraint_needsFeedback_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (bool)((btTypedConstraint const *)swig_b0)->needsFeedback();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_enableFeedback_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, bool _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->enableFeedback(arg2);
  
}


float _wrap_btConeTwistConstraint_getAppliedImpulse_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)((btTypedConstraint const *)swig_b0)->getAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getConstraintType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btTypedConstraintType)((btTypedConstraint const *)swig_b0)->getConstraintType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraint_setDbgDrawSize_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setDbgDrawSize(arg2);
  
}


float _wrap_btConeTwistConstraint_getDbgDrawSize_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)(swig_b0)->getDbgDrawSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtConeTwistConstraint_M_objectType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0, intgo _swig_go_1) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  if (swig_b1) (swig_b1)->m_objectType = arg2;
  
}


intgo _wrap_GetbtConeTwistConstraint_M_objectType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  result = (int) ((swig_b1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btConeTwistConstraint_getObjectType_bt_e001408c92acdfd7(btConeTwistConstraint *_swig_go_0) {
  btConeTwistConstraint *arg1 = (btConeTwistConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConeTwistConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  result = (int)((btTypedObject const *)swig_b1)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, btTypedConstraintDoubleData *_swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTypedConstraintDoubleData *arg2 = (btTypedConstraintDoubleData *) 0 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = *(btTypedConstraintDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_typeConstraintData = *arg2;
  
}


btTypedConstraintDoubleData *_wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTypedConstraintDoubleData *result = 0 ;
  btTypedConstraintDoubleData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (btTypedConstraintDoubleData *)& ((arg1)->m_typeConstraintData);
  *(btTypedConstraintDoubleData **)&_swig_go_result = (btTypedConstraintDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_rbAFrame_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbAFrame = *arg2;
  
}


btTransformDoubleData *_wrap_btConeTwistConstraintDoubleData_m_rbAFrame_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_rbAFrame);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_rbBFrame_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbBFrame = *arg2;
  
}


btTransformDoubleData *_wrap_btConeTwistConstraintDoubleData_m_rbBFrame_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_rbBFrame);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_swingSpan1_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_swingSpan1 = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_swingSpan1_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_swingSpan1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_swingSpan2_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_swingSpan2 = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_swingSpan2_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_swingSpan2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_twistSpan_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_twistSpan = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_twistSpan_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_twistSpan);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_limitSoftness_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_limitSoftness = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_limitSoftness_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_limitSoftness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_biasFactor_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_biasFactor = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_biasFactor_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_biasFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_relaxationFactor = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_relaxationFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintDoubleData_m_damping_set_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0, double _swig_go_1) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double arg2 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


double _wrap_btConeTwistConstraintDoubleData_m_damping_get_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  result = (double) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


btConeTwistConstraintDoubleData *_wrap_new_btConeTwistConstraintDoubleData_bt_e001408c92acdfd7() {
  btConeTwistConstraintDoubleData *result = 0 ;
  btConeTwistConstraintDoubleData *_swig_go_result;
  
  
  result = (btConeTwistConstraintDoubleData *)new btConeTwistConstraintDoubleData();
  *(btConeTwistConstraintDoubleData **)&_swig_go_result = (btConeTwistConstraintDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConeTwistConstraintDoubleData_bt_e001408c92acdfd7(btConeTwistConstraintDoubleData *_swig_go_0) {
  btConeTwistConstraintDoubleData *arg1 = (btConeTwistConstraintDoubleData *) 0 ;
  
  arg1 = *(btConeTwistConstraintDoubleData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConeTwistConstraintData_m_typeConstraintData_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, btTypedConstraintData *_swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTypedConstraintData *arg2 = (btTypedConstraintData *) 0 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = *(btTypedConstraintData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_typeConstraintData = *arg2;
  
}


btTypedConstraintData *_wrap_btConeTwistConstraintData_m_typeConstraintData_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTypedConstraintData *result = 0 ;
  btTypedConstraintData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (btTypedConstraintData *)& ((arg1)->m_typeConstraintData);
  *(btTypedConstraintData **)&_swig_go_result = (btTypedConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_rbAFrame_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbAFrame = *arg2;
  
}


btTransformFloatData *_wrap_btConeTwistConstraintData_m_rbAFrame_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_rbAFrame);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_rbBFrame_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbBFrame = *arg2;
  
}


btTransformFloatData *_wrap_btConeTwistConstraintData_m_rbBFrame_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_rbBFrame);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_swingSpan1_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_swingSpan1 = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_swingSpan1_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_swingSpan1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_swingSpan2_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_swingSpan2 = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_swingSpan2_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_swingSpan2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_twistSpan_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_twistSpan = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_twistSpan_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_twistSpan);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_limitSoftness_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_limitSoftness = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_limitSoftness_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_limitSoftness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_biasFactor_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_biasFactor = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_biasFactor_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_biasFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_relaxationFactor_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_relaxationFactor = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_relaxationFactor_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_relaxationFactor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_damping_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, float _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float arg2 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


float _wrap_btConeTwistConstraintData_m_damping_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConeTwistConstraintData_m_pad_set_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0, _gostring_ _swig_go_1) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 4-1);
      arg1->m_pad[4-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btConeTwistConstraintData_m_pad_get_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btConeTwistConstraintData *_wrap_new_btConeTwistConstraintData_bt_e001408c92acdfd7() {
  btConeTwistConstraintData *result = 0 ;
  btConeTwistConstraintData *_swig_go_result;
  
  
  result = (btConeTwistConstraintData *)new btConeTwistConstraintData();
  *(btConeTwistConstraintData **)&_swig_go_result = (btConeTwistConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConeTwistConstraintData_bt_e001408c92acdfd7(btConeTwistConstraintData *_swig_go_0) {
  btConeTwistConstraintData *arg1 = (btConeTwistConstraintData *) 0 ;
  
  arg1 = *(btConeTwistConstraintData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btRotationalLimitMotor_m_loLimit_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_loLimit = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_loLimit_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_loLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_hiLimit_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_hiLimit = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_hiLimit_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_hiLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_targetVelocity_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_targetVelocity = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_targetVelocity_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_targetVelocity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_maxMotorForce_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxMotorForce = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_maxMotorForce_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxMotorForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_maxLimitForce_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxLimitForce = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_maxLimitForce_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxLimitForce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_damping_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_damping_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_limitSoftness_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_limitSoftness = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_limitSoftness_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_limitSoftness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_normalCFM_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_normalCFM = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_normalCFM_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_normalCFM);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_stopERP_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_stopERP = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_stopERP_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_stopERP);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_stopCFM_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_stopCFM = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_stopCFM_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_stopCFM);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_bounce_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_bounce = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_bounce_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_bounce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_enableMotor_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, bool _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  bool arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_enableMotor = arg2;
  
}


bool _wrap_btRotationalLimitMotor_m_enableMotor_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_enableMotor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_currentLimitError_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_currentLimitError = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_currentLimitError_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_currentLimitError);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_currentPosition_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_currentPosition = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_currentPosition_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_currentPosition);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_currentLimit_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, intgo _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  int arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_currentLimit = arg2;
  
}


intgo _wrap_btRotationalLimitMotor_m_currentLimit_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_currentLimit);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btRotationalLimitMotor_m_accumulatedImpulse_set_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_accumulatedImpulse = arg2;
  
}


float _wrap_btRotationalLimitMotor_m_accumulatedImpulse_get_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_accumulatedImpulse);
  _swig_go_result = result; 
  return _swig_go_result;
}


btRotationalLimitMotor *_wrap_new_btRotationalLimitMotor__SWIG_0_bt_e001408c92acdfd7() {
  btRotationalLimitMotor *result = 0 ;
  btRotationalLimitMotor *_swig_go_result;
  
  
  result = (btRotationalLimitMotor *)new btRotationalLimitMotor();
  *(btRotationalLimitMotor **)&_swig_go_result = (btRotationalLimitMotor *)result; 
  return _swig_go_result;
}


btRotationalLimitMotor *_wrap_new_btRotationalLimitMotor__SWIG_1_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = 0 ;
  btRotationalLimitMotor *result = 0 ;
  btRotationalLimitMotor *_swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (btRotationalLimitMotor *)new btRotationalLimitMotor((btRotationalLimitMotor const &)*arg1);
  *(btRotationalLimitMotor **)&_swig_go_result = (btRotationalLimitMotor *)result; 
  return _swig_go_result;
}


bool _wrap_btRotationalLimitMotor_isLimited_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (bool)((btRotationalLimitMotor const *)arg1)->isLimited();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btRotationalLimitMotor_needApplyTorques_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  result = (bool)((btRotationalLimitMotor const *)arg1)->needApplyTorques();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btRotationalLimitMotor_testLimitValue_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (int)(arg1)->testLimitValue(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btRotationalLimitMotor_solveAngularLimits_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, btRigidBody *_swig_go_4, btRigidBody *_swig_go_5) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  btRigidBody *arg5 = (btRigidBody *) 0 ;
  btRigidBody *arg6 = (btRigidBody *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = *(btRigidBody **)&_swig_go_4; 
  arg6 = *(btRigidBody **)&_swig_go_5; 
  
  result = (btScalar)(arg1)->solveAngularLimits(arg2,*arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btRotationalLimitMotor_bt_e001408c92acdfd7(btRotationalLimitMotor *_swig_go_0) {
  btRotationalLimitMotor *arg1 = (btRotationalLimitMotor *) 0 ;
  
  arg1 = *(btRotationalLimitMotor **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btTranslationalLimitMotor_m_lowerLimit_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_lowerLimit = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_lowerLimit_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_lowerLimit);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_upperLimit_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_upperLimit = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_upperLimit_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_upperLimit);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_accumulatedImpulse_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_accumulatedImpulse = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_accumulatedImpulse_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_accumulatedImpulse);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_limitSoftness_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_limitSoftness = arg2;
  
}


float _wrap_btTranslationalLimitMotor_m_limitSoftness_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_limitSoftness);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_damping_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_damping = arg2;
  
}


float _wrap_btTranslationalLimitMotor_m_damping_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_damping);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_restitution_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, float _swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_restitution = arg2;
  
}


float _wrap_btTranslationalLimitMotor_m_restitution_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_restitution);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_normalCFM_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_normalCFM = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_normalCFM_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_normalCFM);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_stopERP_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_stopERP = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_stopERP_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_stopERP);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_stopCFM_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_stopCFM = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_stopCFM_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_stopCFM);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_enableMotor_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, bool *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->m_enableMotor;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_btTranslationalLimitMotor_m_enableMotor_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->m_enableMotor);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_targetVelocity_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_targetVelocity = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_targetVelocity_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_targetVelocity);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_maxMotorForce_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_maxMotorForce = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_maxMotorForce_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_maxMotorForce);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_currentLimitError_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_currentLimitError = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_currentLimitError_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_currentLimitError);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_currentLinearDiff_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, btVector3 *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_currentLinearDiff = *arg2;
  
}


btVector3 *_wrap_btTranslationalLimitMotor_m_currentLinearDiff_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_currentLinearDiff);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btTranslationalLimitMotor_m_currentLimit_set_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, intgo *_swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_currentLimit;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btTranslationalLimitMotor_m_currentLimit_get_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_currentLimit);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTranslationalLimitMotor *_wrap_new_btTranslationalLimitMotor__SWIG_0_bt_e001408c92acdfd7() {
  btTranslationalLimitMotor *result = 0 ;
  btTranslationalLimitMotor *_swig_go_result;
  
  
  result = (btTranslationalLimitMotor *)new btTranslationalLimitMotor();
  *(btTranslationalLimitMotor **)&_swig_go_result = (btTranslationalLimitMotor *)result; 
  return _swig_go_result;
}


btTranslationalLimitMotor *_wrap_new_btTranslationalLimitMotor__SWIG_1_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = 0 ;
  btTranslationalLimitMotor *result = 0 ;
  btTranslationalLimitMotor *_swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  result = (btTranslationalLimitMotor *)new btTranslationalLimitMotor((btTranslationalLimitMotor const &)*arg1);
  *(btTranslationalLimitMotor **)&_swig_go_result = (btTranslationalLimitMotor *)result; 
  return _swig_go_result;
}


bool _wrap_btTranslationalLimitMotor_isLimited_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, intgo _swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btTranslationalLimitMotor const *)arg1)->isLimited(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btTranslationalLimitMotor_needApplyForce_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, intgo _swig_go_1) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btTranslationalLimitMotor const *)arg1)->needApplyForce(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btTranslationalLimitMotor_testLimitValue_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (int)(arg1)->testLimitValue(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btTranslationalLimitMotor_solveLinearAxis_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0, float _swig_go_1, float _swig_go_2, btRigidBody *_swig_go_3, btVector3 *_swig_go_4, btRigidBody *_swig_go_5, btVector3 *_swig_go_6, intgo _swig_go_7, btVector3 *_swig_go_8, btVector3 *_swig_go_9) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btRigidBody *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btRigidBody *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  int arg8 ;
  btVector3 *arg9 = 0 ;
  btVector3 *arg10 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btRigidBody **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btRigidBody **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  
  result = (btScalar)(arg1)->solveLinearAxis(arg2,arg3,*arg4,(btVector3 const &)*arg5,*arg6,(btVector3 const &)*arg7,arg8,(btVector3 const &)*arg9,(btVector3 const &)*arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btTranslationalLimitMotor_bt_e001408c92acdfd7(btTranslationalLimitMotor *_swig_go_0) {
  btTranslationalLimitMotor *arg1 = (btTranslationalLimitMotor *) 0 ;
  
  arg1 = *(btTranslationalLimitMotor **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_BT_6DOF_FLAGS_CFM_NORM_bt_e001408c92acdfd7() {
  bt6DofFlags result;
  intgo _swig_go_result;
  
  
  result = BT_6DOF_FLAGS_CFM_NORM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_6DOF_FLAGS_CFM_STOP_bt_e001408c92acdfd7() {
  bt6DofFlags result;
  intgo _swig_go_result;
  
  
  result = BT_6DOF_FLAGS_CFM_STOP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BT_6DOF_FLAGS_ERP_STOP_bt_e001408c92acdfd7() {
  bt6DofFlags result;
  intgo _swig_go_result;
  
  
  result = BT_6DOF_FLAGS_ERP_STOP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_set_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_useSolveConstraintObsolete = arg2;
  
}


bool _wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_get_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_useSolveConstraintObsolete);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGeneric6DofConstraint *_wrap_new_btGeneric6DofConstraint__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btRigidBody *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, bool _swig_go_4) {
  btRigidBody *arg1 = 0 ;
  btRigidBody *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  bool arg5 ;
  btGeneric6DofConstraint *result = 0 ;
  btGeneric6DofConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (btGeneric6DofConstraint *)new btGeneric6DofConstraint(*arg1,*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,arg5);
  *(btGeneric6DofConstraint **)&_swig_go_result = (btGeneric6DofConstraint *)result; 
  return _swig_go_result;
}


btGeneric6DofConstraint *_wrap_new_btGeneric6DofConstraint__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1, bool _swig_go_2) {
  btRigidBody *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  bool arg3 ;
  btGeneric6DofConstraint *result = 0 ;
  btGeneric6DofConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btGeneric6DofConstraint *)new btGeneric6DofConstraint(*arg1,(btTransform const &)*arg2,arg3);
  *(btGeneric6DofConstraint **)&_swig_go_result = (btGeneric6DofConstraint *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->calculateTransforms((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


void _wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  (arg1)->calculateTransforms();
  
}


btTransform *_wrap_btGeneric6DofConstraint_getCalculatedTransformA_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btGeneric6DofConstraint const *)arg1)->getCalculatedTransformA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofConstraint_getCalculatedTransformB_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btGeneric6DofConstraint const *)arg1)->getCalculatedTransformB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btGeneric6DofConstraint const *)arg1)->getFrameOffsetA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &((btGeneric6DofConstraint const *)arg1)->getFrameOffsetB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &(arg1)->getFrameOffsetA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTransform *) &(arg1)->getFrameOffsetB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_buildJacobian_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  (arg1)->buildJacobian();
  
}


void _wrap_btGeneric6DofConstraint_getInfo1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  (arg1)->getInfo1(arg2);
  
}


void _wrap_btGeneric6DofConstraint_getInfo1NonVirtual_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  (arg1)->getInfo1NonVirtual(arg2);
  
}


void _wrap_btGeneric6DofConstraint_getInfo2_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  
  (arg1)->getInfo2(arg2);
  
}


void _wrap_btGeneric6DofConstraint_getInfo2NonVirtual_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  
  (arg1)->getInfo2NonVirtual(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8);
  
}


void _wrap_btGeneric6DofConstraint_updateRHS_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->updateRHS(arg2);
  
}


btVector3 *_wrap_btGeneric6DofConstraint_getAxis_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((btGeneric6DofConstraint const *)arg1)->getAxis(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btGeneric6DofConstraint_getAngle_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofConstraint const *)arg1)->getAngle(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofConstraint_getRelativePivotPosition_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofConstraint const *)arg1)->getRelativePivotPosition(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setFrames_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  (arg1)->setFrames((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


bool _wrap_btGeneric6DofConstraint_testAngularLimitMotor_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->testAngularLimitMotor(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setLinearLowerLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLinearLowerLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofConstraint_getLinearLowerLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btGeneric6DofConstraint const *)arg1)->getLinearLowerLimit(*arg2);
  
}


void _wrap_btGeneric6DofConstraint_setLinearUpperLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLinearUpperLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofConstraint_getLinearUpperLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btGeneric6DofConstraint const *)arg1)->getLinearUpperLimit(*arg2);
  
}


void _wrap_btGeneric6DofConstraint_setAngularLowerLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setAngularLowerLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofConstraint_getAngularLowerLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btGeneric6DofConstraint const *)arg1)->getAngularLowerLimit(*arg2);
  
}


void _wrap_btGeneric6DofConstraint_setAngularUpperLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setAngularUpperLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofConstraint_getAngularUpperLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  ((btGeneric6DofConstraint const *)arg1)->getAngularUpperLimit(*arg2);
  
}


btRotationalLimitMotor *_wrap_btGeneric6DofConstraint_getRotationalLimitMotor_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btRotationalLimitMotor *result = 0 ;
  btRotationalLimitMotor *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btRotationalLimitMotor *)(arg1)->getRotationalLimitMotor(arg2);
  *(btRotationalLimitMotor **)&_swig_go_result = (btRotationalLimitMotor *)result; 
  return _swig_go_result;
}


btTranslationalLimitMotor *_wrap_btGeneric6DofConstraint_getTranslationalLimitMotor_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTranslationalLimitMotor *result = 0 ;
  btTranslationalLimitMotor *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (btTranslationalLimitMotor *)(arg1)->getTranslationalLimitMotor();
  *(btTranslationalLimitMotor **)&_swig_go_result = (btTranslationalLimitMotor *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setLimit_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  (arg1)->setLimit(arg2,arg3,arg4);
  
}


bool _wrap_btGeneric6DofConstraint_isLimited_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btGeneric6DofConstraint const *)arg1)->isLimited(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_calcAnchorPos_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  (arg1)->calcAnchorPos();
  
}


intgo _wrap_btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btRotationalLimitMotor *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btTypedConstraint::btConstraintInfo2 *_swig_go_8, intgo _swig_go_9, btVector3 *_swig_go_10, intgo _swig_go_11, intgo _swig_go_12) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRotationalLimitMotor *arg2 = (btRotationalLimitMotor *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btTypedConstraint::btConstraintInfo2 *arg9 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  int arg10 ;
  btVector3 *arg11 = 0 ;
  int arg12 ;
  int arg13 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btRotationalLimitMotor **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = *(btVector3 **)&_swig_go_10; 
  arg12 = (int)_swig_go_11; 
  arg13 = (int)_swig_go_12; 
  
  result = (int)(arg1)->get_limit_motor_info2(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9,arg10,*arg11,arg12,arg13);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btRotationalLimitMotor *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btTypedConstraint::btConstraintInfo2 *_swig_go_8, intgo _swig_go_9, btVector3 *_swig_go_10, intgo _swig_go_11) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRotationalLimitMotor *arg2 = (btRotationalLimitMotor *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btTypedConstraint::btConstraintInfo2 *arg9 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  int arg10 ;
  btVector3 *arg11 = 0 ;
  int arg12 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btRotationalLimitMotor **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = *(btVector3 **)&_swig_go_10; 
  arg12 = (int)_swig_go_11; 
  
  result = (int)(arg1)->get_limit_motor_info2(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9,arg10,*arg11,arg12);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGeneric6DofConstraint_getUseFrameOffset_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (bool)((btGeneric6DofConstraint const *)arg1)->getUseFrameOffset();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setUseFrameOffset_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setUseFrameOffset(arg2);
  
}


bool _wrap_btGeneric6DofConstraint_getUseLinearReferenceFrameA_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (bool)((btGeneric6DofConstraint const *)arg1)->getUseLinearReferenceFrameA();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setUseLinearReferenceFrameA_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setUseLinearReferenceFrameA(arg2);
  
}


void _wrap_btGeneric6DofConstraint_setParam__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->setParam(arg2,arg3,arg4);
  
}


void _wrap_btGeneric6DofConstraint_setParam__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setParam(arg2,arg3);
  
}


float _wrap_btGeneric6DofConstraint_getParam__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btScalar)((btGeneric6DofConstraint const *)arg1)->getParam(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofConstraint_getParam__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofConstraint const *)arg1)->getParam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setAxis_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->setAxis((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


intgo _wrap_btGeneric6DofConstraint_getFlags_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (int)((btGeneric6DofConstraint const *)arg1)->getFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_calculateSerializeBufferSize_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  result = (int)((btGeneric6DofConstraint const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btGeneric6DofConstraint_serialize_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btGeneric6DofConstraint const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofConstraint_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  delete arg1;
  
}


btRigidBody *_wrap_btGeneric6DofConstraint_getFixedBody_bt_e001408c92acdfd7() {
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  
  result = (btRigidBody *) &btTypedConstraint::getFixedBody();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_getOverrideNumSolverIterations_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getOverrideNumSolverIterations();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setOverrideNumSolverIterations_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setOverrideNumSolverIterations(arg2);
  
}


void _wrap_btGeneric6DofConstraint_setupSolverConstraint_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btAlignedObjectArray< btSolverConstraint > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btConstraintArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btConstraintArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setupSolverConstraint(*arg2,arg3,arg4,arg5);
  
}


void _wrap_btGeneric6DofConstraint_internalSetAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->internalSetAppliedImpulse(arg2);
  
}


float _wrap_btGeneric6DofConstraint_internalGetAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)(swig_b0)->internalGetAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofConstraint_getBreakingImpulseThreshold_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)((btTypedConstraint const *)swig_b0)->getBreakingImpulseThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setBreakingImpulseThreshold_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setBreakingImpulseThreshold(arg2);
  
}


bool _wrap_btGeneric6DofConstraint_isEnabled_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (bool)((btTypedConstraint const *)swig_b0)->isEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setEnabled_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setEnabled(arg2);
  
}


void _wrap_btGeneric6DofConstraint_solveConstraintObsolete_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btSolverBody *_swig_go_1, btSolverBody *_swig_go_2, float _swig_go_3) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btSolverBody *arg2 = 0 ;
  btSolverBody *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btSolverBody **)&_swig_go_1; 
  arg3 = *(btSolverBody **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->solveConstraintObsolete(*arg2,*arg3,arg4);
  
}


btRigidBody *_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btRigidBody *) &((btTypedConstraint const *)swig_b0)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btRigidBody *) &(swig_b0)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btRigidBody *) &((btTypedConstraint const *)swig_b0)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btRigidBody *) &(swig_b0)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_getUserConstraintType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUserConstraintType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setUserConstraintType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintType(arg2);
  
}


void _wrap_btGeneric6DofConstraint_setUserConstraintId_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintId(arg2);
  
}


intgo _wrap_btGeneric6DofConstraint_getUserConstraintId_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUserConstraintId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setUserConstraintPtr_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, void *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setUserConstraintPtr(arg2);
  
}


void *_wrap_btGeneric6DofConstraint_getUserConstraintPtr_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (void *)(swig_b0)->getUserConstraintPtr();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setJointFeedback_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, btJointFeedback *_swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btJointFeedback *arg2 = (btJointFeedback *) 0 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = *(btJointFeedback **)&_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setJointFeedback(arg2);
  
}


btJointFeedback *_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btJointFeedback *)((btTypedConstraint const *)swig_b0)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


btJointFeedback *_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btJointFeedback *)(swig_b0)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_getUid_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (int)((btTypedConstraint const *)swig_b0)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGeneric6DofConstraint_needsFeedback_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (bool)((btTypedConstraint const *)swig_b0)->needsFeedback();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_enableFeedback_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->enableFeedback(arg2);
  
}


float _wrap_btGeneric6DofConstraint_getAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)((btTypedConstraint const *)swig_b0)->getAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_getConstraintType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btTypedConstraintType)((btTypedConstraint const *)swig_b0)->getConstraintType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraint_setDbgDrawSize_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  (swig_b0)->setDbgDrawSize(arg2);
  
}


float _wrap_btGeneric6DofConstraint_getDbgDrawSize_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  result = (btScalar)(swig_b0)->getDbgDrawSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtGeneric6DofConstraint_M_objectType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  if (swig_b1) (swig_b1)->m_objectType = arg2;
  
}


intgo _wrap_GetbtGeneric6DofConstraint_M_objectType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  result = (int) ((swig_b1)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofConstraint_getObjectType_bt_e001408c92acdfd7(btGeneric6DofConstraint *_swig_go_0) {
  btGeneric6DofConstraint *arg1 = (btGeneric6DofConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraint **)&_swig_go_0; 
  
  btTypedConstraint *swig_b0 = (btTypedConstraint *)arg1;
  btTypedObject *swig_b1 = (btTypedObject *)swig_b0;
  result = (int)((btTypedObject const *)swig_b1)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_typeConstraintData_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btTypedConstraintData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTypedConstraintData *arg2 = (btTypedConstraintData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btTypedConstraintData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_typeConstraintData = *arg2;
  
}


btTypedConstraintData *_wrap_btGeneric6DofConstraintData_m_typeConstraintData_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTypedConstraintData *result = 0 ;
  btTypedConstraintData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btTypedConstraintData *)& ((arg1)->m_typeConstraintData);
  *(btTypedConstraintData **)&_swig_go_result = (btTypedConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_rbAFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbAFrame = *arg2;
  
}


btTransformFloatData *_wrap_btGeneric6DofConstraintData_m_rbAFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_rbAFrame);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_rbBFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btTransformFloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTransformFloatData *arg2 = (btTransformFloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btTransformFloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbBFrame = *arg2;
  
}


btTransformFloatData *_wrap_btGeneric6DofConstraintData_m_rbBFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btTransformFloatData *result = 0 ;
  btTransformFloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btTransformFloatData *)& ((arg1)->m_rbBFrame);
  *(btTransformFloatData **)&_swig_go_result = (btTransformFloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_linearUpperLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearUpperLimit = *arg2;
  
}


btVector3FloatData *_wrap_btGeneric6DofConstraintData_m_linearUpperLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_linearUpperLimit);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_linearLowerLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearLowerLimit = *arg2;
  
}


btVector3FloatData *_wrap_btGeneric6DofConstraintData_m_linearLowerLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_linearLowerLimit);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_angularUpperLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularUpperLimit = *arg2;
  
}


btVector3FloatData *_wrap_btGeneric6DofConstraintData_m_angularUpperLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_angularUpperLimit);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_angularLowerLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularLowerLimit = *arg2;
  
}


btVector3FloatData *_wrap_btGeneric6DofConstraintData_m_angularLowerLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_angularLowerLimit);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useLinearReferenceFrameA = arg2;
  
}


intgo _wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useLinearReferenceFrameA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useOffsetForConstraintFrame = arg2;
  
}


intgo _wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useOffsetForConstraintFrame);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGeneric6DofConstraintData *_wrap_new_btGeneric6DofConstraintData_bt_e001408c92acdfd7() {
  btGeneric6DofConstraintData *result = 0 ;
  btGeneric6DofConstraintData *_swig_go_result;
  
  
  result = (btGeneric6DofConstraintData *)new btGeneric6DofConstraintData();
  *(btGeneric6DofConstraintData **)&_swig_go_result = (btGeneric6DofConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofConstraintData_bt_e001408c92acdfd7(btGeneric6DofConstraintData *_swig_go_0) {
  btGeneric6DofConstraintData *arg1 = (btGeneric6DofConstraintData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btTypedConstraintDoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTypedConstraintDoubleData *arg2 = (btTypedConstraintDoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btTypedConstraintDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_typeConstraintData = *arg2;
  
}


btTypedConstraintDoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTypedConstraintDoubleData *result = 0 ;
  btTypedConstraintDoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btTypedConstraintDoubleData *)& ((arg1)->m_typeConstraintData);
  *(btTypedConstraintDoubleData **)&_swig_go_result = (btTypedConstraintDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbAFrame = *arg2;
  
}


btTransformDoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_rbAFrame);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btTransformDoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTransformDoubleData *arg2 = (btTransformDoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btTransformDoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_rbBFrame = *arg2;
  
}


btTransformDoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btTransformDoubleData *result = 0 ;
  btTransformDoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btTransformDoubleData *)& ((arg1)->m_rbBFrame);
  *(btTransformDoubleData **)&_swig_go_result = (btTransformDoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearUpperLimit = *arg2;
  
}


btVector3DoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_linearUpperLimit);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_linearLowerLimit = *arg2;
  
}


btVector3DoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_linearLowerLimit);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularUpperLimit = *arg2;
  
}


btVector3DoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_angularUpperLimit);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, btVector3DoubleData *_swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *arg2 = (btVector3DoubleData *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btVector3DoubleData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_angularLowerLimit = *arg2;
  
}


btVector3DoubleData *_wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  btVector3DoubleData *result = 0 ;
  btVector3DoubleData *_swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btVector3DoubleData *)& ((arg1)->m_angularLowerLimit);
  *(btVector3DoubleData **)&_swig_go_result = (btVector3DoubleData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useLinearReferenceFrameA = arg2;
  
}


intgo _wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useLinearReferenceFrameA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_set_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useOffsetForConstraintFrame = arg2;
  
}


intgo _wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_get_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useOffsetForConstraintFrame);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGeneric6DofConstraintDoubleData2 *_wrap_new_btGeneric6DofConstraintDoubleData2_bt_e001408c92acdfd7() {
  btGeneric6DofConstraintDoubleData2 *result = 0 ;
  btGeneric6DofConstraintDoubleData2 *_swig_go_result;
  
  
  result = (btGeneric6DofConstraintDoubleData2 *)new btGeneric6DofConstraintDoubleData2();
  *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_result = (btGeneric6DofConstraintDoubleData2 *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofConstraintDoubleData2_bt_e001408c92acdfd7(btGeneric6DofConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofConstraintDoubleData2 *arg1 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  
  arg1 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btGetConstraintIslandId_bt_e001408c92acdfd7(btTypedConstraint *_swig_go_0) {
  btTypedConstraint *arg1 = (btTypedConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btTypedConstraint **)&_swig_go_0; 
  
  result = (int)btGetConstraintIslandId((btTypedConstraint const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


btSortConstraintOnIslandPredicate *_wrap_new_btSortConstraintOnIslandPredicate_bt_e001408c92acdfd7() {
  btSortConstraintOnIslandPredicate *result = 0 ;
  btSortConstraintOnIslandPredicate *_swig_go_result;
  
  
  result = (btSortConstraintOnIslandPredicate *)new btSortConstraintOnIslandPredicate();
  *(btSortConstraintOnIslandPredicate **)&_swig_go_result = (btSortConstraintOnIslandPredicate *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSortConstraintOnIslandPredicate_bt_e001408c92acdfd7(btSortConstraintOnIslandPredicate *_swig_go_0) {
  btSortConstraintOnIslandPredicate *arg1 = (btSortConstraintOnIslandPredicate *) 0 ;
  
  arg1 = *(btSortConstraintOnIslandPredicate **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_InplaceSolverIslandCallback_m_solverInfo_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btContactSolverInfo *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btContactSolverInfo *arg2 = (btContactSolverInfo *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btContactSolverInfo **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_solverInfo = arg2;
  
}


btContactSolverInfo *_wrap_InplaceSolverIslandCallback_m_solverInfo_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btContactSolverInfo *result = 0 ;
  btContactSolverInfo *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btContactSolverInfo *) ((arg1)->m_solverInfo);
  *(btContactSolverInfo **)&_swig_go_result = (btContactSolverInfo *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_solver_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btConstraintSolver *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btConstraintSolver *arg2 = (btConstraintSolver *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btConstraintSolver **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_solver = arg2;
  
}


btConstraintSolver *_wrap_InplaceSolverIslandCallback_m_solver_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btConstraintSolver *result = 0 ;
  btConstraintSolver *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btConstraintSolver *) ((arg1)->m_solver);
  *(btConstraintSolver **)&_swig_go_result = (btConstraintSolver *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_sortedConstraints_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btTypedConstraint **_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btTypedConstraint **arg2 = (btTypedConstraint **) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btTypedConstraint ***)&_swig_go_1; 
  
  if (arg1) (arg1)->m_sortedConstraints = arg2;
  
}


btTypedConstraint **_wrap_InplaceSolverIslandCallback_m_sortedConstraints_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btTypedConstraint **result = 0 ;
  btTypedConstraint **_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btTypedConstraint **) ((arg1)->m_sortedConstraints);
  *(btTypedConstraint ***)&_swig_go_result = (btTypedConstraint **)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_numConstraints_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, intgo _swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  int arg2 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_numConstraints = arg2;
  
}


intgo _wrap_InplaceSolverIslandCallback_m_numConstraints_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_numConstraints);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_debugDrawer_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btIDebugDraw *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btIDebugDraw *arg2 = (btIDebugDraw *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btIDebugDraw **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_debugDrawer = arg2;
  
}


btIDebugDraw *_wrap_InplaceSolverIslandCallback_m_debugDrawer_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btIDebugDraw *result = 0 ;
  btIDebugDraw *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btIDebugDraw *) ((arg1)->m_debugDrawer);
  *(btIDebugDraw **)&_swig_go_result = (btIDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_dispatcher_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btDispatcher *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_dispatcher = arg2;
  
}


btDispatcher *_wrap_InplaceSolverIslandCallback_m_dispatcher_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btDispatcher *) ((arg1)->m_dispatcher);
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_bodies_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btAlignedObjectArray< btCollisionObject * > *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btCollisionObject * > *arg2 = (btAlignedObjectArray< btCollisionObject * > *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btCollisionObject * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_bodies = *arg2;
  
}


btAlignedObjectArray< btCollisionObject * > *_wrap_InplaceSolverIslandCallback_m_bodies_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btCollisionObject * > *result = 0 ;
  btAlignedObjectArray< btCollisionObject * > *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btCollisionObject * > *)& ((arg1)->m_bodies);
  *(btAlignedObjectArray< btCollisionObject * > **)&_swig_go_result = (btAlignedObjectArray< btCollisionObject * > *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_manifolds_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btPersistentManifold * > *arg2 = (btAlignedObjectArray< btPersistentManifold * > *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btPersistentManifold * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_manifolds = *arg2;
  
}


btAlignedObjectArray< btPersistentManifold * > *_wrap_InplaceSolverIslandCallback_m_manifolds_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btPersistentManifold * > *result = 0 ;
  btAlignedObjectArray< btPersistentManifold * > *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btPersistentManifold * > *)& ((arg1)->m_manifolds);
  *(btAlignedObjectArray< btPersistentManifold * > **)&_swig_go_result = (btAlignedObjectArray< btPersistentManifold * > *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_m_constraints_set_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btAlignedObjectArray< btTypedConstraint * > *_swig_go_1) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btTypedConstraint * > *arg2 = (btAlignedObjectArray< btTypedConstraint * > *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btTypedConstraint * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_constraints = *arg2;
  
}


btAlignedObjectArray< btTypedConstraint * > *_wrap_InplaceSolverIslandCallback_m_constraints_get_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btAlignedObjectArray< btTypedConstraint * > *result = 0 ;
  btAlignedObjectArray< btTypedConstraint * > *_swig_go_result;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btTypedConstraint * > *)& ((arg1)->m_constraints);
  *(btAlignedObjectArray< btTypedConstraint * > **)&_swig_go_result = (btAlignedObjectArray< btTypedConstraint * > *)result; 
  return _swig_go_result;
}


InplaceSolverIslandCallback *_wrap_new_InplaceSolverIslandCallback_bt_e001408c92acdfd7(btConstraintSolver *_swig_go_0, btStackAlloc *_swig_go_1, btDispatcher *_swig_go_2) {
  btConstraintSolver *arg1 = (btConstraintSolver *) 0 ;
  btStackAlloc *arg2 = (btStackAlloc *) 0 ;
  btDispatcher *arg3 = (btDispatcher *) 0 ;
  InplaceSolverIslandCallback *result = 0 ;
  InplaceSolverIslandCallback *_swig_go_result;
  
  arg1 = *(btConstraintSolver **)&_swig_go_0; 
  arg2 = *(btStackAlloc **)&_swig_go_1; 
  arg3 = *(btDispatcher **)&_swig_go_2; 
  
  result = (InplaceSolverIslandCallback *)new InplaceSolverIslandCallback(arg1,arg2,arg3);
  *(InplaceSolverIslandCallback **)&_swig_go_result = (InplaceSolverIslandCallback *)result; 
  return _swig_go_result;
}


void _wrap_InplaceSolverIslandCallback_setup_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btContactSolverInfo *_swig_go_1, btTypedConstraint **_swig_go_2, intgo _swig_go_3, btIDebugDraw *_swig_go_4) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btContactSolverInfo *arg2 = (btContactSolverInfo *) 0 ;
  btTypedConstraint **arg3 = (btTypedConstraint **) 0 ;
  int arg4 ;
  btIDebugDraw *arg5 = (btIDebugDraw *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btContactSolverInfo **)&_swig_go_1; 
  arg3 = *(btTypedConstraint ***)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btIDebugDraw **)&_swig_go_4; 
  
  (arg1)->setup(arg2,arg3,arg4,arg5);
  
}


void _wrap_InplaceSolverIslandCallback_processIsland_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0, btCollisionObject **_swig_go_1, intgo _swig_go_2, btPersistentManifold **_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  btCollisionObject **arg2 = (btCollisionObject **) 0 ;
  int arg3 ;
  btPersistentManifold **arg4 = (btPersistentManifold **) 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  arg2 = *(btCollisionObject ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(btPersistentManifold ***)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->processIsland(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_InplaceSolverIslandCallback_processConstraints_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  (arg1)->processConstraints();
  
}


void _wrap_delete_InplaceSolverIslandCallback_bt_e001408c92acdfd7(InplaceSolverIslandCallback *_swig_go_0) {
  InplaceSolverIslandCallback *arg1 = (InplaceSolverIslandCallback *) 0 ;
  
  arg1 = *(InplaceSolverIslandCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btClosestNotMeConvexResultCallback_m_me_set_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, btCollisionObject *_swig_go_1) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_me = arg2;
  
}


btCollisionObject *_wrap_btClosestNotMeConvexResultCallback_m_me_get_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btCollisionObject *result = 0 ;
  btCollisionObject *_swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  
  result = (btCollisionObject *) ((arg1)->m_me);
  *(btCollisionObject **)&_swig_go_result = (btCollisionObject *)result; 
  return _swig_go_result;
}


void _wrap_btClosestNotMeConvexResultCallback_m_allowedPenetration_set_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, float _swig_go_1) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_allowedPenetration = arg2;
  
}


float _wrap_btClosestNotMeConvexResultCallback_m_allowedPenetration_get_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_allowedPenetration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btClosestNotMeConvexResultCallback_m_pairCache_set_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, btOverlappingPairCache *_swig_go_1) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btOverlappingPairCache *arg2 = (btOverlappingPairCache *) 0 ;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = *(btOverlappingPairCache **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pairCache = arg2;
  
}


btOverlappingPairCache *_wrap_btClosestNotMeConvexResultCallback_m_pairCache_get_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btOverlappingPairCache *result = 0 ;
  btOverlappingPairCache *_swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  
  result = (btOverlappingPairCache *) ((arg1)->m_pairCache);
  *(btOverlappingPairCache **)&_swig_go_result = (btOverlappingPairCache *)result; 
  return _swig_go_result;
}


void _wrap_btClosestNotMeConvexResultCallback_m_dispatcher_set_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, btDispatcher *_swig_go_1) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_dispatcher = arg2;
  
}


btDispatcher *_wrap_btClosestNotMeConvexResultCallback_m_dispatcher_get_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  
  result = (btDispatcher *) ((arg1)->m_dispatcher);
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


btClosestNotMeConvexResultCallback *_wrap_new_btClosestNotMeConvexResultCallback_bt_e001408c92acdfd7(btCollisionObject *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btOverlappingPairCache *_swig_go_3, btDispatcher *_swig_go_4) {
  btCollisionObject *arg1 = (btCollisionObject *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btOverlappingPairCache *arg4 = (btOverlappingPairCache *) 0 ;
  btDispatcher *arg5 = (btDispatcher *) 0 ;
  btClosestNotMeConvexResultCallback *result = 0 ;
  btClosestNotMeConvexResultCallback *_swig_go_result;
  
  arg1 = *(btCollisionObject **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btOverlappingPairCache **)&_swig_go_3; 
  arg5 = *(btDispatcher **)&_swig_go_4; 
  
  result = (btClosestNotMeConvexResultCallback *)new btClosestNotMeConvexResultCallback(arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5);
  *(btClosestNotMeConvexResultCallback **)&_swig_go_result = (btClosestNotMeConvexResultCallback *)result; 
  return _swig_go_result;
}


float _wrap_btClosestNotMeConvexResultCallback_addSingleResult_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, btCollisionWorld::LocalConvexResult *_swig_go_1, bool _swig_go_2) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btCollisionWorld::LocalConvexResult *arg2 = 0 ;
  bool arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = *(btCollisionWorld::LocalConvexResult **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btScalar)(arg1)->addSingleResult(*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btClosestNotMeConvexResultCallback_needsCollision_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0, btBroadphaseProxy *_swig_go_1) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  btBroadphaseProxy *arg2 = (btBroadphaseProxy *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  arg2 = *(btBroadphaseProxy **)&_swig_go_1; 
  
  result = (bool)((btClosestNotMeConvexResultCallback const *)arg1)->needsCollision(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btClosestNotMeConvexResultCallback_bt_e001408c92acdfd7(btClosestNotMeConvexResultCallback *_swig_go_0) {
  btClosestNotMeConvexResultCallback *arg1 = (btClosestNotMeConvexResultCallback *) 0 ;
  
  arg1 = *(btClosestNotMeConvexResultCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_gNumClampedCcdMotions_set_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  gNumClampedCcdMotions = arg1;
  
}


intgo _wrap_gNumClampedCcdMotions_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)gNumClampedCcdMotions;
  _swig_go_result = result; 
  return _swig_go_result;
}


btUnionFindElementSortPredicate *_wrap_new_btUnionFindElementSortPredicate_bt_e001408c92acdfd7() {
  btUnionFindElementSortPredicate *result = 0 ;
  btUnionFindElementSortPredicate *_swig_go_result;
  
  
  result = (btUnionFindElementSortPredicate *)new btUnionFindElementSortPredicate();
  *(btUnionFindElementSortPredicate **)&_swig_go_result = (btUnionFindElementSortPredicate *)result; 
  return _swig_go_result;
}


void _wrap_delete_btUnionFindElementSortPredicate_bt_e001408c92acdfd7(btUnionFindElementSortPredicate *_swig_go_0) {
  btUnionFindElementSortPredicate *arg1 = (btUnionFindElementSortPredicate *) 0 ;
  
  arg1 = *(btUnionFindElementSortPredicate **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_getIslandId_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  
  result = (int)getIslandId((btPersistentManifold const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


btPersistentManifoldSortPredicate *_wrap_new_btPersistentManifoldSortPredicate_bt_e001408c92acdfd7() {
  btPersistentManifoldSortPredicate *result = 0 ;
  btPersistentManifoldSortPredicate *_swig_go_result;
  
  
  result = (btPersistentManifoldSortPredicate *)new btPersistentManifoldSortPredicate();
  *(btPersistentManifoldSortPredicate **)&_swig_go_result = (btPersistentManifoldSortPredicate *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPersistentManifoldSortPredicate_bt_e001408c92acdfd7(btPersistentManifoldSortPredicate *_swig_go_0) {
  btPersistentManifoldSortPredicate *arg1 = (btPersistentManifoldSortPredicate *) 0 ;
  
  arg1 = *(btPersistentManifoldSortPredicate **)&_swig_go_0; 
  
  delete arg1;
  
}


btPersistentManifoldSortPredicateDeterministic *_wrap_new_btPersistentManifoldSortPredicateDeterministic_bt_e001408c92acdfd7() {
  btPersistentManifoldSortPredicateDeterministic *result = 0 ;
  btPersistentManifoldSortPredicateDeterministic *_swig_go_result;
  
  
  result = (btPersistentManifoldSortPredicateDeterministic *)new btPersistentManifoldSortPredicateDeterministic();
  *(btPersistentManifoldSortPredicateDeterministic **)&_swig_go_result = (btPersistentManifoldSortPredicateDeterministic *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPersistentManifoldSortPredicateDeterministic_bt_e001408c92acdfd7(btPersistentManifoldSortPredicateDeterministic *_swig_go_0) {
  btPersistentManifoldSortPredicateDeterministic *arg1 = (btPersistentManifoldSortPredicateDeterministic *) 0 ;
  
  arg1 = *(btPersistentManifoldSortPredicateDeterministic **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btGjkPairDetector_m_lastUsedMethod_set_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, intgo _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_lastUsedMethod = arg2;
  
}


intgo _wrap_btGjkPairDetector_m_lastUsedMethod_get_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_lastUsedMethod);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGjkPairDetector_m_curIter_set_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, intgo _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_curIter = arg2;
  
}


intgo _wrap_btGjkPairDetector_m_curIter_get_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_curIter);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGjkPairDetector_m_degenerateSimplex_set_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, intgo _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_degenerateSimplex = arg2;
  
}


intgo _wrap_btGjkPairDetector_m_degenerateSimplex_get_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_degenerateSimplex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGjkPairDetector_m_catchDegeneracies_set_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, intgo _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_catchDegeneracies = arg2;
  
}


intgo _wrap_btGjkPairDetector_m_catchDegeneracies_get_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_catchDegeneracies);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGjkPairDetector_m_fixContactNormalDirection_set_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, intgo _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_fixContactNormalDirection = arg2;
  
}


intgo _wrap_btGjkPairDetector_m_fixContactNormalDirection_get_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_fixContactNormalDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGjkPairDetector *_wrap_new_btGjkPairDetector__SWIG_0_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btConvexShape *_swig_go_1, btVoronoiSimplexSolver *_swig_go_2, btConvexPenetrationDepthSolver *_swig_go_3) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  btVoronoiSimplexSolver *arg3 = (btVoronoiSimplexSolver *) 0 ;
  btConvexPenetrationDepthSolver *arg4 = (btConvexPenetrationDepthSolver *) 0 ;
  btGjkPairDetector *result = 0 ;
  btGjkPairDetector *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = *(btVoronoiSimplexSolver **)&_swig_go_2; 
  arg4 = *(btConvexPenetrationDepthSolver **)&_swig_go_3; 
  
  result = (btGjkPairDetector *)new btGjkPairDetector((btConvexShape const *)arg1,(btConvexShape const *)arg2,arg3,arg4);
  *(btGjkPairDetector **)&_swig_go_result = (btGjkPairDetector *)result; 
  return _swig_go_result;
}


btGjkPairDetector *_wrap_new_btGjkPairDetector__SWIG_1_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btConvexShape *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4, float _swig_go_5, btVoronoiSimplexSolver *_swig_go_6, btConvexPenetrationDepthSolver *_swig_go_7) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btVoronoiSimplexSolver *arg7 = (btVoronoiSimplexSolver *) 0 ;
  btConvexPenetrationDepthSolver *arg8 = (btConvexPenetrationDepthSolver *) 0 ;
  btGjkPairDetector *result = 0 ;
  btGjkPairDetector *_swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = *(btVoronoiSimplexSolver **)&_swig_go_6; 
  arg8 = *(btConvexPenetrationDepthSolver **)&_swig_go_7; 
  
  result = (btGjkPairDetector *)new btGjkPairDetector((btConvexShape const *)arg1,(btConvexShape const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(btGjkPairDetector **)&_swig_go_result = (btGjkPairDetector *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGjkPairDetector_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btGjkPairDetector_getClosestPoints__SWIG_0_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3, bool _swig_go_4) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  bool arg5 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_btGjkPairDetector_getClosestPoints__SWIG_1_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4);
  
}


void _wrap_btGjkPairDetector_getClosestPointsNonVirtual_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  
  (arg1)->getClosestPointsNonVirtual((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4);
  
}


void _wrap_btGjkPairDetector_setMinkowskiA_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btConvexShape *_swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  
  (arg1)->setMinkowskiA((btConvexShape const *)arg2);
  
}


void _wrap_btGjkPairDetector_setMinkowskiB_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btConvexShape *_swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btConvexShape *arg2 = (btConvexShape *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btConvexShape **)&_swig_go_1; 
  
  (arg1)->setMinkowskiB((btConvexShape const *)arg2);
  
}


void _wrap_btGjkPairDetector_setCachedSeparatingAxis_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btVector3 *_swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setCachedSeparatingAxis((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btGjkPairDetector_getCachedSeparatingAxis_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (btVector3 *) &((btGjkPairDetector const *)arg1)->getCachedSeparatingAxis();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGjkPairDetector_getCachedSeparatingDistance_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  
  result = (btScalar)((btGjkPairDetector const *)arg1)->getCachedSeparatingDistance();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGjkPairDetector_setPenetrationDepthSolver_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, btConvexPenetrationDepthSolver *_swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  btConvexPenetrationDepthSolver *arg2 = (btConvexPenetrationDepthSolver *) 0 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = *(btConvexPenetrationDepthSolver **)&_swig_go_1; 
  
  (arg1)->setPenetrationDepthSolver(arg2);
  
}


void _wrap_btGjkPairDetector_setIgnoreMargin_bt_e001408c92acdfd7(btGjkPairDetector *_swig_go_0, bool _swig_go_1) {
  btGjkPairDetector *arg1 = (btGjkPairDetector *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGjkPairDetector **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setIgnoreMargin(arg2);
  
}


void _wrap_SupportVertexCallback_m_worldTrans_set_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0, btTransform *_swig_go_1) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_worldTrans = *arg2;
  
}


btTransform *_wrap_SupportVertexCallback_m_worldTrans_get_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_worldTrans);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_SupportVertexCallback_m_maxDot_set_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0, float _swig_go_1) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_maxDot = arg2;
  
}


float _wrap_SupportVertexCallback_m_maxDot_get_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_maxDot);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SupportVertexCallback_m_supportVecLocal_set_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0, btVector3 *_swig_go_1) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_supportVecLocal = *arg2;
  
}


btVector3 *_wrap_SupportVertexCallback_m_supportVecLocal_get_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_supportVecLocal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


SupportVertexCallback *_wrap_new_SupportVertexCallback_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btTransform *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  SupportVertexCallback *result = 0 ;
  SupportVertexCallback *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  result = (SupportVertexCallback *)new SupportVertexCallback((btVector3 const &)*arg1,(btTransform const &)*arg2);
  *(SupportVertexCallback **)&_swig_go_result = (SupportVertexCallback *)result; 
  return _swig_go_result;
}


void _wrap_SupportVertexCallback_processTriangle_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


btVector3 *_wrap_SupportVertexCallback_GetSupportVertexWorldSpace_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  result = (arg1)->GetSupportVertexWorldSpace();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_SupportVertexCallback_GetSupportVertexLocal_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  result = (arg1)->GetSupportVertexLocal();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_delete_SupportVertexCallback_bt_e001408c92acdfd7(SupportVertexCallback *_swig_go_0) {
  SupportVertexCallback *arg1 = (SupportVertexCallback *) 0 ;
  
  arg1 = *(SupportVertexCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_getQuantized_bt_e001408c92acdfd7(float _swig_go_0) {
  btScalar arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  
  result = (int)getQuantized(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


btHeightfieldTerrainShape::Range *_wrap_minmaxRange_bt_e001408c92acdfd7(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  btScalar arg1 ;
  btScalar arg2 ;
  btScalar arg3 ;
  btHeightfieldTerrainShape::Range result;
  btHeightfieldTerrainShape::Range *_swig_go_result;
  
  arg1 = (btScalar)_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = minmaxRange(arg1,arg2,arg3);
  *(btHeightfieldTerrainShape::Range **)&_swig_go_result = new btHeightfieldTerrainShape::Range(result); 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_shape_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, btHeightfieldTerrainShape *_swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  btHeightfieldTerrainShape *arg2 = (btHeightfieldTerrainShape *) 0 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = *(btHeightfieldTerrainShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->shape = (btHeightfieldTerrainShape const *)arg2;
  
}


btHeightfieldTerrainShape *_wrap_ProcessTrianglesAction_shape_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  btHeightfieldTerrainShape *result = 0 ;
  btHeightfieldTerrainShape *_swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (btHeightfieldTerrainShape *) ((arg1)->shape);
  *(btHeightfieldTerrainShape **)&_swig_go_result = (btHeightfieldTerrainShape *)result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_flipQuadEdges_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, bool _swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  bool arg2 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->flipQuadEdges = arg2;
  
}


bool _wrap_ProcessTrianglesAction_flipQuadEdges_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (bool) ((arg1)->flipQuadEdges);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_useDiamondSubdivision_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, bool _swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  bool arg2 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->useDiamondSubdivision = arg2;
  
}


bool _wrap_ProcessTrianglesAction_useDiamondSubdivision_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (bool) ((arg1)->useDiamondSubdivision);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_width_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, intgo _swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  int arg2 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->width = arg2;
  
}


intgo _wrap_ProcessTrianglesAction_width_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (int) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_length_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, intgo _swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  int arg2 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->length = arg2;
  
}


intgo _wrap_ProcessTrianglesAction_length_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (int) ((arg1)->length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_callback_set_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, btTriangleCallback *_swig_go_1) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  
  if (arg1) (arg1)->callback = arg2;
  
}


btTriangleCallback *_wrap_ProcessTrianglesAction_callback_get_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  btTriangleCallback *result = 0 ;
  btTriangleCallback *_swig_go_result;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  result = (btTriangleCallback *) ((arg1)->callback);
  *(btTriangleCallback **)&_swig_go_result = (btTriangleCallback *)result; 
  return _swig_go_result;
}


void _wrap_ProcessTrianglesAction_exec_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((ProcessTrianglesAction const *)arg1)->exec(arg2,arg3);
  
}


ProcessTrianglesAction *_wrap_new_ProcessTrianglesAction_bt_e001408c92acdfd7() {
  ProcessTrianglesAction *result = 0 ;
  ProcessTrianglesAction *_swig_go_result;
  
  
  result = (ProcessTrianglesAction *)new ProcessTrianglesAction();
  *(ProcessTrianglesAction **)&_swig_go_result = (ProcessTrianglesAction *)result; 
  return _swig_go_result;
}


void _wrap_delete_ProcessTrianglesAction_bt_e001408c92acdfd7(ProcessTrianglesAction *_swig_go_0) {
  ProcessTrianglesAction *arg1 = (ProcessTrianglesAction *) 0 ;
  
  arg1 = *(ProcessTrianglesAction **)&_swig_go_0; 
  
  delete arg1;
  
}


btAlignedObjectArray< btHeightfieldTerrainShape::Range > *_wrap_ProcessVBoundsAction_vbounds_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btAlignedObjectArray< btHeightfieldTerrainShape::Range > *result = 0 ;
  btAlignedObjectArray< btHeightfieldTerrainShape::Range > *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btHeightfieldTerrainShape::Range > *) &(btAlignedObjectArray< btHeightfieldTerrainShape::Range > const &) ((arg1)->vbounds);
  *(btAlignedObjectArray< btHeightfieldTerrainShape::Range > **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_width_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, intgo _swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int arg2 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->width = arg2;
  
}


intgo _wrap_ProcessVBoundsAction_width_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (int) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_length_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, intgo _swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int arg2 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->length = arg2;
  
}


intgo _wrap_ProcessVBoundsAction_length_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (int) ((arg1)->length);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_chunkSize_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, intgo _swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int arg2 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->chunkSize = arg2;
  
}


intgo _wrap_ProcessVBoundsAction_chunkSize_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (int) ((arg1)->chunkSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_rayBegin_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, btVector3 *_swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->rayBegin = *arg2;
  
}


btVector3 *_wrap_ProcessVBoundsAction_rayBegin_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->rayBegin);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_rayEnd_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, btVector3 *_swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->rayEnd = *arg2;
  
}


btVector3 *_wrap_ProcessVBoundsAction_rayEnd_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->rayEnd);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_rayDir_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, btVector3 *_swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->rayDir = *arg2;
  
}


btVector3 *_wrap_ProcessVBoundsAction_rayDir_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->rayDir);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_m_indices_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, intgo *_swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_indices = arg2;
  
}


intgo *_wrap_ProcessVBoundsAction_m_indices_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (int *) ((arg1)->m_indices);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_ProcessVBoundsAction_processTriangles_set_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0, ProcessTrianglesAction *_swig_go_1) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  ProcessTrianglesAction *arg2 = (ProcessTrianglesAction *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  arg2 = *(ProcessTrianglesAction **)&_swig_go_1; 
  
  if (arg1) (arg1)->processTriangles = *arg2;
  
}


ProcessTrianglesAction *_wrap_ProcessVBoundsAction_processTriangles_get_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  ProcessTrianglesAction *result = 0 ;
  ProcessTrianglesAction *_swig_go_result;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  result = (ProcessTrianglesAction *)& ((arg1)->processTriangles);
  *(ProcessTrianglesAction **)&_swig_go_result = (ProcessTrianglesAction *)result; 
  return _swig_go_result;
}


ProcessVBoundsAction *_wrap_new_ProcessVBoundsAction_bt_e001408c92acdfd7(btAlignedObjectArray< btHeightfieldTerrainShape::Range > *_swig_go_0, intgo *_swig_go_1) {
  btAlignedObjectArray< btHeightfieldTerrainShape::Range > *arg1 = 0 ;
  int *arg2 = (int *) 0 ;
  ProcessVBoundsAction *result = 0 ;
  ProcessVBoundsAction *_swig_go_result;
  
  arg1 = *(btAlignedObjectArray< btHeightfieldTerrainShape::Range > **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (ProcessVBoundsAction *)new ProcessVBoundsAction((btAlignedObjectArray< btHeightfieldTerrainShape::Range > const &)*arg1,arg2);
  *(ProcessVBoundsAction **)&_swig_go_result = (ProcessVBoundsAction *)result; 
  return _swig_go_result;
}


void _wrap_delete_ProcessVBoundsAction_bt_e001408c92acdfd7(ProcessVBoundsAction *_swig_go_0) {
  ProcessVBoundsAction *arg1 = (ProcessVBoundsAction *) 0 ;
  
  arg1 = *(ProcessVBoundsAction **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btGjkEpaSolver2_StackSizeRequirement_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)btGjkEpaSolver2::StackSizeRequirement();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGjkEpaSolver2_Distance_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btGjkEpaSolver2::sResults *_swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btGjkEpaSolver2::sResults *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btGjkEpaSolver2::sResults **)&_swig_go_5; 
  
  result = (bool)btGjkEpaSolver2::Distance((btConvexShape const *)arg1,(btTransform const &)*arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGjkEpaSolver2_Penetration__SWIG_0_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btGjkEpaSolver2::sResults *_swig_go_5, bool _swig_go_6) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btGjkEpaSolver2::sResults *arg6 = 0 ;
  bool arg7 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btGjkEpaSolver2::sResults **)&_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (bool)btGjkEpaSolver2::Penetration((btConvexShape const *)arg1,(btTransform const &)*arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,*arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGjkEpaSolver2_Penetration__SWIG_1_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btGjkEpaSolver2::sResults *_swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btGjkEpaSolver2::sResults *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btGjkEpaSolver2::sResults **)&_swig_go_5; 
  
  result = (bool)btGjkEpaSolver2::Penetration((btConvexShape const *)arg1,(btTransform const &)*arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGjkEpaSolver2_SignedDistance__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btGjkEpaSolver2::sResults *_swig_go_4) {
  btVector3 *arg1 = 0 ;
  btScalar arg2 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btGjkEpaSolver2::sResults *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btGjkEpaSolver2::sResults **)&_swig_go_4; 
  
  result = (btScalar)btGjkEpaSolver2::SignedDistance((btVector3 const &)*arg1,arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGjkEpaSolver2_SignedDistance__SWIG_1_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btGjkEpaSolver2::sResults *_swig_go_5) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btGjkEpaSolver2::sResults *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btGjkEpaSolver2::sResults **)&_swig_go_5; 
  
  result = (bool)btGjkEpaSolver2::SignedDistance((btConvexShape const *)arg1,(btTransform const &)*arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


btGjkEpaSolver2 *_wrap_new_btGjkEpaSolver2_bt_e001408c92acdfd7() {
  btGjkEpaSolver2 *result = 0 ;
  btGjkEpaSolver2 *_swig_go_result;
  
  
  result = (btGjkEpaSolver2 *)new btGjkEpaSolver2();
  *(btGjkEpaSolver2 **)&_swig_go_result = (btGjkEpaSolver2 *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGjkEpaSolver2_bt_e001408c92acdfd7(btGjkEpaSolver2 *_swig_go_0) {
  btGjkEpaSolver2 *arg1 = (btGjkEpaSolver2 *) 0 ;
  
  arg1 = *(btGjkEpaSolver2 **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_EPA_MAX_FACES_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)((128*2));
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MinkowskiDiff_m_shapes_set_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btConvexShape *(*_swig_go_1)[2]) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btConvexShape **arg2 = (btConvexShape **) (btConvexShape **)0 ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btConvexShape ***)&_swig_go_1; 
  
  {
    size_t ii;
    btConvexShape const * *b = (btConvexShape const * *) arg1->m_shapes;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((btConvexShape const * *) arg2 + ii);
  }
  
}


btConvexShape *(*_wrap_MinkowskiDiff_m_shapes_get_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0))[2] {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btConvexShape **result = 0 ;
  btConvexShape *(*_swig_go_result)[2];
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  
  result = (btConvexShape **)(btConvexShape **) ((arg1)->m_shapes);
  *(btConvexShape ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MinkowskiDiff_m_toshape1_set_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btMatrix3x3 *_swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btMatrix3x3 *arg2 = (btMatrix3x3 *) 0 ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btMatrix3x3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_toshape1 = *arg2;
  
}


btMatrix3x3 *_wrap_MinkowskiDiff_m_toshape1_get_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btMatrix3x3 *result = 0 ;
  btMatrix3x3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  
  result = (btMatrix3x3 *)& ((arg1)->m_toshape1);
  *(btMatrix3x3 **)&_swig_go_result = (btMatrix3x3 *)result; 
  return _swig_go_result;
}


void _wrap_MinkowskiDiff_m_toshape0_set_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btTransform *_swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btTransform *arg2 = (btTransform *) 0 ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_toshape0 = *arg2;
  
}


btTransform *_wrap_MinkowskiDiff_m_toshape0_get_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  
  result = (btTransform *)& ((arg1)->m_toshape0);
  *(btTransform **)&_swig_go_result = (btTransform *)result; 
  return _swig_go_result;
}


void _wrap_MinkowskiDiff_Ls_set_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, void* _swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 (btConvexShape::*arg2)(btVector3 const &) const ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btVector3 (btConvexShape::**)(btVector3 const &) const)_swig_go_1; 
  
  if (arg1) (arg1)->Ls = (btVector3 (btConvexShape::*)(btVector3 const &) const)arg2;
  
}


void* _wrap_MinkowskiDiff_Ls_get_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 (btConvexShape::*result)(btVector3 const &) const;
  void* _swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  
  result = (btVector3 (btConvexShape::*)(btVector3 const &) const) ((arg1)->Ls);
  
  struct swig_out_type {
    intgo size; void* val; 
  } *swig_out;
  swig_out = (struct swig_out_type*)malloc(sizeof(*swig_out));
  if (swig_out) {
    swig_out->size = sizeof(btVector3 (btConvexShape::*)(btVector3 const &) const);
    swig_out->val = malloc(swig_out->size);
    if (swig_out->val) {
      *(btVector3 (btConvexShape::**)(btVector3 const &) const)(swig_out->val) = result;
    }
  }
  _swig_go_result = swig_out;
  
  return _swig_go_result;
}


gjkepa2_impl::MinkowskiDiff *_wrap_new_MinkowskiDiff_bt_e001408c92acdfd7() {
  gjkepa2_impl::MinkowskiDiff *result = 0 ;
  gjkepa2_impl::MinkowskiDiff *_swig_go_result;
  
  
  result = (gjkepa2_impl::MinkowskiDiff *)new gjkepa2_impl::MinkowskiDiff();
  *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_result = (gjkepa2_impl::MinkowskiDiff *)result; 
  return _swig_go_result;
}


void _wrap_MinkowskiDiff_EnableMargin_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, bool _swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  bool arg2 ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->EnableMargin(arg2);
  
}


btVector3 *_wrap_MinkowskiDiff_Support0_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btVector3 *_swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((gjkepa2_impl::MinkowskiDiff const *)arg1)->Support0((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_MinkowskiDiff_Support1_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btVector3 *_swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((gjkepa2_impl::MinkowskiDiff const *)arg1)->Support1((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_MinkowskiDiff_Support__SWIG_0_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btVector3 *_swig_go_1) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((gjkepa2_impl::MinkowskiDiff const *)arg1)->Support((btVector3 const &)*arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


btVector3 *_wrap_MinkowskiDiff_Support__SWIG_1_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  btVector3 *arg2 = 0 ;
  gjkepa2_impl::U arg3 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (gjkepa2_impl::U)_swig_go_2; 
  
  result = ((gjkepa2_impl::MinkowskiDiff const *)arg1)->Support((btVector3 const &)*arg2,arg3);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_delete_MinkowskiDiff_bt_e001408c92acdfd7(gjkepa2_impl::MinkowskiDiff *_swig_go_0) {
  gjkepa2_impl::MinkowskiDiff *arg1 = (gjkepa2_impl::MinkowskiDiff *) 0 ;
  
  arg1 = *(gjkepa2_impl::MinkowskiDiff **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_GJK_m_shape_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::MinkowskiDiff *_swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::tShape *arg2 = (gjkepa2_impl::tShape *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::tShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_shape = *arg2;
  
}


gjkepa2_impl::MinkowskiDiff *_wrap_GJK_m_shape_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::tShape *result = 0 ;
  gjkepa2_impl::MinkowskiDiff *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::tShape *)& ((arg1)->m_shape);
  *(gjkepa2_impl::tShape **)&_swig_go_result = (gjkepa2_impl::tShape *)result; 
  return _swig_go_result;
}


void _wrap_GJK_m_ray_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, btVector3 *_swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_ray = *arg2;
  
}


btVector3 *_wrap_GJK_m_ray_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_ray);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_GJK_m_distance_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, float _swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_distance = arg2;
  
}


float _wrap_GJK_m_distance_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_distance);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_simplices_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSimplex (*_swig_go_1)[2]) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *arg2 = (gjkepa2_impl::GJK::sSimplex *) (gjkepa2_impl::GJK::sSimplex *)0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_1; 
  
  {
    size_t ii;
    gjkepa2_impl::GJK::sSimplex *b = (gjkepa2_impl::GJK::sSimplex *) arg1->m_simplices;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((gjkepa2_impl::GJK::sSimplex *) arg2 + ii);
  }
  
}


gjkepa2_impl::GJK::sSimplex (*_wrap_GJK_m_simplices_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0))[2] {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *result = 0 ;
  gjkepa2_impl::GJK::sSimplex (*_swig_go_result)[2];
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::sSimplex *)(gjkepa2_impl::GJK::sSimplex *) ((arg1)->m_simplices);
  *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_store_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSV (*_swig_go_1)[4]) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSV *arg2 = (gjkepa2_impl::GJK::sSV *) (gjkepa2_impl::GJK::sSV *)0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSV **)&_swig_go_1; 
  
  {
    size_t ii;
    gjkepa2_impl::GJK::sSV *b = (gjkepa2_impl::GJK::sSV *) arg1->m_store;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((gjkepa2_impl::GJK::sSV *) arg2 + ii);
  }
  
}


gjkepa2_impl::GJK::sSV (*_wrap_GJK_m_store_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0))[4] {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSV *result = 0 ;
  gjkepa2_impl::GJK::sSV (*_swig_go_result)[4];
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::sSV *)(gjkepa2_impl::GJK::sSV *) ((arg1)->m_store);
  *(gjkepa2_impl::GJK::sSV **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_free_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSV *(*_swig_go_1)[4]) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSV **arg2 = (gjkepa2_impl::GJK::sSV **) (gjkepa2_impl::GJK::sSV **)0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSV ***)&_swig_go_1; 
  
  {
    size_t ii;
    gjkepa2_impl::GJK::sSV * *b = (gjkepa2_impl::GJK::sSV * *) arg1->m_free;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((gjkepa2_impl::GJK::sSV * *) arg2 + ii);
  }
  
}


gjkepa2_impl::GJK::sSV *(*_wrap_GJK_m_free_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0))[4] {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSV **result = 0 ;
  gjkepa2_impl::GJK::sSV *(*_swig_go_result)[4];
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::sSV **)(gjkepa2_impl::GJK::sSV **) ((arg1)->m_free);
  *(gjkepa2_impl::GJK::sSV ***)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_nfree_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, intgo _swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::U arg2 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = (gjkepa2_impl::U)_swig_go_1; 
  
  if (arg1) (arg1)->m_nfree = arg2;
  
}


intgo _wrap_GJK_m_nfree_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::U result;
  intgo _swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::U) ((arg1)->m_nfree);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_current_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, intgo _swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::U arg2 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = (gjkepa2_impl::U)_swig_go_1; 
  
  if (arg1) (arg1)->m_current = arg2;
  
}


intgo _wrap_GJK_m_current_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::U result;
  intgo _swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::U) ((arg1)->m_current);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_m_simplex_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSimplex *_swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *arg2 = (gjkepa2_impl::GJK::sSimplex *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_simplex = arg2;
  
}


gjkepa2_impl::GJK::sSimplex *_wrap_GJK_m_simplex_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *result = 0 ;
  gjkepa2_impl::GJK::sSimplex *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::sSimplex *) ((arg1)->m_simplex);
  *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_result = (gjkepa2_impl::GJK::sSimplex *)result; 
  return _swig_go_result;
}


void _wrap_GJK_m_status_set_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::eStatus::_ *_swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::eStatus::_ *arg2 = (gjkepa2_impl::GJK::eStatus::_ *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::eStatus::_ **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_status = *arg2;
  
}


gjkepa2_impl::GJK::eStatus::_ *_wrap_GJK_m_status_get_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::eStatus::_ *result = 0 ;
  gjkepa2_impl::GJK::eStatus::_ *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::eStatus::_ *)& ((arg1)->m_status);
  *(gjkepa2_impl::GJK::eStatus::_ **)&_swig_go_result = (gjkepa2_impl::GJK::eStatus::_ *)result; 
  return _swig_go_result;
}


gjkepa2_impl::GJK *_wrap_new_GJK_bt_e001408c92acdfd7() {
  gjkepa2_impl::GJK *result = 0 ;
  gjkepa2_impl::GJK *_swig_go_result;
  
  
  result = (gjkepa2_impl::GJK *)new gjkepa2_impl::GJK();
  *(gjkepa2_impl::GJK **)&_swig_go_result = (gjkepa2_impl::GJK *)result; 
  return _swig_go_result;
}


void _wrap_GJK_Initialize_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  (arg1)->Initialize();
  
}


gjkepa2_impl::GJK::eStatus::_ *_wrap_GJK_Evaluate_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::MinkowskiDiff *_swig_go_1, btVector3 *_swig_go_2) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::tShape *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  gjkepa2_impl::GJK::eStatus::_ result;
  gjkepa2_impl::GJK::eStatus::_ *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::tShape **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (arg1)->Evaluate((gjkepa2_impl::tShape const &)*arg2,(btVector3 const &)*arg3);
  *(gjkepa2_impl::GJK::eStatus::_ **)&_swig_go_result = new gjkepa2_impl::GJK::eStatus::_(result); 
  return _swig_go_result;
}


bool _wrap_GJK_EncloseOrigin_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  result = (bool)(arg1)->EncloseOrigin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_GJK_getsupport_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, btVector3 *_swig_go_1, gjkepa2_impl::GJK::sSV *_swig_go_2) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  btVector3 *arg2 = 0 ;
  gjkepa2_impl::GJK::sSV *arg3 = 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(gjkepa2_impl::GJK::sSV **)&_swig_go_2; 
  
  ((gjkepa2_impl::GJK const *)arg1)->getsupport((btVector3 const &)*arg2,*arg3);
  
}


void _wrap_GJK_removevertice_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSimplex *_swig_go_1) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *arg2 = 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_1; 
  
  (arg1)->removevertice(*arg2);
  
}


void _wrap_GJK_appendvertice_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0, gjkepa2_impl::GJK::sSimplex *_swig_go_1, btVector3 *_swig_go_2) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  gjkepa2_impl::GJK::sSimplex *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->appendvertice(*arg2,(btVector3 const &)*arg3);
  
}


float _wrap_GJK_det_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (btScalar)gjkepa2_impl::GJK::det((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GJK_projectorigin__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2, intgo *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = (btScalar *) 0 ;
  gjkepa2_impl::U *arg4 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(gjkepa2_impl::U **)&_swig_go_3; 
  
  result = (btScalar)gjkepa2_impl::GJK::projectorigin((btVector3 const &)*arg1,(btVector3 const &)*arg2,arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GJK_projectorigin__SWIG_1_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float *_swig_go_3, intgo *_swig_go_4) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar *arg4 = (btScalar *) 0 ;
  gjkepa2_impl::U *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btScalar **)&_swig_go_3; 
  arg5 = *(gjkepa2_impl::U **)&_swig_go_4; 
  
  result = (btScalar)gjkepa2_impl::GJK::projectorigin((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GJK_projectorigin__SWIG_2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, intgo *_swig_go_5) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = (btScalar *) 0 ;
  gjkepa2_impl::U *arg6 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(gjkepa2_impl::U **)&_swig_go_5; 
  
  result = (btScalar)gjkepa2_impl::GJK::projectorigin((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_GJK_bt_e001408c92acdfd7(gjkepa2_impl::GJK *_swig_go_0) {
  gjkepa2_impl::GJK *arg1 = (gjkepa2_impl::GJK *) 0 ;
  
  arg1 = *(gjkepa2_impl::GJK **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_EPA_m_status_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::EPA::eStatus::_ *_swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::eStatus::_ *arg2 = (gjkepa2_impl::EPA::eStatus::_ *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::eStatus::_ **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_status = *arg2;
  
}


gjkepa2_impl::EPA::eStatus::_ *_wrap_EPA_m_status_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::eStatus::_ *result = 0 ;
  gjkepa2_impl::EPA::eStatus::_ *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::eStatus::_ *)& ((arg1)->m_status);
  *(gjkepa2_impl::EPA::eStatus::_ **)&_swig_go_result = (gjkepa2_impl::EPA::eStatus::_ *)result; 
  return _swig_go_result;
}


void _wrap_EPA_m_result_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::GJK::sSimplex *_swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::GJK::sSimplex *arg2 = (gjkepa2_impl::GJK::sSimplex *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_result = *arg2;
  
}


gjkepa2_impl::GJK::sSimplex *_wrap_EPA_m_result_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::GJK::sSimplex *result = 0 ;
  gjkepa2_impl::GJK::sSimplex *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::GJK::sSimplex *)& ((arg1)->m_result);
  *(gjkepa2_impl::GJK::sSimplex **)&_swig_go_result = (gjkepa2_impl::GJK::sSimplex *)result; 
  return _swig_go_result;
}


void _wrap_EPA_m_normal_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, btVector3 *_swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_normal = *arg2;
  
}


btVector3 *_wrap_EPA_m_normal_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_normal);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_EPA_m_depth_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, float _swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_depth = arg2;
  
}


float _wrap_EPA_m_depth_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_depth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EPA_m_sv_store_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::GJK::sSV (*_swig_go_1)[128]) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sSV *arg2 = (gjkepa2_impl::EPA::sSV *) (gjkepa2_impl::EPA::sSV *)0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_1; 
  
  {
    size_t ii;
    gjkepa2_impl::EPA::sSV *b = (gjkepa2_impl::EPA::sSV *) arg1->m_sv_store;
    for (ii = 0; ii < (size_t)128; ii++) b[ii] = *((gjkepa2_impl::EPA::sSV *) arg2 + ii);
  }
  
}


gjkepa2_impl::GJK::sSV (*_wrap_EPA_m_sv_store_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0))[128] {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sSV *result = 0 ;
  gjkepa2_impl::GJK::sSV (*_swig_go_result)[128];
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::sSV *)(gjkepa2_impl::EPA::sSV *) ((arg1)->m_sv_store);
  *(gjkepa2_impl::EPA::sSV **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EPA_m_fc_store_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::EPA::sFace (*_swig_go_1)[(128*2)]) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sFace *arg2 = (gjkepa2_impl::EPA::sFace *) (gjkepa2_impl::EPA::sFace *)0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_1; 
  
  {
    size_t ii;
    gjkepa2_impl::EPA::sFace *b = (gjkepa2_impl::EPA::sFace *) arg1->m_fc_store;
    for (ii = 0; ii < (size_t)(128*2); ii++) b[ii] = *((gjkepa2_impl::EPA::sFace *) arg2 + ii);
  }
  
}


gjkepa2_impl::EPA::sFace (*_wrap_EPA_m_fc_store_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0))[(128*2)] {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sFace *result = 0 ;
  gjkepa2_impl::EPA::sFace (*_swig_go_result)[(128*2)];
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::sFace *)(gjkepa2_impl::EPA::sFace *) ((arg1)->m_fc_store);
  *(gjkepa2_impl::EPA::sFace **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EPA_m_nextsv_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, intgo _swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::U arg2 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = (gjkepa2_impl::U)_swig_go_1; 
  
  if (arg1) (arg1)->m_nextsv = arg2;
  
}


intgo _wrap_EPA_m_nextsv_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::U result;
  intgo _swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::U) ((arg1)->m_nextsv);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EPA_m_hull_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::EPA::sList *_swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sList *arg2 = (gjkepa2_impl::EPA::sList *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sList **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_hull = *arg2;
  
}


gjkepa2_impl::EPA::sList *_wrap_EPA_m_hull_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sList *result = 0 ;
  gjkepa2_impl::EPA::sList *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::sList *)& ((arg1)->m_hull);
  *(gjkepa2_impl::EPA::sList **)&_swig_go_result = (gjkepa2_impl::EPA::sList *)result; 
  return _swig_go_result;
}


void _wrap_EPA_m_stock_set_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::EPA::sList *_swig_go_1) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sList *arg2 = (gjkepa2_impl::EPA::sList *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sList **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_stock = *arg2;
  
}


gjkepa2_impl::EPA::sList *_wrap_EPA_m_stock_get_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sList *result = 0 ;
  gjkepa2_impl::EPA::sList *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::sList *)& ((arg1)->m_stock);
  *(gjkepa2_impl::EPA::sList **)&_swig_go_result = (gjkepa2_impl::EPA::sList *)result; 
  return _swig_go_result;
}


gjkepa2_impl::EPA *_wrap_new_EPA_bt_e001408c92acdfd7() {
  gjkepa2_impl::EPA *result = 0 ;
  gjkepa2_impl::EPA *_swig_go_result;
  
  
  result = (gjkepa2_impl::EPA *)new gjkepa2_impl::EPA();
  *(gjkepa2_impl::EPA **)&_swig_go_result = (gjkepa2_impl::EPA *)result; 
  return _swig_go_result;
}


void _wrap_EPA_bind_bt_e001408c92acdfd7(gjkepa2_impl::EPA::sFace *_swig_go_0, intgo _swig_go_1, gjkepa2_impl::EPA::sFace *_swig_go_2, intgo _swig_go_3) {
  gjkepa2_impl::EPA::sFace *arg1 = (gjkepa2_impl::EPA::sFace *) 0 ;
  gjkepa2_impl::U arg2 ;
  gjkepa2_impl::EPA::sFace *arg3 = (gjkepa2_impl::EPA::sFace *) 0 ;
  gjkepa2_impl::U arg4 ;
  
  arg1 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_0; 
  arg2 = (gjkepa2_impl::U)_swig_go_1; 
  arg3 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_2; 
  arg4 = (gjkepa2_impl::U)_swig_go_3; 
  
  gjkepa2_impl::EPA::bind(arg1,arg2,arg3,arg4);
  
}


void _wrap_EPA_append_bt_e001408c92acdfd7(gjkepa2_impl::EPA::sList *_swig_go_0, gjkepa2_impl::EPA::sFace *_swig_go_1) {
  gjkepa2_impl::EPA::sList *arg1 = 0 ;
  gjkepa2_impl::EPA::sFace *arg2 = (gjkepa2_impl::EPA::sFace *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA::sList **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_1; 
  
  gjkepa2_impl::EPA::append(*arg1,arg2);
  
}


void _wrap_EPA_remove_bt_e001408c92acdfd7(gjkepa2_impl::EPA::sList *_swig_go_0, gjkepa2_impl::EPA::sFace *_swig_go_1) {
  gjkepa2_impl::EPA::sList *arg1 = 0 ;
  gjkepa2_impl::EPA::sFace *arg2 = (gjkepa2_impl::EPA::sFace *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA::sList **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_1; 
  
  gjkepa2_impl::EPA::remove(*arg1,arg2);
  
}


void _wrap_EPA_Initialize_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  (arg1)->Initialize();
  
}


gjkepa2_impl::EPA::eStatus::_ *_wrap_EPA_Evaluate_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::GJK *_swig_go_1, btVector3 *_swig_go_2) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::GJK *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  gjkepa2_impl::EPA::eStatus::_ result;
  gjkepa2_impl::EPA::eStatus::_ *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::GJK **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  result = (arg1)->Evaluate(*arg2,(btVector3 const &)*arg3);
  *(gjkepa2_impl::EPA::eStatus::_ **)&_swig_go_result = new gjkepa2_impl::EPA::eStatus::_(result); 
  return _swig_go_result;
}


bool _wrap_EPA_getedgedist_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::EPA::sFace *_swig_go_1, gjkepa2_impl::GJK::sSV *_swig_go_2, gjkepa2_impl::GJK::sSV *_swig_go_3, float *_swig_go_4) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sFace *arg2 = (gjkepa2_impl::EPA::sFace *) 0 ;
  gjkepa2_impl::EPA::sSV *arg3 = (gjkepa2_impl::EPA::sSV *) 0 ;
  gjkepa2_impl::EPA::sSV *arg4 = (gjkepa2_impl::EPA::sSV *) 0 ;
  btScalar *arg5 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_1; 
  arg3 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_2; 
  arg4 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  
  result = (bool)(arg1)->getedgedist(arg2,arg3,arg4,*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


gjkepa2_impl::EPA::sFace *_wrap_EPA_newface_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, gjkepa2_impl::GJK::sSV *_swig_go_1, gjkepa2_impl::GJK::sSV *_swig_go_2, gjkepa2_impl::GJK::sSV *_swig_go_3, bool _swig_go_4) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sSV *arg2 = (gjkepa2_impl::EPA::sSV *) 0 ;
  gjkepa2_impl::EPA::sSV *arg3 = (gjkepa2_impl::EPA::sSV *) 0 ;
  gjkepa2_impl::EPA::sSV *arg4 = (gjkepa2_impl::EPA::sSV *) 0 ;
  bool arg5 ;
  gjkepa2_impl::EPA::sFace *result = 0 ;
  gjkepa2_impl::EPA::sFace *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_1; 
  arg3 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_2; 
  arg4 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (gjkepa2_impl::EPA::sFace *)(arg1)->newface(arg2,arg3,arg4,arg5);
  *(gjkepa2_impl::EPA::sFace **)&_swig_go_result = (gjkepa2_impl::EPA::sFace *)result; 
  return _swig_go_result;
}


gjkepa2_impl::EPA::sFace *_wrap_EPA_findbest_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::EPA::sFace *result = 0 ;
  gjkepa2_impl::EPA::sFace *_swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  result = (gjkepa2_impl::EPA::sFace *)(arg1)->findbest();
  *(gjkepa2_impl::EPA::sFace **)&_swig_go_result = (gjkepa2_impl::EPA::sFace *)result; 
  return _swig_go_result;
}


bool _wrap_EPA_expand_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0, intgo _swig_go_1, gjkepa2_impl::GJK::sSV *_swig_go_2, gjkepa2_impl::EPA::sFace *_swig_go_3, intgo _swig_go_4, gjkepa2_impl::EPA::sHorizon *_swig_go_5) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  gjkepa2_impl::U arg2 ;
  gjkepa2_impl::EPA::sSV *arg3 = (gjkepa2_impl::EPA::sSV *) 0 ;
  gjkepa2_impl::EPA::sFace *arg4 = (gjkepa2_impl::EPA::sFace *) 0 ;
  gjkepa2_impl::U arg5 ;
  gjkepa2_impl::EPA::sHorizon *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  arg2 = (gjkepa2_impl::U)_swig_go_1; 
  arg3 = *(gjkepa2_impl::EPA::sSV **)&_swig_go_2; 
  arg4 = *(gjkepa2_impl::EPA::sFace **)&_swig_go_3; 
  arg5 = (gjkepa2_impl::U)_swig_go_4; 
  arg6 = *(gjkepa2_impl::EPA::sHorizon **)&_swig_go_5; 
  
  result = (bool)(arg1)->expand(arg2,arg3,arg4,arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_EPA_bt_e001408c92acdfd7(gjkepa2_impl::EPA *_swig_go_0) {
  gjkepa2_impl::EPA *arg1 = (gjkepa2_impl::EPA *) 0 ;
  
  arg1 = *(gjkepa2_impl::EPA **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Initialize_bt_e001408c92acdfd7(btConvexShape *_swig_go_0, btTransform *_swig_go_1, btConvexShape *_swig_go_2, btTransform *_swig_go_3, btGjkEpaSolver2::sResults *_swig_go_4, gjkepa2_impl::MinkowskiDiff *_swig_go_5, bool _swig_go_6) {
  btConvexShape *arg1 = (btConvexShape *) 0 ;
  btTransform *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btTransform *arg4 = 0 ;
  btGjkEpaSolver2::sResults *arg5 = 0 ;
  gjkepa2_impl::tShape *arg6 = 0 ;
  bool arg7 ;
  
  arg1 = *(btConvexShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btGjkEpaSolver2::sResults **)&_swig_go_4; 
  arg6 = *(gjkepa2_impl::tShape **)&_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  gjkepa2_impl::Initialize((btConvexShape const *)arg1,(btTransform const &)*arg2,(btConvexShape const *)arg3,(btTransform const &)*arg4,*arg5,*arg6,arg7);
  
}


void _wrap_delete_btCollisionConfiguration_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  
  delete arg1;
  
}


btPoolAllocator *_wrap_btCollisionConfiguration_getPersistentManifoldPool_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getPersistentManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btPoolAllocator *_wrap_btCollisionConfiguration_getCollisionAlgorithmPool_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getCollisionAlgorithmPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btCollisionAlgorithmCreateFunc *_wrap_btCollisionConfiguration_getCollisionAlgorithmCreateFunc_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *result = 0 ;
  btCollisionAlgorithmCreateFunc *_swig_go_result;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btCollisionAlgorithmCreateFunc *)(arg1)->getCollisionAlgorithmCreateFunc(arg2,arg3);
  *(btCollisionAlgorithmCreateFunc **)&_swig_go_result = (btCollisionAlgorithmCreateFunc *)result; 
  return _swig_go_result;
}


btCollisionAlgorithmCreateFunc *_wrap_btCollisionConfiguration_getClosestPointsAlgorithmCreateFunc_bt_e001408c92acdfd7(btCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btCollisionConfiguration *arg1 = (btCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *result = 0 ;
  btCollisionAlgorithmCreateFunc *_swig_go_result;
  
  arg1 = *(btCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btCollisionAlgorithmCreateFunc *)(arg1)->getClosestPointsAlgorithmCreateFunc(arg2,arg3);
  *(btCollisionAlgorithmCreateFunc **)&_swig_go_result = (btCollisionAlgorithmCreateFunc *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, btPoolAllocator *_swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  btPoolAllocator *arg2 = (btPoolAllocator *) 0 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = *(btPoolAllocator **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_persistentManifoldPool = arg2;
  
}


btPoolAllocator *_wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (btPoolAllocator *) ((arg1)->m_persistentManifoldPool);
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, btPoolAllocator *_swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  btPoolAllocator *arg2 = (btPoolAllocator *) 0 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = *(btPoolAllocator **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionAlgorithmPool = arg2;
  
}


btPoolAllocator *_wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (btPoolAllocator *) ((arg1)->m_collisionAlgorithmPool);
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_defaultMaxPersistentManifoldPoolSize = arg2;
  
}


intgo _wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_defaultMaxPersistentManifoldPoolSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_defaultMaxCollisionAlgorithmPoolSize = arg2;
  
}


intgo _wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_defaultMaxCollisionAlgorithmPoolSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_customCollisionAlgorithmMaxElementSize = arg2;
  
}


intgo _wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_customCollisionAlgorithmMaxElementSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_set_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_useEpaPenetrationAlgorithm = arg2;
  
}


intgo _wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_get_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_useEpaPenetrationAlgorithm);
  _swig_go_result = result; 
  return _swig_go_result;
}


btDefaultCollisionConstructionInfo *_wrap_new_btDefaultCollisionConstructionInfo_bt_e001408c92acdfd7() {
  btDefaultCollisionConstructionInfo *result = 0 ;
  btDefaultCollisionConstructionInfo *_swig_go_result;
  
  
  result = (btDefaultCollisionConstructionInfo *)new btDefaultCollisionConstructionInfo();
  *(btDefaultCollisionConstructionInfo **)&_swig_go_result = (btDefaultCollisionConstructionInfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDefaultCollisionConstructionInfo_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = (btDefaultCollisionConstructionInfo *) 0 ;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


btDefaultCollisionConfiguration *_wrap_new_btDefaultCollisionConfiguration__SWIG_0_bt_e001408c92acdfd7(btDefaultCollisionConstructionInfo *_swig_go_0) {
  btDefaultCollisionConstructionInfo *arg1 = 0 ;
  btDefaultCollisionConfiguration *result = 0 ;
  btDefaultCollisionConfiguration *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConstructionInfo **)&_swig_go_0; 
  
  result = (btDefaultCollisionConfiguration *)new btDefaultCollisionConfiguration((btDefaultCollisionConstructionInfo const &)*arg1);
  *(btDefaultCollisionConfiguration **)&_swig_go_result = (btDefaultCollisionConfiguration *)result; 
  return _swig_go_result;
}


btDefaultCollisionConfiguration *_wrap_new_btDefaultCollisionConfiguration__SWIG_1_bt_e001408c92acdfd7() {
  btDefaultCollisionConfiguration *result = 0 ;
  btDefaultCollisionConfiguration *_swig_go_result;
  
  
  result = (btDefaultCollisionConfiguration *)new btDefaultCollisionConfiguration();
  *(btDefaultCollisionConfiguration **)&_swig_go_result = (btDefaultCollisionConfiguration *)result; 
  return _swig_go_result;
}


void _wrap_delete_btDefaultCollisionConfiguration_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  
  delete arg1;
  
}


btPoolAllocator *_wrap_btDefaultCollisionConfiguration_getPersistentManifoldPool_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getPersistentManifoldPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btPoolAllocator *_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmPool_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  
  result = (btPoolAllocator *)(arg1)->getCollisionAlgorithmPool();
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


btCollisionAlgorithmCreateFunc *_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmCreateFunc_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *result = 0 ;
  btCollisionAlgorithmCreateFunc *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btCollisionAlgorithmCreateFunc *)(arg1)->getCollisionAlgorithmCreateFunc(arg2,arg3);
  *(btCollisionAlgorithmCreateFunc **)&_swig_go_result = (btCollisionAlgorithmCreateFunc *)result; 
  return _swig_go_result;
}


btCollisionAlgorithmCreateFunc *_wrap_btDefaultCollisionConfiguration_getClosestPointsAlgorithmCreateFunc_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  btCollisionAlgorithmCreateFunc *result = 0 ;
  btCollisionAlgorithmCreateFunc *_swig_go_result;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btCollisionAlgorithmCreateFunc *)(arg1)->getClosestPointsAlgorithmCreateFunc(arg2,arg3);
  *(btCollisionAlgorithmCreateFunc **)&_swig_go_result = (btCollisionAlgorithmCreateFunc *)result; 
  return _swig_go_result;
}


void _wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setConvexConvexMultipointIterations(arg2,arg3);
  
}


void _wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setConvexConvexMultipointIterations(arg2);
  
}


void _wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  
  (arg1)->setConvexConvexMultipointIterations();
  
}


void _wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setPlaneConvexMultipointIterations(arg2,arg3);
  
}


void _wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0, intgo _swig_go_1) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  int arg2 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setPlaneConvexMultipointIterations(arg2);
  
}


void _wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2_bt_e001408c92acdfd7(btDefaultCollisionConfiguration *_swig_go_0) {
  btDefaultCollisionConfiguration *arg1 = (btDefaultCollisionConfiguration *) 0 ;
  
  arg1 = *(btDefaultCollisionConfiguration **)&_swig_go_0; 
  
  (arg1)->setPlaneConvexMultipointIterations();
  
}


btCollisionAlgorithmConstructionInfo *_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_0_bt_e001408c92acdfd7() {
  btCollisionAlgorithmConstructionInfo *result = 0 ;
  btCollisionAlgorithmConstructionInfo *_swig_go_result;
  
  
  result = (btCollisionAlgorithmConstructionInfo *)new btCollisionAlgorithmConstructionInfo();
  *(btCollisionAlgorithmConstructionInfo **)&_swig_go_result = (btCollisionAlgorithmConstructionInfo *)result; 
  return _swig_go_result;
}


btCollisionAlgorithmConstructionInfo *_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_1_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, intgo _swig_go_1) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  int arg2 ;
  btCollisionAlgorithmConstructionInfo *result = 0 ;
  btCollisionAlgorithmConstructionInfo *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btCollisionAlgorithmConstructionInfo *)new btCollisionAlgorithmConstructionInfo(arg1,arg2);
  *(btCollisionAlgorithmConstructionInfo **)&_swig_go_result = (btCollisionAlgorithmConstructionInfo *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_set_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0, btDispatcher *_swig_go_1) {
  btCollisionAlgorithmConstructionInfo *arg1 = (btCollisionAlgorithmConstructionInfo *) 0 ;
  btDispatcher *arg2 = (btDispatcher *) 0 ;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  arg2 = *(btDispatcher **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_dispatcher1 = arg2;
  
}


btDispatcher *_wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_get_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = (btCollisionAlgorithmConstructionInfo *) 0 ;
  btDispatcher *result = 0 ;
  btDispatcher *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btDispatcher *) ((arg1)->m_dispatcher1);
  *(btDispatcher **)&_swig_go_result = (btDispatcher *)result; 
  return _swig_go_result;
}


void _wrap_btCollisionAlgorithmConstructionInfo_m_manifold_set_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btCollisionAlgorithmConstructionInfo *arg1 = (btCollisionAlgorithmConstructionInfo *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_manifold = arg2;
  
}


btPersistentManifold *_wrap_btCollisionAlgorithmConstructionInfo_m_manifold_get_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = (btCollisionAlgorithmConstructionInfo *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btPersistentManifold *) ((arg1)->m_manifold);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCollisionAlgorithmConstructionInfo_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = (btCollisionAlgorithmConstructionInfo *) 0 ;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithm *_swig_go_0) {
  btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
  
  arg1 = *(btCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btCollisionAlgorithm *arg1 = (btCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_delete_btActivatingCollisionAlgorithm_bt_e001408c92acdfd7(btActivatingCollisionAlgorithm *_swig_go_0) {
  btActivatingCollisionAlgorithm *arg1 = (btActivatingCollisionAlgorithm *) 0 ;
  
  arg1 = *(btActivatingCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btActivatingCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btActivatingCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btActivatingCollisionAlgorithm *arg1 = (btActivatingCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btActivatingCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  btCollisionAlgorithm *swig_b0 = (btCollisionAlgorithm *)arg1;
  (swig_b0)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btActivatingCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btActivatingCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btActivatingCollisionAlgorithm *arg1 = (btActivatingCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btActivatingCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  btCollisionAlgorithm *swig_b0 = (btCollisionAlgorithm *)arg1;
  result = (btScalar)(swig_b0)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btActivatingCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btActivatingCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btActivatingCollisionAlgorithm *arg1 = (btActivatingCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btActivatingCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  btCollisionAlgorithm *swig_b0 = (btCollisionAlgorithm *)arg1;
  (swig_b0)->getAllContactManifolds(*arg2);
  
}


void _wrap_btPolyhedralContactClipping_clipHullAgainstHull_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btConvexPolyhedron *_swig_go_1, btConvexPolyhedron *_swig_go_2, btTransform *_swig_go_3, btTransform *_swig_go_4, float _swig_go_5, float _swig_go_6, btAlignedObjectArray< btVector3 > *_swig_go_7, btAlignedObjectArray< btVector3 > *_swig_go_8, btDiscreteCollisionDetectorInterface::Result *_swig_go_9) {
  btVector3 *arg1 = 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  btConvexPolyhedron *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btTransform *arg5 = 0 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btVertexArray *arg8 = 0 ;
  btVertexArray *arg9 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg10 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  arg3 = *(btConvexPolyhedron **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = *(btVertexArray **)&_swig_go_7; 
  arg9 = *(btVertexArray **)&_swig_go_8; 
  arg10 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_9; 
  
  btPolyhedralContactClipping::clipHullAgainstHull((btVector3 const &)*arg1,(btConvexPolyhedron const &)*arg2,(btConvexPolyhedron const &)*arg3,(btTransform const &)*arg4,(btTransform const &)*arg5,arg6,arg7,*arg8,*arg9,*arg10);
  
}


void _wrap_btPolyhedralContactClipping_clipFaceAgainstHull_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btConvexPolyhedron *_swig_go_1, btTransform *_swig_go_2, btAlignedObjectArray< btVector3 > *_swig_go_3, btAlignedObjectArray< btVector3 > *_swig_go_4, float _swig_go_5, float _swig_go_6, btDiscreteCollisionDetectorInterface::Result *_swig_go_7) {
  btVector3 *arg1 = 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btVertexArray *arg4 = 0 ;
  btVertexArray *arg5 = 0 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btDiscreteCollisionDetectorInterface::Result *arg8 = 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btVertexArray **)&_swig_go_3; 
  arg5 = *(btVertexArray **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_7; 
  
  btPolyhedralContactClipping::clipFaceAgainstHull((btVector3 const &)*arg1,(btConvexPolyhedron const &)*arg2,(btTransform const &)*arg3,*arg4,*arg5,arg6,arg7,*arg8);
  
}


bool _wrap_btPolyhedralContactClipping_findSeparatingAxis_bt_e001408c92acdfd7(btConvexPolyhedron *_swig_go_0, btConvexPolyhedron *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btDiscreteCollisionDetectorInterface::Result *_swig_go_5) {
  btConvexPolyhedron *arg1 = 0 ;
  btConvexPolyhedron *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexPolyhedron **)&_swig_go_0; 
  arg2 = *(btConvexPolyhedron **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_5; 
  
  result = (bool)btPolyhedralContactClipping::findSeparatingAxis((btConvexPolyhedron const &)*arg1,(btConvexPolyhedron const &)*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,*arg5,*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPolyhedralContactClipping_clipFace_bt_e001408c92acdfd7(btAlignedObjectArray< btVector3 > *_swig_go_0, btAlignedObjectArray< btVector3 > *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3) {
  btVertexArray *arg1 = 0 ;
  btVertexArray *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btVertexArray **)&_swig_go_0; 
  arg2 = *(btVertexArray **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btPolyhedralContactClipping::clipFace((btAlignedObjectArray< btVector3 > const &)*arg1,*arg2,(btVector3 const &)*arg3,arg4);
  
}


btPolyhedralContactClipping *_wrap_new_btPolyhedralContactClipping_bt_e001408c92acdfd7() {
  btPolyhedralContactClipping *result = 0 ;
  btPolyhedralContactClipping *_swig_go_result;
  
  
  result = (btPolyhedralContactClipping *)new btPolyhedralContactClipping();
  *(btPolyhedralContactClipping **)&_swig_go_result = (btPolyhedralContactClipping *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPolyhedralContactClipping_bt_e001408c92acdfd7(btPolyhedralContactClipping *_swig_go_0) {
  btPolyhedralContactClipping *arg1 = (btPolyhedralContactClipping *) 0 ;
  
  arg1 = *(btPolyhedralContactClipping **)&_swig_go_0; 
  
  delete arg1;
  
}


btConvexConvexAlgorithm *_wrap_new_btConvexConvexAlgorithm_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btConvexPenetrationDepthSolver *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btConvexPenetrationDepthSolver *arg5 = (btConvexPenetrationDepthSolver *) 0 ;
  int arg6 ;
  int arg7 ;
  btConvexConvexAlgorithm *result = 0 ;
  btConvexConvexAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btConvexPenetrationDepthSolver **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = (btConvexConvexAlgorithm *)new btConvexConvexAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4,arg5,arg6,arg7);
  *(btConvexConvexAlgorithm **)&_swig_go_result = (btConvexConvexAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexConvexAlgorithm_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexConvexAlgorithm_processCollision_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btConvexConvexAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexConvexAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_btConvexConvexAlgorithm_setLowLevelOfDetail_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0, bool _swig_go_1) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  bool arg2 ;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->setLowLevelOfDetail(arg2);
  
}


btPersistentManifold *_wrap_btConvexConvexAlgorithm_getManifold_bt_e001408c92acdfd7(btConvexConvexAlgorithm *_swig_go_0) {
  btConvexConvexAlgorithm *arg1 = (btConvexConvexAlgorithm *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btConvexConvexAlgorithm **)&_swig_go_0; 
  
  result = (btPersistentManifold *)(arg1)->getManifold();
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btEmptyAlgorithm *_wrap_new_btEmptyAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btEmptyAlgorithm *result = 0 ;
  btEmptyAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btEmptyAlgorithm *)new btEmptyAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1);
  *(btEmptyAlgorithm **)&_swig_go_result = (btEmptyAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_btEmptyAlgorithm_processCollision_bt_e001408c92acdfd7(btEmptyAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btEmptyAlgorithm *arg1 = (btEmptyAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btEmptyAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btEmptyAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btEmptyAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btEmptyAlgorithm *arg1 = (btEmptyAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btEmptyAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btEmptyAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btEmptyAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btEmptyAlgorithm *arg1 = (btEmptyAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btEmptyAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_delete_btEmptyAlgorithm_bt_e001408c92acdfd7(btEmptyAlgorithm *_swig_go_0) {
  btEmptyAlgorithm *arg1 = (btEmptyAlgorithm *) 0 ;
  
  arg1 = *(btEmptyAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexTriangleCallback_m_triangleCount_set_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0, intgo _swig_go_1) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  int arg2 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_triangleCount = arg2;
  
}


intgo _wrap_btConvexTriangleCallback_m_triangleCount_get_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_triangleCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexTriangleCallback_m_manifoldPtr_set_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0, btPersistentManifold *_swig_go_1) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btPersistentManifold *arg2 = (btPersistentManifold *) 0 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  arg2 = *(btPersistentManifold **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_manifoldPtr = arg2;
  
}


btPersistentManifold *_wrap_btConvexTriangleCallback_m_manifoldPtr_get_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btPersistentManifold *result = 0 ;
  btPersistentManifold *_swig_go_result;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  result = (btPersistentManifold *) ((arg1)->m_manifoldPtr);
  *(btPersistentManifold **)&_swig_go_result = (btPersistentManifold *)result; 
  return _swig_go_result;
}


btConvexTriangleCallback *_wrap_new_btConvexTriangleCallback_bt_e001408c92acdfd7(btDispatcher *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, bool _swig_go_3) {
  btDispatcher *arg1 = (btDispatcher *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  bool arg4 ;
  btConvexTriangleCallback *result = 0 ;
  btConvexTriangleCallback *_swig_go_result;
  
  arg1 = *(btDispatcher **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (btConvexTriangleCallback *)new btConvexTriangleCallback(arg1,(btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4);
  *(btConvexTriangleCallback **)&_swig_go_result = (btConvexTriangleCallback *)result; 
  return _swig_go_result;
}


void _wrap_btConvexTriangleCallback_setTimeStepAndCounters_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0, float _swig_go_1, btDispatcherInfo *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btCollisionObjectWrapper *_swig_go_4, btManifoldResult *_swig_go_5) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btScalar arg2 ;
  btDispatcherInfo *arg3 = 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg5 = (btCollisionObjectWrapper *) 0 ;
  btManifoldResult *arg6 = (btManifoldResult *) 0 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btDispatcherInfo **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btCollisionObjectWrapper **)&_swig_go_4; 
  arg6 = *(btManifoldResult **)&_swig_go_5; 
  
  (arg1)->setTimeStepAndCounters(arg2,(btDispatcherInfo const &)*arg3,(btCollisionObjectWrapper const *)arg4,(btCollisionObjectWrapper const *)arg5,arg6);
  
}


void _wrap_btConvexTriangleCallback_clearWrapperData_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  (arg1)->clearWrapperData();
  
}


void _wrap_delete_btConvexTriangleCallback_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexTriangleCallback_processTriangle_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0, btVector3 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->processTriangle(arg2,arg3,arg4);
  
}


void _wrap_btConvexTriangleCallback_clearCache_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  (arg1)->clearCache();
  
}


btVector3 *_wrap_btConvexTriangleCallback_getAabbMin_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexTriangleCallback const *)arg1)->getAabbMin();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btConvexTriangleCallback_getAabbMax_bt_e001408c92acdfd7(btConvexTriangleCallback *_swig_go_0) {
  btConvexTriangleCallback *arg1 = (btConvexTriangleCallback *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btConvexTriangleCallback **)&_swig_go_0; 
  
  result = (btVector3 *) &((btConvexTriangleCallback const *)arg1)->getAabbMax();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btConvexConcaveCollisionAlgorithm *_wrap_new_btConvexConcaveCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, bool _swig_go_3) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  bool arg4 ;
  btConvexConcaveCollisionAlgorithm *result = 0 ;
  btConvexConcaveCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (btConvexConcaveCollisionAlgorithm *)new btConvexConcaveCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1,(btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4);
  *(btConvexConcaveCollisionAlgorithm **)&_swig_go_result = (btConvexConcaveCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexConcaveCollisionAlgorithm_bt_e001408c92acdfd7(btConvexConcaveCollisionAlgorithm *_swig_go_0) {
  btConvexConcaveCollisionAlgorithm *arg1 = (btConvexConcaveCollisionAlgorithm *) 0 ;
  
  arg1 = *(btConvexConcaveCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexConcaveCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btConvexConcaveCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexConcaveCollisionAlgorithm *arg1 = (btConvexConcaveCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btConvexConcaveCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btConvexConcaveCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btConvexConcaveCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexConcaveCollisionAlgorithm *arg1 = (btConvexConcaveCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexConcaveCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexConcaveCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btConvexConcaveCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btConvexConcaveCollisionAlgorithm *arg1 = (btConvexConcaveCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btConvexConcaveCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_btConvexConcaveCollisionAlgorithm_clearCache_bt_e001408c92acdfd7(btConvexConcaveCollisionAlgorithm *_swig_go_0) {
  btConvexConcaveCollisionAlgorithm *arg1 = (btConvexConcaveCollisionAlgorithm *) 0 ;
  
  arg1 = *(btConvexConcaveCollisionAlgorithm **)&_swig_go_0; 
  
  (arg1)->clearCache();
  
}


void _wrap_gCompoundChildShapePairCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btShapePairCallback arg1 = (btShapePairCallback) 0 ;
  
  arg1 = *(btShapePairCallback *)&_swig_go_0; 
  
  gCompoundChildShapePairCallback = arg1;
  
}


void* _wrap_gCompoundChildShapePairCallback_get_bt_e001408c92acdfd7() {
  btShapePairCallback result;
  void* _swig_go_result;
  
  
  result = (btShapePairCallback)gCompoundChildShapePairCallback;
  *(btShapePairCallback *)&_swig_go_result = (btShapePairCallback)result; 
  return _swig_go_result;
}


btCompoundCollisionAlgorithm *_wrap_new_btCompoundCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, bool _swig_go_3) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  bool arg4 ;
  btCompoundCollisionAlgorithm *result = 0 ;
  btCompoundCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (btCompoundCollisionAlgorithm *)new btCompoundCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1,(btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4);
  *(btCompoundCollisionAlgorithm **)&_swig_go_result = (btCompoundCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCompoundCollisionAlgorithm_bt_e001408c92acdfd7(btCompoundCollisionAlgorithm *_swig_go_0) {
  btCompoundCollisionAlgorithm *arg1 = (btCompoundCollisionAlgorithm *) 0 ;
  
  arg1 = *(btCompoundCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


btCollisionAlgorithm *_wrap_btCompoundCollisionAlgorithm_getChildAlgorithm_bt_e001408c92acdfd7(btCompoundCollisionAlgorithm *_swig_go_0, intgo _swig_go_1) {
  btCompoundCollisionAlgorithm *arg1 = (btCompoundCollisionAlgorithm *) 0 ;
  int arg2 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btCollisionAlgorithm *)((btCompoundCollisionAlgorithm const *)arg1)->getChildAlgorithm(arg2);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_btCompoundCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btCompoundCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCompoundCollisionAlgorithm *arg1 = (btCompoundCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btCompoundCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btCompoundCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCompoundCollisionAlgorithm *arg1 = (btCompoundCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCompoundCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btCompoundCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btCompoundCollisionAlgorithm *arg1 = (btCompoundCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


intgo _wrap_BT_SIMPLE_NULL_PAIR_get_bt_e001408c92acdfd7() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)(int)BT_SIMPLE_NULL_PAIR;
  _swig_go_result = result; 
  return _swig_go_result;
}


btSimplePair *_wrap_new_btSimplePair_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  btSimplePair *result = 0 ;
  btSimplePair *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btSimplePair *)new btSimplePair(arg1,arg2);
  *(btSimplePair **)&_swig_go_result = (btSimplePair *)result; 
  return _swig_go_result;
}


void _wrap_btSimplePair_m_indexA_set_bt_e001408c92acdfd7(btSimplePair *_swig_go_0, intgo _swig_go_1) {
  btSimplePair *arg1 = (btSimplePair *) 0 ;
  int arg2 ;
  
  arg1 = *(btSimplePair **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_indexA = arg2;
  
}


intgo _wrap_btSimplePair_m_indexA_get_bt_e001408c92acdfd7(btSimplePair *_swig_go_0) {
  btSimplePair *arg1 = (btSimplePair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSimplePair **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_indexA);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSimplePair_m_indexB_set_bt_e001408c92acdfd7(btSimplePair *_swig_go_0, intgo _swig_go_1) {
  btSimplePair *arg1 = (btSimplePair *) 0 ;
  int arg2 ;
  
  arg1 = *(btSimplePair **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->m_indexB = arg2;
  
}


intgo _wrap_btSimplePair_m_indexB_get_bt_e001408c92acdfd7(btSimplePair *_swig_go_0) {
  btSimplePair *arg1 = (btSimplePair *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSimplePair **)&_swig_go_0; 
  
  result = (int) ((arg1)->m_indexB);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btSimplePair_bt_e001408c92acdfd7(btSimplePair *_swig_go_0) {
  btSimplePair *arg1 = (btSimplePair *) 0 ;
  
  arg1 = *(btSimplePair **)&_swig_go_0; 
  
  delete arg1;
  
}


btHashedSimplePairCache *_wrap_new_btHashedSimplePairCache_bt_e001408c92acdfd7() {
  btHashedSimplePairCache *result = 0 ;
  btHashedSimplePairCache *_swig_go_result;
  
  
  result = (btHashedSimplePairCache *)new btHashedSimplePairCache();
  *(btHashedSimplePairCache **)&_swig_go_result = (btHashedSimplePairCache *)result; 
  return _swig_go_result;
}


void _wrap_delete_btHashedSimplePairCache_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btHashedSimplePairCache_removeAllPairs_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  (arg1)->removeAllPairs();
  
}


void *_wrap_btHashedSimplePairCache_removeOverlappingPair_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  int arg2 ;
  int arg3 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (void *)(arg1)->removeOverlappingPair(arg2,arg3);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


btSimplePair *_wrap_btHashedSimplePairCache_addOverlappingPair_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  int arg2 ;
  int arg3 ;
  btSimplePair *result = 0 ;
  btSimplePair *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btSimplePair *)(arg1)->addOverlappingPair(arg2,arg3);
  *(btSimplePair **)&_swig_go_result = (btSimplePair *)result; 
  return _swig_go_result;
}


btSimplePair *_wrap_btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_0_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  btSimplePair *result = 0 ;
  btSimplePair *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (btSimplePair *)(arg1)->getOverlappingPairArrayPtr();
  *(btSimplePair **)&_swig_go_result = (btSimplePair *)result; 
  return _swig_go_result;
}


btSimplePair *_wrap_btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_1_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  btSimplePair *result = 0 ;
  btSimplePair *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (btSimplePair *)((btHashedSimplePairCache const *)arg1)->getOverlappingPairArrayPtr();
  *(btSimplePair **)&_swig_go_result = (btSimplePair *)result; 
  return _swig_go_result;
}


btAlignedObjectArray< btSimplePair > *_wrap_btHashedSimplePairCache_getOverlappingPairArray__SWIG_0_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  btSimplePairArray *result = 0 ;
  btAlignedObjectArray< btSimplePair > *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (btSimplePairArray *) &(arg1)->getOverlappingPairArray();
  *(btSimplePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btAlignedObjectArray< btSimplePair > *_wrap_btHashedSimplePairCache_getOverlappingPairArray__SWIG_1_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  btSimplePairArray *result = 0 ;
  btAlignedObjectArray< btSimplePair > *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (btSimplePairArray *) &((btHashedSimplePairCache const *)arg1)->getOverlappingPairArray();
  *(btSimplePairArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


btSimplePair *_wrap_btHashedSimplePairCache_findPair_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  int arg2 ;
  int arg3 ;
  btSimplePair *result = 0 ;
  btSimplePair *_swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (btSimplePair *)(arg1)->findPair(arg2,arg3);
  *(btSimplePair **)&_swig_go_result = (btSimplePair *)result; 
  return _swig_go_result;
}


intgo _wrap_btHashedSimplePairCache_GetCount_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (int)((btHashedSimplePairCache const *)arg1)->GetCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btHashedSimplePairCache_getNumOverlappingPairs_bt_e001408c92acdfd7(btHashedSimplePairCache *_swig_go_0) {
  btHashedSimplePairCache *arg1 = (btHashedSimplePairCache *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btHashedSimplePairCache **)&_swig_go_0; 
  
  result = (int)((btHashedSimplePairCache const *)arg1)->getNumOverlappingPairs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_gCompoundCompoundChildShapePairCallback_set_bt_e001408c92acdfd7(void* _swig_go_0) {
  btShapePairCallback arg1 = (btShapePairCallback) 0 ;
  
  arg1 = *(btShapePairCallback *)&_swig_go_0; 
  
  gCompoundCompoundChildShapePairCallback = arg1;
  
}


void* _wrap_gCompoundCompoundChildShapePairCallback_get_bt_e001408c92acdfd7() {
  btShapePairCallback result;
  void* _swig_go_result;
  
  
  result = (btShapePairCallback)gCompoundCompoundChildShapePairCallback;
  *(btShapePairCallback *)&_swig_go_result = (btShapePairCallback)result; 
  return _swig_go_result;
}


btCompoundCompoundCollisionAlgorithm *_wrap_new_btCompoundCompoundCollisionAlgorithm_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, bool _swig_go_3) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  bool arg4 ;
  btCompoundCompoundCollisionAlgorithm *result = 0 ;
  btCompoundCompoundCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (btCompoundCompoundCollisionAlgorithm *)new btCompoundCompoundCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1,(btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,arg4);
  *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_result = (btCompoundCompoundCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCompoundCompoundCollisionAlgorithm_bt_e001408c92acdfd7(btCompoundCompoundCollisionAlgorithm *_swig_go_0) {
  btCompoundCompoundCollisionAlgorithm *arg1 = (btCompoundCompoundCollisionAlgorithm *) 0 ;
  
  arg1 = *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCompoundCompoundCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btCompoundCompoundCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCompoundCompoundCollisionAlgorithm *arg1 = (btCompoundCompoundCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btCompoundCompoundCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btCompoundCompoundCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btCompoundCompoundCollisionAlgorithm *arg1 = (btCompoundCompoundCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btCompoundCompoundCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btCompoundCompoundCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btCompoundCompoundCollisionAlgorithm *arg1 = (btCompoundCompoundCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


btCollisionAlgorithm *_wrap_btCompoundCompoundCollisionAlgorithm_getChildAlgorithm_bt_e001408c92acdfd7(btCompoundCompoundCollisionAlgorithm *_swig_go_0, intgo _swig_go_1) {
  btCompoundCompoundCollisionAlgorithm *arg1 = (btCompoundCompoundCollisionAlgorithm *) 0 ;
  int arg2 ;
  btCollisionAlgorithm *result = 0 ;
  btCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCompoundCompoundCollisionAlgorithm **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btCompoundCollisionAlgorithm *swig_b0 = (btCompoundCollisionAlgorithm *)arg1;
  result = (btCollisionAlgorithm *)((btCompoundCollisionAlgorithm const *)swig_b0)->getChildAlgorithm(arg2);
  *(btCollisionAlgorithm **)&_swig_go_result = (btCollisionAlgorithm *)result; 
  return _swig_go_result;
}


btConvexPlaneCollisionAlgorithm *_wrap_new_btConvexPlaneCollisionAlgorithm_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, bool _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  bool arg5 ;
  int arg6 ;
  int arg7 ;
  btConvexPlaneCollisionAlgorithm *result = 0 ;
  btConvexPlaneCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = (btConvexPlaneCollisionAlgorithm *)new btConvexPlaneCollisionAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4,arg5,arg6,arg7);
  *(btConvexPlaneCollisionAlgorithm **)&_swig_go_result = (btConvexPlaneCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btConvexPlaneCollisionAlgorithm_bt_e001408c92acdfd7(btConvexPlaneCollisionAlgorithm *_swig_go_0) {
  btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
  
  arg1 = *(btConvexPlaneCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btConvexPlaneCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btConvexPlaneCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btConvexPlaneCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


void _wrap_btConvexPlaneCollisionAlgorithm_collideSingleContact_bt_e001408c92acdfd7(btConvexPlaneCollisionAlgorithm *_swig_go_0, btQuaternion *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, btDispatcherInfo *_swig_go_4, btManifoldResult *_swig_go_5) {
  btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
  btQuaternion *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg5 = 0 ;
  btManifoldResult *arg6 = (btManifoldResult *) 0 ;
  
  arg1 = *(btConvexPlaneCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btQuaternion **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = *(btDispatcherInfo **)&_swig_go_4; 
  arg6 = *(btManifoldResult **)&_swig_go_5; 
  
  (arg1)->collideSingleContact((btQuaternion const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4,(btDispatcherInfo const &)*arg5,arg6);
  
}


float _wrap_btConvexPlaneCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btConvexPlaneCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btConvexPlaneCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btConvexPlaneCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btConvexPlaneCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btConvexPlaneCollisionAlgorithm *arg1 = (btConvexPlaneCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btConvexPlaneCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


btBoxBoxCollisionAlgorithm *_wrap_new_btBoxBoxCollisionAlgorithm__SWIG_0_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btBoxBoxCollisionAlgorithm *result = 0 ;
  btBoxBoxCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btBoxBoxCollisionAlgorithm *)new btBoxBoxCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1);
  *(btBoxBoxCollisionAlgorithm **)&_swig_go_result = (btBoxBoxCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_btBoxBoxCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btBoxBoxCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btBoxBoxCollisionAlgorithm *arg1 = (btBoxBoxCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btBoxBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btBoxBoxCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btBoxBoxCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btBoxBoxCollisionAlgorithm *arg1 = (btBoxBoxCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btBoxBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


btBoxBoxCollisionAlgorithm *_wrap_new_btBoxBoxCollisionAlgorithm__SWIG_1_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btBoxBoxCollisionAlgorithm *result = 0 ;
  btBoxBoxCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  
  result = (btBoxBoxCollisionAlgorithm *)new btBoxBoxCollisionAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4);
  *(btBoxBoxCollisionAlgorithm **)&_swig_go_result = (btBoxBoxCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBoxBoxCollisionAlgorithm_bt_e001408c92acdfd7(btBoxBoxCollisionAlgorithm *_swig_go_0) {
  btBoxBoxCollisionAlgorithm *arg1 = (btBoxBoxCollisionAlgorithm *) 0 ;
  
  arg1 = *(btBoxBoxCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBoxBoxCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btBoxBoxCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btBoxBoxCollisionAlgorithm *arg1 = (btBoxBoxCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btBoxBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


btSphereSphereCollisionAlgorithm *_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  btSphereSphereCollisionAlgorithm *result = 0 ;
  btSphereSphereCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  
  result = (btSphereSphereCollisionAlgorithm *)new btSphereSphereCollisionAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4);
  *(btSphereSphereCollisionAlgorithm **)&_swig_go_result = (btSphereSphereCollisionAlgorithm *)result; 
  return _swig_go_result;
}


btSphereSphereCollisionAlgorithm *_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_1_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btSphereSphereCollisionAlgorithm *result = 0 ;
  btSphereSphereCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btSphereSphereCollisionAlgorithm *)new btSphereSphereCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1);
  *(btSphereSphereCollisionAlgorithm **)&_swig_go_result = (btSphereSphereCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_btSphereSphereCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btSphereSphereCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereSphereCollisionAlgorithm *arg1 = (btSphereSphereCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btSphereSphereCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btSphereSphereCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btSphereSphereCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereSphereCollisionAlgorithm *arg1 = (btSphereSphereCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereSphereCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereSphereCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btSphereSphereCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btSphereSphereCollisionAlgorithm *arg1 = (btSphereSphereCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btSphereSphereCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_delete_btSphereSphereCollisionAlgorithm_bt_e001408c92acdfd7(btSphereSphereCollisionAlgorithm *_swig_go_0) {
  btSphereSphereCollisionAlgorithm *arg1 = (btSphereSphereCollisionAlgorithm *) 0 ;
  
  arg1 = *(btSphereSphereCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


btSphereBoxCollisionAlgorithm *_wrap_new_btSphereBoxCollisionAlgorithm_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, bool _swig_go_4) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  bool arg5 ;
  btSphereBoxCollisionAlgorithm *result = 0 ;
  btSphereBoxCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (btSphereBoxCollisionAlgorithm *)new btSphereBoxCollisionAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4,arg5);
  *(btSphereBoxCollisionAlgorithm **)&_swig_go_result = (btSphereBoxCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSphereBoxCollisionAlgorithm_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btSphereBoxCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btSphereBoxCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereBoxCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


bool _wrap_btSphereBoxCollisionAlgorithm_getSphereDistance_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, float _swig_go_6, float _swig_go_7) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btScalar arg7 ;
  btScalar arg8 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  
  result = (bool)(arg1)->getSphereDistance((btCollisionObjectWrapper const *)arg2,*arg3,*arg4,*arg5,(btVector3 const &)*arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSphereBoxCollisionAlgorithm_getSpherePenetration_bt_e001408c92acdfd7(btSphereBoxCollisionAlgorithm *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btSphereBoxCollisionAlgorithm *arg1 = (btSphereBoxCollisionAlgorithm *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereBoxCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->getSpherePenetration((btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4,*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


btSphereTriangleCollisionAlgorithm *_wrap_new_btSphereTriangleCollisionAlgorithm__SWIG_0_bt_e001408c92acdfd7(btPersistentManifold *_swig_go_0, btCollisionAlgorithmConstructionInfo *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btCollisionObjectWrapper *_swig_go_3, bool _swig_go_4) {
  btPersistentManifold *arg1 = (btPersistentManifold *) 0 ;
  btCollisionAlgorithmConstructionInfo *arg2 = 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg4 = (btCollisionObjectWrapper *) 0 ;
  bool arg5 ;
  btSphereTriangleCollisionAlgorithm *result = 0 ;
  btSphereTriangleCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btPersistentManifold **)&_swig_go_0; 
  arg2 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btCollisionObjectWrapper **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (btSphereTriangleCollisionAlgorithm *)new btSphereTriangleCollisionAlgorithm(arg1,(btCollisionAlgorithmConstructionInfo const &)*arg2,(btCollisionObjectWrapper const *)arg3,(btCollisionObjectWrapper const *)arg4,arg5);
  *(btSphereTriangleCollisionAlgorithm **)&_swig_go_result = (btSphereTriangleCollisionAlgorithm *)result; 
  return _swig_go_result;
}


btSphereTriangleCollisionAlgorithm *_wrap_new_btSphereTriangleCollisionAlgorithm__SWIG_1_bt_e001408c92acdfd7(btCollisionAlgorithmConstructionInfo *_swig_go_0) {
  btCollisionAlgorithmConstructionInfo *arg1 = 0 ;
  btSphereTriangleCollisionAlgorithm *result = 0 ;
  btSphereTriangleCollisionAlgorithm *_swig_go_result;
  
  arg1 = *(btCollisionAlgorithmConstructionInfo **)&_swig_go_0; 
  
  result = (btSphereTriangleCollisionAlgorithm *)new btSphereTriangleCollisionAlgorithm((btCollisionAlgorithmConstructionInfo const &)*arg1);
  *(btSphereTriangleCollisionAlgorithm **)&_swig_go_result = (btSphereTriangleCollisionAlgorithm *)result; 
  return _swig_go_result;
}


void _wrap_btSphereTriangleCollisionAlgorithm_processCollision_bt_e001408c92acdfd7(btSphereTriangleCollisionAlgorithm *_swig_go_0, btCollisionObjectWrapper *_swig_go_1, btCollisionObjectWrapper *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereTriangleCollisionAlgorithm *arg1 = (btSphereTriangleCollisionAlgorithm *) 0 ;
  btCollisionObjectWrapper *arg2 = (btCollisionObjectWrapper *) 0 ;
  btCollisionObjectWrapper *arg3 = (btCollisionObjectWrapper *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  
  arg1 = *(btSphereTriangleCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObjectWrapper **)&_swig_go_1; 
  arg3 = *(btCollisionObjectWrapper **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  (arg1)->processCollision((btCollisionObjectWrapper const *)arg2,(btCollisionObjectWrapper const *)arg3,(btDispatcherInfo const &)*arg4,arg5);
  
}


float _wrap_btSphereTriangleCollisionAlgorithm_calculateTimeOfImpact_bt_e001408c92acdfd7(btSphereTriangleCollisionAlgorithm *_swig_go_0, btCollisionObject *_swig_go_1, btCollisionObject *_swig_go_2, btDispatcherInfo *_swig_go_3, btManifoldResult *_swig_go_4) {
  btSphereTriangleCollisionAlgorithm *arg1 = (btSphereTriangleCollisionAlgorithm *) 0 ;
  btCollisionObject *arg2 = (btCollisionObject *) 0 ;
  btCollisionObject *arg3 = (btCollisionObject *) 0 ;
  btDispatcherInfo *arg4 = 0 ;
  btManifoldResult *arg5 = (btManifoldResult *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSphereTriangleCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btCollisionObject **)&_swig_go_1; 
  arg3 = *(btCollisionObject **)&_swig_go_2; 
  arg4 = *(btDispatcherInfo **)&_swig_go_3; 
  arg5 = *(btManifoldResult **)&_swig_go_4; 
  
  result = (btScalar)(arg1)->calculateTimeOfImpact(arg2,arg3,(btDispatcherInfo const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSphereTriangleCollisionAlgorithm_getAllContactManifolds_bt_e001408c92acdfd7(btSphereTriangleCollisionAlgorithm *_swig_go_0, btAlignedObjectArray< btPersistentManifold * > *_swig_go_1) {
  btSphereTriangleCollisionAlgorithm *arg1 = (btSphereTriangleCollisionAlgorithm *) 0 ;
  btManifoldArray *arg2 = 0 ;
  
  arg1 = *(btSphereTriangleCollisionAlgorithm **)&_swig_go_0; 
  arg2 = *(btManifoldArray **)&_swig_go_1; 
  
  (arg1)->getAllContactManifolds(*arg2);
  
}


void _wrap_delete_btSphereTriangleCollisionAlgorithm_bt_e001408c92acdfd7(btSphereTriangleCollisionAlgorithm *_swig_go_0) {
  btSphereTriangleCollisionAlgorithm *arg1 = (btSphereTriangleCollisionAlgorithm *) 0 ;
  
  arg1 = *(btSphereTriangleCollisionAlgorithm **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_btConvexPenetrationDepthSolver_bt_e001408c92acdfd7(btConvexPenetrationDepthSolver *_swig_go_0) {
  btConvexPenetrationDepthSolver *arg1 = (btConvexPenetrationDepthSolver *) 0 ;
  
  arg1 = *(btConvexPenetrationDepthSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btConvexPenetrationDepthSolver_calcPenDepth_bt_e001408c92acdfd7(btConvexPenetrationDepthSolver *_swig_go_0, btVoronoiSimplexSolver *_swig_go_1, btConvexShape *_swig_go_2, btConvexShape *_swig_go_3, btTransform *_swig_go_4, btTransform *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btVector3 *_swig_go_8, btIDebugDraw *_swig_go_9) {
  btConvexPenetrationDepthSolver *arg1 = (btConvexPenetrationDepthSolver *) 0 ;
  btVoronoiSimplexSolver *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btConvexShape *arg4 = (btConvexShape *) 0 ;
  btTransform *arg5 = 0 ;
  btTransform *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btVector3 *arg9 = 0 ;
  btIDebugDraw *arg10 = (btIDebugDraw *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btConvexPenetrationDepthSolver **)&_swig_go_0; 
  arg2 = *(btVoronoiSimplexSolver **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btConvexShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = *(btIDebugDraw **)&_swig_go_9; 
  
  result = (bool)(arg1)->calcPenDepth(*arg2,(btConvexShape const *)arg3,(btConvexShape const *)arg4,(btTransform const &)*arg5,(btTransform const &)*arg6,*arg7,*arg8,*arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btMinkowskiPenetrationDepthSolver_calcPenDepth_bt_e001408c92acdfd7(btMinkowskiPenetrationDepthSolver *_swig_go_0, btVoronoiSimplexSolver *_swig_go_1, btConvexShape *_swig_go_2, btConvexShape *_swig_go_3, btTransform *_swig_go_4, btTransform *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btVector3 *_swig_go_8, btIDebugDraw *_swig_go_9) {
  btMinkowskiPenetrationDepthSolver *arg1 = (btMinkowskiPenetrationDepthSolver *) 0 ;
  btVoronoiSimplexSolver *arg2 = 0 ;
  btConvexShape *arg3 = (btConvexShape *) 0 ;
  btConvexShape *arg4 = (btConvexShape *) 0 ;
  btTransform *arg5 = 0 ;
  btTransform *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btVector3 *arg9 = 0 ;
  btIDebugDraw *arg10 = (btIDebugDraw *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btMinkowskiPenetrationDepthSolver **)&_swig_go_0; 
  arg2 = *(btVoronoiSimplexSolver **)&_swig_go_1; 
  arg3 = *(btConvexShape **)&_swig_go_2; 
  arg4 = *(btConvexShape **)&_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btTransform **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = *(btIDebugDraw **)&_swig_go_9; 
  
  result = (bool)(arg1)->calcPenDepth(*arg2,(btConvexShape const *)arg3,(btConvexShape const *)arg4,(btTransform const &)*arg5,(btTransform const &)*arg6,*arg7,*arg8,*arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


btMinkowskiPenetrationDepthSolver *_wrap_new_btMinkowskiPenetrationDepthSolver_bt_e001408c92acdfd7() {
  btMinkowskiPenetrationDepthSolver *result = 0 ;
  btMinkowskiPenetrationDepthSolver *_swig_go_result;
  
  
  result = (btMinkowskiPenetrationDepthSolver *)new btMinkowskiPenetrationDepthSolver();
  *(btMinkowskiPenetrationDepthSolver **)&_swig_go_result = (btMinkowskiPenetrationDepthSolver *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMinkowskiPenetrationDepthSolver_bt_e001408c92acdfd7(btMinkowskiPenetrationDepthSolver *_swig_go_0) {
  btMinkowskiPenetrationDepthSolver *arg1 = (btMinkowskiPenetrationDepthSolver *) 0 ;
  
  arg1 = *(btMinkowskiPenetrationDepthSolver **)&_swig_go_0; 
  
  delete arg1;
  
}


btPoolAllocator *_wrap_new_btPoolAllocator_bt_e001408c92acdfd7(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  btPoolAllocator *result = 0 ;
  btPoolAllocator *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btPoolAllocator *)new btPoolAllocator(arg1,arg2);
  *(btPoolAllocator **)&_swig_go_result = (btPoolAllocator *)result; 
  return _swig_go_result;
}


void _wrap_delete_btPoolAllocator_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_btPoolAllocator_getFreeCount_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (int)((btPoolAllocator const *)arg1)->getFreeCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPoolAllocator_getUsedCount_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (int)((btPoolAllocator const *)arg1)->getUsedCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btPoolAllocator_getMaxCount_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (int)((btPoolAllocator const *)arg1)->getMaxCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_btPoolAllocator_allocate_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0, intgo _swig_go_1) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  int arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (void *)(arg1)->allocate(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


bool _wrap_btPoolAllocator_validPtr_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0, void *_swig_go_1) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  void *arg2 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (bool)(arg1)->validPtr(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btPoolAllocator_freeMemory_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0, void *_swig_go_1) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->freeMemory(arg2);
  
}


intgo _wrap_btPoolAllocator_getElementSize_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (int)((btPoolAllocator const *)arg1)->getElementSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


char *_wrap_btPoolAllocator_getPoolAddress__SWIG_0_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (unsigned char *)(arg1)->getPoolAddress();
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


char *_wrap_btPoolAllocator_getPoolAddress__SWIG_1_bt_e001408c92acdfd7(btPoolAllocator *_swig_go_0) {
  btPoolAllocator *arg1 = (btPoolAllocator *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(btPoolAllocator **)&_swig_go_0; 
  
  result = (unsigned char *)((btPoolAllocator const *)arg1)->getPoolAddress();
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


void _wrap_btMultiIndex_ijk_set_bt_e001408c92acdfd7(btMultiIndex *_swig_go_0, intgo *_swig_go_1) {
  btMultiIndex *arg1 = (btMultiIndex *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btMultiIndex **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->ijk;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_btMultiIndex_ijk_get_bt_e001408c92acdfd7(btMultiIndex *_swig_go_0) {
  btMultiIndex *arg1 = (btMultiIndex *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btMultiIndex **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->ijk);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


btMultiIndex *_wrap_new_btMultiIndex_bt_e001408c92acdfd7() {
  btMultiIndex *result = 0 ;
  btMultiIndex *_swig_go_result;
  
  
  result = (btMultiIndex *)new btMultiIndex();
  *(btMultiIndex **)&_swig_go_result = (btMultiIndex *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMultiIndex_bt_e001408c92acdfd7(btMultiIndex *_swig_go_0) {
  btMultiIndex *arg1 = (btMultiIndex *) 0 ;
  
  arg1 = *(btMultiIndex **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btAlignedBox3d_m_min_set_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0, btVector3 *_swig_go_1) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_min = *arg2;
  
}


btVector3 *_wrap_btAlignedBox3d_m_min_get_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_min);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btAlignedBox3d_m_max_set_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0, btVector3 *_swig_go_1) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_max = *arg2;
  
}


btVector3 *_wrap_btAlignedBox3d_m_max_get_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_max);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


btVector3 *_wrap_btAlignedBox3d_min_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  
  result = (btVector3 *) &((btAlignedBox3d const *)arg1)->min();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btAlignedBox3d_max_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  
  result = (btVector3 *) &((btAlignedBox3d const *)arg1)->max();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btAlignedBox3d_contains_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0, btVector3 *_swig_go_1) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  btVector3 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (bool)((btAlignedBox3d const *)arg1)->contains((btVector3 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btAlignedBox3d *_wrap_new_btAlignedBox3d__SWIG_0_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btAlignedBox3d *result = 0 ;
  btAlignedBox3d *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = (btAlignedBox3d *)new btAlignedBox3d((btVector3 const &)*arg1,(btVector3 const &)*arg2);
  *(btAlignedBox3d **)&_swig_go_result = (btAlignedBox3d *)result; 
  return _swig_go_result;
}


btAlignedBox3d *_wrap_new_btAlignedBox3d__SWIG_1_bt_e001408c92acdfd7() {
  btAlignedBox3d *result = 0 ;
  btAlignedBox3d *_swig_go_result;
  
  
  result = (btAlignedBox3d *)new btAlignedBox3d();
  *(btAlignedBox3d **)&_swig_go_result = (btAlignedBox3d *)result; 
  return _swig_go_result;
}


void _wrap_delete_btAlignedBox3d_bt_e001408c92acdfd7(btAlignedBox3d *_swig_go_0) {
  btAlignedBox3d *arg1 = (btAlignedBox3d *) 0 ;
  
  arg1 = *(btAlignedBox3d **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btShapeMatrix_m_vec_set_bt_e001408c92acdfd7(btShapeMatrix *_swig_go_0, double *_swig_go_1) {
  btShapeMatrix *arg1 = (btShapeMatrix *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btShapeMatrix **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_vec;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btShapeMatrix_m_vec_get_bt_e001408c92acdfd7(btShapeMatrix *_swig_go_0) {
  btShapeMatrix *arg1 = (btShapeMatrix *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btShapeMatrix **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_vec);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


btShapeMatrix *_wrap_new_btShapeMatrix_bt_e001408c92acdfd7() {
  btShapeMatrix *result = 0 ;
  btShapeMatrix *_swig_go_result;
  
  
  result = (btShapeMatrix *)new btShapeMatrix();
  *(btShapeMatrix **)&_swig_go_result = (btShapeMatrix *)result; 
  return _swig_go_result;
}


void _wrap_delete_btShapeMatrix_bt_e001408c92acdfd7(btShapeMatrix *_swig_go_0) {
  btShapeMatrix *arg1 = (btShapeMatrix *) 0 ;
  
  arg1 = *(btShapeMatrix **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btShapeGradients_m_vec_set_bt_e001408c92acdfd7(btShapeGradients *_swig_go_0, btVector3 (*_swig_go_1)[32]) {
  btShapeGradients *arg1 = (btShapeGradients *) 0 ;
  btVector3 *arg2 = (btVector3 *) (btVector3 *)0 ;
  
  arg1 = *(btShapeGradients **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  {
    size_t ii;
    btVector3 *b = (btVector3 *) arg1->m_vec;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((btVector3 *) arg2 + ii);
  }
  
}


btVector3 (*_wrap_btShapeGradients_m_vec_get_bt_e001408c92acdfd7(btShapeGradients *_swig_go_0))[32] {
  btShapeGradients *arg1 = (btShapeGradients *) 0 ;
  btVector3 *result = 0 ;
  btVector3 (*_swig_go_result)[32];
  
  arg1 = *(btShapeGradients **)&_swig_go_0; 
  
  result = (btVector3 *)(btVector3 *) ((arg1)->m_vec);
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btShapeGradients_topRowsDivide_bt_e001408c92acdfd7(btShapeGradients *_swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  btShapeGradients *arg1 = (btShapeGradients *) 0 ;
  int arg2 ;
  double arg3 ;
  
  arg1 = *(btShapeGradients **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  (arg1)->topRowsDivide(arg2,arg3);
  
}


void _wrap_btShapeGradients_bottomRowsMul_bt_e001408c92acdfd7(btShapeGradients *_swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  btShapeGradients *arg1 = (btShapeGradients *) 0 ;
  int arg2 ;
  double arg3 ;
  
  arg1 = *(btShapeGradients **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  (arg1)->bottomRowsMul(arg2,arg3);
  
}


btShapeGradients *_wrap_new_btShapeGradients_bt_e001408c92acdfd7() {
  btShapeGradients *result = 0 ;
  btShapeGradients *_swig_go_result;
  
  
  result = (btShapeGradients *)new btShapeGradients();
  *(btShapeGradients **)&_swig_go_result = (btShapeGradients *)result; 
  return _swig_go_result;
}


void _wrap_delete_btShapeGradients_bt_e001408c92acdfd7(btShapeGradients *_swig_go_0) {
  btShapeGradients *arg1 = (btShapeGradients *) 0 ;
  
  arg1 = *(btShapeGradients **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btCell32_m_cells_set_bt_e001408c92acdfd7(btCell32 *_swig_go_0, intgo *_swig_go_1) {
  btCell32 *arg1 = (btCell32 *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btCell32 **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->m_cells;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_btCell32_m_cells_get_bt_e001408c92acdfd7(btCell32 *_swig_go_0) {
  btCell32 *arg1 = (btCell32 *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btCell32 **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->m_cells);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


btCell32 *_wrap_new_btCell32_bt_e001408c92acdfd7() {
  btCell32 *result = 0 ;
  btCell32 *_swig_go_result;
  
  
  result = (btCell32 *)new btCell32();
  *(btCell32 **)&_swig_go_result = (btCell32 *)result; 
  return _swig_go_result;
}


void _wrap_delete_btCell32_bt_e001408c92acdfd7(btCell32 *_swig_go_0) {
  btCell32 *arg1 = (btCell32 *) 0 ;
  
  arg1 = *(btCell32 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMiniSDF_m_domain_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btAlignedBox3d *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedBox3d *arg2 = (btAlignedBox3d *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btAlignedBox3d **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_domain = *arg2;
  
}


btAlignedBox3d *_wrap_btMiniSDF_m_domain_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedBox3d *result = 0 ;
  btAlignedBox3d *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btAlignedBox3d *)& ((arg1)->m_domain);
  *(btAlignedBox3d **)&_swig_go_result = (btAlignedBox3d *)result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_resolution_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, intgo *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  unsigned int *arg2 = (unsigned int *) (unsigned int *)0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->m_resolution;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


intgo *_wrap_btMiniSDF_m_resolution_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (unsigned int *)(unsigned int *) ((arg1)->m_resolution);
  *(unsigned int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_cell_size_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btVector3 *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cell_size = *arg2;
  
}


btVector3 *_wrap_btMiniSDF_m_cell_size_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_cell_size);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_inv_cell_size_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btVector3 *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_inv_cell_size = *arg2;
  
}


btVector3 *_wrap_btMiniSDF_m_inv_cell_size_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_inv_cell_size);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_n_cells_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, std::size_t *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  std::size_t arg2 ;
  std::size_t *argp2 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  argp2 = (std::size_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::size_t");
  }
  arg2 = (std::size_t)*argp2;
  
  
  if (arg1) (arg1)->m_n_cells = arg2;
  
}


std::size_t *_wrap_btMiniSDF_m_n_cells_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  std::size_t result;
  std::size_t *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result =  ((arg1)->m_n_cells);
  *(std::size_t **)&_swig_go_result = new std::size_t(result); 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_n_fields_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, std::size_t *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  std::size_t arg2 ;
  std::size_t *argp2 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  argp2 = (std::size_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::size_t");
  }
  arg2 = (std::size_t)*argp2;
  
  
  if (arg1) (arg1)->m_n_fields = arg2;
  
}


std::size_t *_wrap_btMiniSDF_m_n_fields_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  std::size_t result;
  std::size_t *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result =  ((arg1)->m_n_fields);
  *(std::size_t **)&_swig_go_result = new std::size_t(result); 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_isValid_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, bool _swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  bool arg2 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_isValid = arg2;
  
}


bool _wrap_btMiniSDF_m_isValid_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_isValid);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_nodes_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btAlignedObjectArray< btAlignedObjectArray< double > > *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< double > > *arg2 = (btAlignedObjectArray< btAlignedObjectArray< double > > *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btAlignedObjectArray< double > > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_nodes = *arg2;
  
}


btAlignedObjectArray< btAlignedObjectArray< double > > *_wrap_btMiniSDF_m_nodes_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< double > > *result = 0 ;
  btAlignedObjectArray< btAlignedObjectArray< double > > *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btAlignedObjectArray< double > > *)& ((arg1)->m_nodes);
  *(btAlignedObjectArray< btAlignedObjectArray< double > > **)&_swig_go_result = (btAlignedObjectArray< btAlignedObjectArray< double > > *)result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_cells_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *arg2 = (btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btAlignedObjectArray< btCell32 > > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cells = *arg2;
  
}


btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *_wrap_btMiniSDF_m_cells_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *result = 0 ;
  btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *)& ((arg1)->m_cells);
  *(btAlignedObjectArray< btAlignedObjectArray< btCell32 > > **)&_swig_go_result = (btAlignedObjectArray< btAlignedObjectArray< btCell32 > > *)result; 
  return _swig_go_result;
}


void _wrap_btMiniSDF_m_cell_map_set_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *arg2 = (btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btAlignedObjectArray< btAlignedObjectArray< unsigned int > > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cell_map = *arg2;
  
}


btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *_wrap_btMiniSDF_m_cell_map_get_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *result = 0 ;
  btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *)& ((arg1)->m_cell_map);
  *(btAlignedObjectArray< btAlignedObjectArray< unsigned int > > **)&_swig_go_result = (btAlignedObjectArray< btAlignedObjectArray< unsigned int > > *)result; 
  return _swig_go_result;
}


btMiniSDF *_wrap_new_btMiniSDF_bt_e001408c92acdfd7() {
  btMiniSDF *result = 0 ;
  btMiniSDF *_swig_go_result;
  
  
  result = (btMiniSDF *)new btMiniSDF();
  *(btMiniSDF **)&_swig_go_result = (btMiniSDF *)result; 
  return _swig_go_result;
}


bool _wrap_btMiniSDF_load_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->load((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_btMiniSDF_isValid_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  result = (bool)((btMiniSDF const *)arg1)->isValid();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btMiniSDF_multiToSingleIndex_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btMultiIndex *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btMultiIndex *arg2 = 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btMultiIndex **)&_swig_go_1; 
  
  result = (unsigned int)((btMiniSDF const *)arg1)->multiToSingleIndex((btMultiIndex const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


btAlignedBox3d *_wrap_btMiniSDF_subdomain__SWIG_0_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btMultiIndex *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btMultiIndex *arg2 = 0 ;
  btAlignedBox3d result;
  btAlignedBox3d *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btMultiIndex **)&_swig_go_1; 
  
  result = ((btMiniSDF const *)arg1)->subdomain((btMultiIndex const &)*arg2);
  *(btAlignedBox3d **)&_swig_go_result = new btAlignedBox3d(result); 
  return _swig_go_result;
}


btMultiIndex *_wrap_btMiniSDF_singleToMultiIndex_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, intgo _swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  unsigned int arg2 ;
  btMultiIndex result;
  btMultiIndex *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((btMiniSDF const *)arg1)->singleToMultiIndex(arg2);
  *(btMultiIndex **)&_swig_go_result = new btMultiIndex(result); 
  return _swig_go_result;
}


btAlignedBox3d *_wrap_btMiniSDF_subdomain__SWIG_1_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, intgo _swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  unsigned int arg2 ;
  btAlignedBox3d result;
  btAlignedBox3d *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((btMiniSDF const *)arg1)->subdomain(arg2);
  *(btAlignedBox3d **)&_swig_go_result = new btAlignedBox3d(result); 
  return _swig_go_result;
}


btShapeMatrix *_wrap_btMiniSDF_shape_function___SWIG_0_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btVector3 *_swig_go_1, btShapeGradients *_swig_go_2) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *arg2 = 0 ;
  btShapeGradients *arg3 = (btShapeGradients *) 0 ;
  btShapeMatrix result;
  btShapeMatrix *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btShapeGradients **)&_swig_go_2; 
  
  result = ((btMiniSDF const *)arg1)->shape_function_((btVector3 const &)*arg2,arg3);
  *(btShapeMatrix **)&_swig_go_result = new btShapeMatrix(result); 
  return _swig_go_result;
}


btShapeMatrix *_wrap_btMiniSDF_shape_function___SWIG_1_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, btVector3 *_swig_go_1) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  btVector3 *arg2 = 0 ;
  btShapeMatrix result;
  btShapeMatrix *_swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  result = ((btMiniSDF const *)arg1)->shape_function_((btVector3 const &)*arg2);
  *(btShapeMatrix **)&_swig_go_result = new btShapeMatrix(result); 
  return _swig_go_result;
}


bool _wrap_btMiniSDF_interpolate_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0, intgo _swig_go_1, double *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  unsigned int arg2 ;
  double *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = (btVector3 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  result = (bool)((btMiniSDF const *)arg1)->interpolate(arg2,*arg3,(btVector3 const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_btMiniSDF_bt_e001408c92acdfd7(btMiniSDF *_swig_go_0) {
  btMiniSDF *arg1 = (btMiniSDF *) 0 ;
  
  arg1 = *(btMiniSDF **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBoxBoxDetector_m_box1_set_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0, btBoxShape *_swig_go_1) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btBoxShape *arg2 = (btBoxShape *) 0 ;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  arg2 = *(btBoxShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_box1 = (btBoxShape const *)arg2;
  
}


btBoxShape *_wrap_btBoxBoxDetector_m_box1_get_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btBoxShape *result = 0 ;
  btBoxShape *_swig_go_result;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  
  result = (btBoxShape *) ((arg1)->m_box1);
  *(btBoxShape **)&_swig_go_result = (btBoxShape *)result; 
  return _swig_go_result;
}


void _wrap_btBoxBoxDetector_m_box2_set_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0, btBoxShape *_swig_go_1) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btBoxShape *arg2 = (btBoxShape *) 0 ;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  arg2 = *(btBoxShape **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_box2 = (btBoxShape const *)arg2;
  
}


btBoxShape *_wrap_btBoxBoxDetector_m_box2_get_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btBoxShape *result = 0 ;
  btBoxShape *_swig_go_result;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  
  result = (btBoxShape *) ((arg1)->m_box2);
  *(btBoxShape **)&_swig_go_result = (btBoxShape *)result; 
  return _swig_go_result;
}


btBoxBoxDetector *_wrap_new_btBoxBoxDetector_bt_e001408c92acdfd7(btBoxShape *_swig_go_0, btBoxShape *_swig_go_1) {
  btBoxShape *arg1 = (btBoxShape *) 0 ;
  btBoxShape *arg2 = (btBoxShape *) 0 ;
  btBoxBoxDetector *result = 0 ;
  btBoxBoxDetector *_swig_go_result;
  
  arg1 = *(btBoxShape **)&_swig_go_0; 
  arg2 = *(btBoxShape **)&_swig_go_1; 
  
  result = (btBoxBoxDetector *)new btBoxBoxDetector((btBoxShape const *)arg1,(btBoxShape const *)arg2);
  *(btBoxBoxDetector **)&_swig_go_result = (btBoxBoxDetector *)result; 
  return _swig_go_result;
}


void _wrap_delete_btBoxBoxDetector_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btBoxBoxDetector_getClosestPoints__SWIG_0_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3, bool _swig_go_4) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  bool arg5 ;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_btBoxBoxDetector_getClosestPoints__SWIG_1_bt_e001408c92acdfd7(btBoxBoxDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3) {
  btBoxBoxDetector *arg1 = (btBoxBoxDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  
  arg1 = *(btBoxBoxDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4);
  
}


float _wrap_dDOT_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1) {
  btScalar *arg1 = (btScalar *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  result = (btScalar)dDOT((float const *)arg1,(float const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_dDOT44_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1) {
  btScalar *arg1 = (btScalar *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  result = (btScalar)dDOT44((float const *)arg1,(float const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_dDOT41_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1) {
  btScalar *arg1 = (btScalar *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  result = (btScalar)dDOT41((float const *)arg1,(float const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_dDOT14_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1) {
  btScalar *arg1 = (btScalar *) 0 ;
  btScalar *arg2 = (btScalar *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  
  result = (btScalar)dDOT14((float const *)arg1,(float const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_dLineClosestApproach_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, float *_swig_go_5) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = (btScalar *) 0 ;
  btScalar *arg6 = (btScalar *) 0 ;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btScalar **)&_swig_go_5; 
  
  dLineClosestApproach((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6);
  
}


intgo _wrap_intersectRectQuad2_bt_e001408c92acdfd7(float *_swig_go_0, float *_swig_go_1, float *_swig_go_2) {
  btScalar *arg1 = (btScalar *) (btScalar *)0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  btScalar *arg3 = (btScalar *) (btScalar *)0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btScalar **)&_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  result = (int)intersectRectQuad2(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_cullPoints2_bt_e001408c92acdfd7(intgo _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo *_swig_go_4) {
  int arg1 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  int arg3 ;
  int arg4 ;
  int *arg5 = (int *) (int *)0 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(btScalar **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  cullPoints2(arg1,arg2,arg3,arg4,arg5);
  
}


intgo _wrap_dBoxBox2_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, float *_swig_go_7, intgo *_swig_go_8, intgo _swig_go_9, dContactGeom *_swig_go_10, intgo _swig_go_11, btDiscreteCollisionDetectorInterface::Result *_swig_go_12) {
  btVector3 *arg1 = 0 ;
  btScalar *arg2 = (btScalar *) (btScalar *)0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = (btScalar *) (btScalar *)0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btScalar *arg8 = (btScalar *) 0 ;
  int *arg9 = (int *) 0 ;
  int arg10 ;
  dContactGeom *arg11 = (dContactGeom *) 0 ;
  int arg12 ;
  btDiscreteCollisionDetectorInterface::Result *arg13 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btScalar **)&_swig_go_7; 
  arg9 = *(int **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = *(dContactGeom **)&_swig_go_10; 
  arg12 = (int)_swig_go_11; 
  arg13 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_12; 
  
  result = (int)dBoxBox2((btVector3 const &)*arg1,(float const (*))arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(float const (*))arg5,(btVector3 const &)*arg6,*arg7,arg8,arg9,arg10,arg11,arg12,*arg13);
  _swig_go_result = result; 
  return _swig_go_result;
}


btSdfCollisionShape *_wrap_new_btSdfCollisionShape_bt_e001408c92acdfd7() {
  btSdfCollisionShape *result = 0 ;
  btSdfCollisionShape *_swig_go_result;
  
  
  result = (btSdfCollisionShape *)new btSdfCollisionShape();
  *(btSdfCollisionShape **)&_swig_go_result = (btSdfCollisionShape *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSdfCollisionShape_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_btSdfCollisionShape_initializeSDF_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->initializeSDF((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_getAabb_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btSdfCollisionShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btSdfCollisionShape_setLocalScaling_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btVector3 *_swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btSdfCollisionShape_getLocalScaling_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btSdfCollisionShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_calculateLocalInertia_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btSdfCollisionShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


_gostring_ _wrap_btSdfCollisionShape_getName_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  result = (char *)((btSdfCollisionShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_setMargin_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, float _swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  (arg1)->setMargin(arg2);
  
}


float _wrap_btSdfCollisionShape_getMargin_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  result = (btScalar)((btSdfCollisionShape const *)arg1)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_processAllTriangles_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btSdfCollisionShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


bool _wrap_btSdfCollisionShape_queryPoint_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2, btVector3 *_swig_go_3) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (bool)(arg1)->queryPoint((btVector3 const &)*arg2,*arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_getBoundingSphere_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btSdfCollisionShape_getAngularMotionDisc_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btSdfCollisionShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, float _swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_calculateTemporalAabb_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btSdfCollisionShape_isPolyhedral_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isConvex2d_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isConvex_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isNonMoving_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isConcave_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isCompound_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isSoftBody_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btSdfCollisionShape_isInfinite_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSdfCollisionShape_getShapeType_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btSdfCollisionShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = ((btCollisionShape const *)swig_b1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_setUserPointer_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, void *_swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserPointer(arg2);
  
}


void *_wrap_btSdfCollisionShape_getUserPointer_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (void *)((btCollisionShape const *)swig_b1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_setUserIndex_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, intgo _swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex(arg2);
  
}


intgo _wrap_btSdfCollisionShape_getUserIndex_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_setUserIndex2_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, intgo _swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex2(arg2);
  
}


intgo _wrap_btSdfCollisionShape_getUserIndex2_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btSdfCollisionShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btSdfCollisionShape_serialize_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (char *)((btCollisionShape const *)swig_b1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShape_serializeSingleShape_bt_e001408c92acdfd7(btSdfCollisionShape *_swig_go_0, btSerializer *_swig_go_1) {
  btSdfCollisionShape *arg1 = (btSdfCollisionShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btSdfCollisionShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->serializeSingleShape(arg2);
  
}


void _wrap_btSdfCollisionShapeInternalData_m_localScaling_set_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0, btVector3 *_swig_go_1) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btVector3 *arg2 = (btVector3 *) 0 ;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localScaling = *arg2;
  
}


btVector3 *_wrap_btSdfCollisionShapeInternalData_m_localScaling_get_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  
  result = (btVector3 *)& ((arg1)->m_localScaling);
  *(btVector3 **)&_swig_go_result = (btVector3 *)result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShapeInternalData_m_margin_set_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0, float _swig_go_1) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  if (arg1) (arg1)->m_margin = arg2;
  
}


float _wrap_btSdfCollisionShapeInternalData_m_margin_get_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  
  result = (btScalar) ((arg1)->m_margin);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btSdfCollisionShapeInternalData_m_sdf_set_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0, btMiniSDF *_swig_go_1) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btMiniSDF *arg2 = (btMiniSDF *) 0 ;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  arg2 = *(btMiniSDF **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_sdf = *arg2;
  
}


btMiniSDF *_wrap_btSdfCollisionShapeInternalData_m_sdf_get_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  btMiniSDF *result = 0 ;
  btMiniSDF *_swig_go_result;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  
  result = (btMiniSDF *)& ((arg1)->m_sdf);
  *(btMiniSDF **)&_swig_go_result = (btMiniSDF *)result; 
  return _swig_go_result;
}


btSdfCollisionShapeInternalData *_wrap_new_btSdfCollisionShapeInternalData_bt_e001408c92acdfd7() {
  btSdfCollisionShapeInternalData *result = 0 ;
  btSdfCollisionShapeInternalData *_swig_go_result;
  
  
  result = (btSdfCollisionShapeInternalData *)new btSdfCollisionShapeInternalData();
  *(btSdfCollisionShapeInternalData **)&_swig_go_result = (btSdfCollisionShapeInternalData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btSdfCollisionShapeInternalData_bt_e001408c92acdfd7(btSdfCollisionShapeInternalData *_swig_go_0) {
  btSdfCollisionShapeInternalData *arg1 = (btSdfCollisionShapeInternalData *) 0 ;
  
  arg1 = *(btSdfCollisionShapeInternalData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SphereTriangleDetector_getClosestPoints__SWIG_0_bt_e001408c92acdfd7(SphereTriangleDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3, bool _swig_go_4) {
  SphereTriangleDetector *arg1 = (SphereTriangleDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  bool arg5 ;
  
  arg1 = *(SphereTriangleDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_SphereTriangleDetector_getClosestPoints__SWIG_1_bt_e001408c92acdfd7(SphereTriangleDetector *_swig_go_0, btDiscreteCollisionDetectorInterface::ClosestPointInput *_swig_go_1, btDiscreteCollisionDetectorInterface::Result *_swig_go_2, btIDebugDraw *_swig_go_3) {
  SphereTriangleDetector *arg1 = (SphereTriangleDetector *) 0 ;
  btDiscreteCollisionDetectorInterface::ClosestPointInput *arg2 = 0 ;
  btDiscreteCollisionDetectorInterface::Result *arg3 = 0 ;
  btIDebugDraw *arg4 = (btIDebugDraw *) 0 ;
  
  arg1 = *(SphereTriangleDetector **)&_swig_go_0; 
  arg2 = *(btDiscreteCollisionDetectorInterface::ClosestPointInput **)&_swig_go_1; 
  arg3 = *(btDiscreteCollisionDetectorInterface::Result **)&_swig_go_2; 
  arg4 = *(btIDebugDraw **)&_swig_go_3; 
  
  (arg1)->getClosestPoints((btDiscreteCollisionDetectorInterface::ClosestPointInput const &)*arg2,*arg3,arg4);
  
}


SphereTriangleDetector *_wrap_new_SphereTriangleDetector_bt_e001408c92acdfd7(btSphereShape *_swig_go_0, btTriangleShape *_swig_go_1, float _swig_go_2) {
  btSphereShape *arg1 = (btSphereShape *) 0 ;
  btTriangleShape *arg2 = (btTriangleShape *) 0 ;
  btScalar arg3 ;
  SphereTriangleDetector *result = 0 ;
  SphereTriangleDetector *_swig_go_result;
  
  arg1 = *(btSphereShape **)&_swig_go_0; 
  arg2 = *(btTriangleShape **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  result = (SphereTriangleDetector *)new SphereTriangleDetector(arg1,arg2,arg3);
  *(SphereTriangleDetector **)&_swig_go_result = (SphereTriangleDetector *)result; 
  return _swig_go_result;
}


void _wrap_delete_SphereTriangleDetector_bt_e001408c92acdfd7(SphereTriangleDetector *_swig_go_0) {
  SphereTriangleDetector *arg1 = (SphereTriangleDetector *) 0 ;
  
  arg1 = *(SphereTriangleDetector **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_SphereTriangleDetector_collide_bt_e001408c92acdfd7(SphereTriangleDetector *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float *_swig_go_4, float *_swig_go_5, float _swig_go_6) {
  SphereTriangleDetector *arg1 = (SphereTriangleDetector *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar *arg5 = 0 ;
  btScalar *arg6 = 0 ;
  btScalar arg7 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(SphereTriangleDetector **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btScalar **)&_swig_go_4; 
  arg6 = *(btScalar **)&_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  
  result = (bool)(arg1)->collide((btVector3 const &)*arg2,*arg3,*arg4,*arg5,*arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_SegmentSqrDistance_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btVector3 *arg1 = 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  result = (btScalar)SegmentSqrDistance((btVector3 const &)*arg1,(btVector3 const &)*arg2,(btVector3 const &)*arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


btStaticPlaneShape *_wrap_new_btStaticPlaneShape_bt_e001408c92acdfd7(btVector3 *_swig_go_0, float _swig_go_1) {
  btVector3 *arg1 = 0 ;
  btScalar arg2 ;
  btStaticPlaneShape *result = 0 ;
  btStaticPlaneShape *_swig_go_result;
  
  arg1 = *(btVector3 **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  result = (btStaticPlaneShape *)new btStaticPlaneShape((btVector3 const &)*arg1,arg2);
  *(btStaticPlaneShape **)&_swig_go_result = (btStaticPlaneShape *)result; 
  return _swig_go_result;
}


void _wrap_delete_btStaticPlaneShape_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btStaticPlaneShape_getAabb_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btStaticPlaneShape const *)arg1)->getAabb((btTransform const &)*arg2,*arg3,*arg4);
  
}


void _wrap_btStaticPlaneShape_processAllTriangles_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btTriangleCallback *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btTriangleCallback *arg2 = (btTriangleCallback *) 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btTriangleCallback **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  ((btStaticPlaneShape const *)arg1)->processAllTriangles(arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btStaticPlaneShape_calculateLocalInertia_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, float _swig_go_1, btVector3 *_swig_go_2) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar arg2 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  ((btStaticPlaneShape const *)arg1)->calculateLocalInertia(arg2,*arg3);
  
}


void _wrap_btStaticPlaneShape_setLocalScaling_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btVector3 *_swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  (arg1)->setLocalScaling((btVector3 const &)*arg2);
  
}


btVector3 *_wrap_btStaticPlaneShape_getLocalScaling_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btStaticPlaneShape const *)arg1)->getLocalScaling();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btStaticPlaneShape_getPlaneNormal_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btVector3 *result = 0 ;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  result = (btVector3 *) &((btStaticPlaneShape const *)arg1)->getPlaneNormal();
  *(btVector3 **)&_swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btStaticPlaneShape_getPlaneConstant_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar *result = 0 ;
  float _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  result = (btScalar *) &((btStaticPlaneShape const *)arg1)->getPlaneConstant();
  _swig_go_result = (btScalar)*result; 
  return _swig_go_result;
}


_gostring_ _wrap_btStaticPlaneShape_getName_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  result = (char *)((btStaticPlaneShape const *)arg1)->getName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_btStaticPlaneShape_calculateSerializeBufferSize_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  result = (int)((btStaticPlaneShape const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btStaticPlaneShape_serialize_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btStaticPlaneShape const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


float _wrap_btStaticPlaneShape_getMargin_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  result = (btScalar)((btConcaveShape const *)swig_b0)->getMargin();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_setMargin_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, float _swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  (swig_b0)->setMargin(arg2);
  
}


void _wrap_btStaticPlaneShape_getBoundingSphere_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btVector3 *_swig_go_1, float *_swig_go_2) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar *arg3 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btScalar **)&_swig_go_2; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->getBoundingSphere(*arg2,*arg3);
  
}


float _wrap_btStaticPlaneShape_getAngularMotionDisc_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getAngularMotionDisc();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btStaticPlaneShape_getContactBreakingThreshold_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, float _swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btScalar arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (btScalar)((btCollisionShape const *)swig_b1)->getContactBreakingThreshold(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_calculateTemporalAabb_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btTransform *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btTransform *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->calculateTemporalAabb((btTransform const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,*arg6,*arg7);
  
}


bool _wrap_btStaticPlaneShape_isPolyhedral_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isPolyhedral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isConvex2d_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex2d();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isConvex_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConvex();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isNonMoving_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isNonMoving();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isConcave_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isConcave();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isCompound_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isCompound();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isSoftBody_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isSoftBody();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btStaticPlaneShape_isInfinite_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (bool)((btCollisionShape const *)swig_b1)->isInfinite();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btStaticPlaneShape_getShapeType_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getShapeType();
  _swig_go_result = result; 
  return _swig_go_result;
}


btVector3 *_wrap_btStaticPlaneShape_getAnisotropicRollingFrictionDirection_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = ((btCollisionShape const *)swig_b1)->getAnisotropicRollingFrictionDirection();
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_setUserPointer_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, void *_swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserPointer(arg2);
  
}


void *_wrap_btStaticPlaneShape_getUserPointer_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (void *)((btCollisionShape const *)swig_b1)->getUserPointer();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_setUserIndex_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, intgo _swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex(arg2);
  
}


intgo _wrap_btStaticPlaneShape_getUserIndex_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_setUserIndex2_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, intgo _swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int arg2 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  (swig_b1)->setUserIndex2(arg2);
  
}


intgo _wrap_btStaticPlaneShape_getUserIndex2_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  result = (int)((btCollisionShape const *)swig_b1)->getUserIndex2();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShape_serializeSingleShape_bt_e001408c92acdfd7(btStaticPlaneShape *_swig_go_0, btSerializer *_swig_go_1) {
  btStaticPlaneShape *arg1 = (btStaticPlaneShape *) 0 ;
  btSerializer *arg2 = (btSerializer *) 0 ;
  
  arg1 = *(btStaticPlaneShape **)&_swig_go_0; 
  arg2 = *(btSerializer **)&_swig_go_1; 
  
  btConcaveShape *swig_b0 = (btConcaveShape *)arg1;
  btCollisionShape *swig_b1 = (btCollisionShape *)swig_b0;
  ((btCollisionShape const *)swig_b1)->serializeSingleShape(arg2);
  
}


void _wrap_btStaticPlaneShapeData_m_collisionShapeData_set_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0, btCollisionShapeData *_swig_go_1) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btCollisionShapeData *arg2 = (btCollisionShapeData *) 0 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  arg2 = *(btCollisionShapeData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_collisionShapeData = *arg2;
  
}


btCollisionShapeData *_wrap_btStaticPlaneShapeData_m_collisionShapeData_get_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btCollisionShapeData *result = 0 ;
  btCollisionShapeData *_swig_go_result;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  result = (btCollisionShapeData *)& ((arg1)->m_collisionShapeData);
  *(btCollisionShapeData **)&_swig_go_result = (btCollisionShapeData *)result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShapeData_m_localScaling_set_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_localScaling = *arg2;
  
}


btVector3FloatData *_wrap_btStaticPlaneShapeData_m_localScaling_get_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_localScaling);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShapeData_m_planeNormal_set_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0, btVector3FloatData *_swig_go_1) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btVector3FloatData *arg2 = (btVector3FloatData *) 0 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  arg2 = *(btVector3FloatData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_planeNormal = *arg2;
  
}


btVector3FloatData *_wrap_btStaticPlaneShapeData_m_planeNormal_get_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  btVector3FloatData *result = 0 ;
  btVector3FloatData *_swig_go_result;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  result = (btVector3FloatData *)& ((arg1)->m_planeNormal);
  *(btVector3FloatData **)&_swig_go_result = (btVector3FloatData *)result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShapeData_m_planeConstant_set_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0, float _swig_go_1) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  float arg2 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->m_planeConstant = arg2;
  
}


float _wrap_btStaticPlaneShapeData_m_planeConstant_get_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  result = (float) ((arg1)->m_planeConstant);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btStaticPlaneShapeData_m_pad_set_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0, _gostring_ _swig_go_1) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->m_pad, (const char *)arg2, 4-1);
      arg1->m_pad[4-1] = 0;
    } else {
      arg1->m_pad[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_btStaticPlaneShapeData_m_pad_get_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->m_pad);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


btStaticPlaneShapeData *_wrap_new_btStaticPlaneShapeData_bt_e001408c92acdfd7() {
  btStaticPlaneShapeData *result = 0 ;
  btStaticPlaneShapeData *_swig_go_result;
  
  
  result = (btStaticPlaneShapeData *)new btStaticPlaneShapeData();
  *(btStaticPlaneShapeData **)&_swig_go_result = (btStaticPlaneShapeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btStaticPlaneShapeData_bt_e001408c92acdfd7(btStaticPlaneShapeData *_swig_go_0) {
  btStaticPlaneShapeData *arg1 = (btStaticPlaneShapeData *) 0 ;
  
  arg1 = *(btStaticPlaneShapeData **)&_swig_go_0; 
  
  delete arg1;
  
}


btGeneric6DofSpringConstraint *_wrap_new_btGeneric6DofSpringConstraint__SWIG_0_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btRigidBody *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, bool _swig_go_4) {
  btRigidBody *arg1 = 0 ;
  btRigidBody *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  bool arg5 ;
  btGeneric6DofSpringConstraint *result = 0 ;
  btGeneric6DofSpringConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btRigidBody **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (btGeneric6DofSpringConstraint *)new btGeneric6DofSpringConstraint(*arg1,*arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,arg5);
  *(btGeneric6DofSpringConstraint **)&_swig_go_result = (btGeneric6DofSpringConstraint *)result; 
  return _swig_go_result;
}


btGeneric6DofSpringConstraint *_wrap_new_btGeneric6DofSpringConstraint__SWIG_1_bt_e001408c92acdfd7(btRigidBody *_swig_go_0, btTransform *_swig_go_1, bool _swig_go_2) {
  btRigidBody *arg1 = 0 ;
  btTransform *arg2 = 0 ;
  bool arg3 ;
  btGeneric6DofSpringConstraint *result = 0 ;
  btGeneric6DofSpringConstraint *_swig_go_result;
  
  arg1 = *(btRigidBody **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (btGeneric6DofSpringConstraint *)new btGeneric6DofSpringConstraint(*arg1,(btTransform const &)*arg2,arg3);
  *(btGeneric6DofSpringConstraint **)&_swig_go_result = (btGeneric6DofSpringConstraint *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_enableSpring_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  bool arg3 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->enableSpring(arg2,arg3);
  
}


void _wrap_btGeneric6DofSpringConstraint_setStiffness_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setStiffness(arg2,arg3);
  
}


void _wrap_btGeneric6DofSpringConstraint_setDamping_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setDamping(arg2,arg3);
  
}


void _wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  (arg1)->setEquilibriumPoint();
  
}


void _wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setEquilibriumPoint(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->setEquilibriumPoint(arg2,arg3);
  
}


bool _wrap_btGeneric6DofSpringConstraint_isSpringEnabled_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)((btGeneric6DofSpringConstraint const *)arg1)->isSpringEnabled(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getStiffness_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofSpringConstraint const *)arg1)->getStiffness(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getDamping_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofSpringConstraint const *)arg1)->getDamping(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getEquilibriumPoint_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (btScalar)((btGeneric6DofSpringConstraint const *)arg1)->getEquilibriumPoint(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setAxis_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  
  (arg1)->setAxis((btVector3 const &)*arg2,(btVector3 const &)*arg3);
  
}


void _wrap_btGeneric6DofSpringConstraint_getInfo2_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  
  (arg1)->getInfo2(arg2);
  
}


intgo _wrap_btGeneric6DofSpringConstraint_calculateSerializeBufferSize_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  result = (int)((btGeneric6DofSpringConstraint const *)arg1)->calculateSerializeBufferSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_btGeneric6DofSpringConstraint_serialize_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, void *_swig_go_1, btSerializer *_swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  btSerializer *arg3 = (btSerializer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(btSerializer **)&_swig_go_2; 
  
  result = (char *)((btGeneric6DofSpringConstraint const *)arg1)->serialize(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofSpringConstraint_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  if (swig_b0) (swig_b0)->m_useSolveConstraintObsolete = arg2;
  
}


bool _wrap_GetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (bool) ((swig_b0)->m_useSolveConstraintObsolete);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->calculateTransforms((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


void _wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->calculateTransforms();
  
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformA_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &((btGeneric6DofConstraint const *)swig_b0)->getCalculatedTransformA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformB_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &((btGeneric6DofConstraint const *)swig_b0)->getCalculatedTransformB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &((btGeneric6DofConstraint const *)swig_b0)->getFrameOffsetA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &(swig_b0)->getFrameOffsetA();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &((btGeneric6DofConstraint const *)swig_b0)->getFrameOffsetB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


btTransform *_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *result = 0 ;
  btTransform *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTransform *) &(swig_b0)->getFrameOffsetB();
  *(btTransform **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_buildJacobian_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->buildJacobian();
  
}


void _wrap_btGeneric6DofSpringConstraint_getInfo1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->getInfo1(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getInfo1NonVirtual_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo1 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo1 *arg2 = (btTypedConstraint::btConstraintInfo1 *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo1 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->getInfo1NonVirtual(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getInfo2NonVirtual_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTypedConstraint::btConstraintInfo2 *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTypedConstraint::btConstraintInfo2 *arg2 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->getInfo2NonVirtual(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8);
  
}


void _wrap_btGeneric6DofSpringConstraint_updateRHS_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->updateRHS(arg2);
  
}


btVector3 *_wrap_btGeneric6DofSpringConstraint_getAxis_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btVector3 result;
  btVector3 *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = ((btGeneric6DofConstraint const *)swig_b0)->getAxis(arg2);
  *(btVector3 **)&_swig_go_result = new btVector3(result); 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getAngle_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btScalar)((btGeneric6DofConstraint const *)swig_b0)->getAngle(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getRelativePivotPosition_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btScalar)((btGeneric6DofConstraint const *)swig_b0)->getRelativePivotPosition(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setFrames_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btTransform *_swig_go_1, btTransform *_swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTransform *arg2 = 0 ;
  btTransform *arg3 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setFrames((btTransform const &)*arg2,(btTransform const &)*arg3);
  
}


bool _wrap_btGeneric6DofSpringConstraint_testAngularLimitMotor_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (bool)(swig_b0)->testAngularLimitMotor(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setLinearLowerLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setLinearLowerLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getLinearLowerLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  ((btGeneric6DofConstraint const *)swig_b0)->getLinearLowerLimit(*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setLinearUpperLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setLinearUpperLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getLinearUpperLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  ((btGeneric6DofConstraint const *)swig_b0)->getLinearUpperLimit(*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setAngularLowerLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setAngularLowerLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getAngularLowerLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  ((btGeneric6DofConstraint const *)swig_b0)->getAngularLowerLimit(*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setAngularUpperLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setAngularUpperLimit((btVector3 const &)*arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_getAngularUpperLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btVector3 *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btVector3 *arg2 = 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  ((btGeneric6DofConstraint const *)swig_b0)->getAngularUpperLimit(*arg2);
  
}


btRotationalLimitMotor *_wrap_btGeneric6DofSpringConstraint_getRotationalLimitMotor_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btRotationalLimitMotor *result = 0 ;
  btRotationalLimitMotor *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btRotationalLimitMotor *)(swig_b0)->getRotationalLimitMotor(arg2);
  *(btRotationalLimitMotor **)&_swig_go_result = (btRotationalLimitMotor *)result; 
  return _swig_go_result;
}


btTranslationalLimitMotor *_wrap_btGeneric6DofSpringConstraint_getTranslationalLimitMotor_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTranslationalLimitMotor *result = 0 ;
  btTranslationalLimitMotor *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btTranslationalLimitMotor *)(swig_b0)->getTranslationalLimitMotor();
  *(btTranslationalLimitMotor **)&_swig_go_result = (btTranslationalLimitMotor *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setLimit_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, float _swig_go_3) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  btScalar arg4 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setLimit(arg2,arg3,arg4);
  
}


bool _wrap_btGeneric6DofSpringConstraint_isLimited_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (bool)((btGeneric6DofConstraint const *)swig_b0)->isLimited(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_calcAnchorPos_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->calcAnchorPos();
  
}


intgo _wrap_btGeneric6DofSpringConstraint_get_limit_motor_info2__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btRotationalLimitMotor *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btTypedConstraint::btConstraintInfo2 *_swig_go_8, intgo _swig_go_9, btVector3 *_swig_go_10, intgo _swig_go_11, intgo _swig_go_12) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRotationalLimitMotor *arg2 = (btRotationalLimitMotor *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btTypedConstraint::btConstraintInfo2 *arg9 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  int arg10 ;
  btVector3 *arg11 = 0 ;
  int arg12 ;
  int arg13 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btRotationalLimitMotor **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = *(btVector3 **)&_swig_go_10; 
  arg12 = (int)_swig_go_11; 
  arg13 = (int)_swig_go_12; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (int)(swig_b0)->get_limit_motor_info2(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9,arg10,*arg11,arg12,arg13);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_get_limit_motor_info2__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btRotationalLimitMotor *_swig_go_1, btTransform *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, btTypedConstraint::btConstraintInfo2 *_swig_go_8, intgo _swig_go_9, btVector3 *_swig_go_10, intgo _swig_go_11) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRotationalLimitMotor *arg2 = (btRotationalLimitMotor *) 0 ;
  btTransform *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btTypedConstraint::btConstraintInfo2 *arg9 = (btTypedConstraint::btConstraintInfo2 *) 0 ;
  int arg10 ;
  btVector3 *arg11 = 0 ;
  int arg12 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btRotationalLimitMotor **)&_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = *(btTypedConstraint::btConstraintInfo2 **)&_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  arg11 = *(btVector3 **)&_swig_go_10; 
  arg12 = (int)_swig_go_11; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (int)(swig_b0)->get_limit_motor_info2(arg2,(btTransform const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9,arg10,*arg11,arg12);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGeneric6DofSpringConstraint_getUseFrameOffset_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (bool)((btGeneric6DofConstraint const *)swig_b0)->getUseFrameOffset();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setUseFrameOffset_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setUseFrameOffset(arg2);
  
}


bool _wrap_btGeneric6DofSpringConstraint_getUseLinearReferenceFrameA_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (bool)((btGeneric6DofConstraint const *)swig_b0)->getUseLinearReferenceFrameA();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setUseLinearReferenceFrameA_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setUseLinearReferenceFrameA(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setParam__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  int arg4 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setParam(arg2,arg3,arg4);
  
}


void _wrap_btGeneric6DofSpringConstraint_setParam__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar arg3 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  (swig_b0)->setParam(arg2,arg3);
  
}


float _wrap_btGeneric6DofSpringConstraint_getParam__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  int arg3 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btScalar)((btGeneric6DofConstraint const *)swig_b0)->getParam(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getParam__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (btScalar)((btGeneric6DofConstraint const *)swig_b0)->getParam(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getFlags_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  result = (int)((btGeneric6DofConstraint const *)swig_b0)->getFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofSpringConstraint_getFixedBody_bt_e001408c92acdfd7() {
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  
  result = (btRigidBody *) &btTypedConstraint::getFixedBody();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getOverrideNumSolverIterations_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (int)((btTypedConstraint const *)swig_b1)->getOverrideNumSolverIterations();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setOverrideNumSolverIterations_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setOverrideNumSolverIterations(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setupSolverConstraint_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btAlignedObjectArray< btSolverConstraint > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btConstraintArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  btScalar arg5 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btConstraintArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setupSolverConstraint(*arg2,arg3,arg4,arg5);
  
}


void _wrap_btGeneric6DofSpringConstraint_internalSetAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->internalSetAppliedImpulse(arg2);
  
}


float _wrap_btGeneric6DofSpringConstraint_internalGetAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btScalar)(swig_b1)->internalGetAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btScalar)((btTypedConstraint const *)swig_b1)->getBreakingImpulseThreshold();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setBreakingImpulseThreshold(arg2);
  
}


bool _wrap_btGeneric6DofSpringConstraint_isEnabled_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (bool)((btTypedConstraint const *)swig_b1)->isEnabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setEnabled_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setEnabled(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_solveConstraintObsolete_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btSolverBody *_swig_go_1, btSolverBody *_swig_go_2, float _swig_go_3) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btSolverBody *arg2 = 0 ;
  btSolverBody *arg3 = 0 ;
  btScalar arg4 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btSolverBody **)&_swig_go_1; 
  arg3 = *(btSolverBody **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->solveConstraintObsolete(*arg2,*arg3,arg4);
  
}


btRigidBody *_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btRigidBody *) &((btTypedConstraint const *)swig_b1)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btRigidBody *) &(swig_b1)->getRigidBodyA();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btRigidBody *) &((btTypedConstraint const *)swig_b1)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


btRigidBody *_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btRigidBody *result = 0 ;
  btRigidBody *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btRigidBody *) &(swig_b1)->getRigidBodyB();
  *(btRigidBody **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getUserConstraintType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (int)((btTypedConstraint const *)swig_b1)->getUserConstraintType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setUserConstraintType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setUserConstraintType(arg2);
  
}


void _wrap_btGeneric6DofSpringConstraint_setUserConstraintId_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setUserConstraintId(arg2);
  
}


intgo _wrap_btGeneric6DofSpringConstraint_getUserConstraintId_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (int)((btTypedConstraint const *)swig_b1)->getUserConstraintId();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setUserConstraintPtr_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, void *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setUserConstraintPtr(arg2);
  
}


void *_wrap_btGeneric6DofSpringConstraint_getUserConstraintPtr_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (void *)(swig_b1)->getUserConstraintPtr();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setJointFeedback_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, btJointFeedback *_swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btJointFeedback *arg2 = (btJointFeedback *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = *(btJointFeedback **)&_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setJointFeedback(arg2);
  
}


btJointFeedback *_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_0_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btJointFeedback *)((btTypedConstraint const *)swig_b1)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


btJointFeedback *_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_1_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btJointFeedback *result = 0 ;
  btJointFeedback *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btJointFeedback *)(swig_b1)->getJointFeedback();
  *(btJointFeedback **)&_swig_go_result = (btJointFeedback *)result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getUid_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (int)((btTypedConstraint const *)swig_b1)->getUid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_btGeneric6DofSpringConstraint_needsFeedback_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (bool)((btTypedConstraint const *)swig_b1)->needsFeedback();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_enableFeedback_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, bool _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  bool arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->enableFeedback(arg2);
  
}


float _wrap_btGeneric6DofSpringConstraint_getAppliedImpulse_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btScalar)((btTypedConstraint const *)swig_b1)->getAppliedImpulse();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getConstraintType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btTypedConstraintType result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btTypedConstraintType)((btTypedConstraint const *)swig_b1)->getConstraintType();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraint_setDbgDrawSize_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, float _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  (swig_b1)->setDbgDrawSize(arg2);
  
}


float _wrap_btGeneric6DofSpringConstraint_getDbgDrawSize_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  btScalar result;
  float _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  result = (btScalar)(swig_b1)->getDbgDrawSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetbtGeneric6DofSpringConstraint_M_objectType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0, intgo _swig_go_1) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int arg2 ;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  btTypedObject *swig_b2 = (btTypedObject *)swig_b1;
  if (swig_b2) (swig_b2)->m_objectType = arg2;
  
}


intgo _wrap_GetbtGeneric6DofSpringConstraint_M_objectType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  btTypedObject *swig_b2 = (btTypedObject *)swig_b1;
  result = (int) ((swig_b2)->m_objectType);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_btGeneric6DofSpringConstraint_getObjectType_bt_e001408c92acdfd7(btGeneric6DofSpringConstraint *_swig_go_0) {
  btGeneric6DofSpringConstraint *arg1 = (btGeneric6DofSpringConstraint *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraint **)&_swig_go_0; 
  
  btGeneric6DofConstraint *swig_b0 = (btGeneric6DofConstraint *)arg1;
  btTypedConstraint *swig_b1 = (btTypedConstraint *)swig_b0;
  btTypedObject *swig_b2 = (btTypedObject *)swig_b1;
  result = (int)((btTypedObject const *)swig_b2)->getObjectType();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintData_m_6dofData_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0, btGeneric6DofConstraintData *_swig_go_1) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  btGeneric6DofConstraintData *arg2 = (btGeneric6DofConstraintData *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  arg2 = *(btGeneric6DofConstraintData **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_6dofData = *arg2;
  
}


btGeneric6DofConstraintData *_wrap_btGeneric6DofSpringConstraintData_m_6dofData_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  btGeneric6DofConstraintData *result = 0 ;
  btGeneric6DofConstraintData *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  result = (btGeneric6DofConstraintData *)& ((arg1)->m_6dofData);
  *(btGeneric6DofConstraintData **)&_swig_go_result = (btGeneric6DofConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintData_m_springEnabled_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0, intgo *_swig_go_1) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_springEnabled;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btGeneric6DofSpringConstraintData_m_springEnabled_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_springEnabled);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0, float *_swig_go_1) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_equilibriumPoint;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_equilibriumPoint);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintData_m_springStiffness_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0, float *_swig_go_1) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_springStiffness;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btGeneric6DofSpringConstraintData_m_springStiffness_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_springStiffness);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintData_m_springDamping_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0, float *_swig_go_1) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->m_springDamping;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_btGeneric6DofSpringConstraintData_m_springDamping_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->m_springDamping);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


btGeneric6DofSpringConstraintData *_wrap_new_btGeneric6DofSpringConstraintData_bt_e001408c92acdfd7() {
  btGeneric6DofSpringConstraintData *result = 0 ;
  btGeneric6DofSpringConstraintData *_swig_go_result;
  
  
  result = (btGeneric6DofSpringConstraintData *)new btGeneric6DofSpringConstraintData();
  *(btGeneric6DofSpringConstraintData **)&_swig_go_result = (btGeneric6DofSpringConstraintData *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofSpringConstraintData_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintData *_swig_go_0) {
  btGeneric6DofSpringConstraintData *arg1 = (btGeneric6DofSpringConstraintData *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0, btGeneric6DofConstraintDoubleData2 *_swig_go_1) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  btGeneric6DofConstraintDoubleData2 *arg2 = (btGeneric6DofConstraintDoubleData2 *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_6dofData = *arg2;
  
}


btGeneric6DofConstraintDoubleData2 *_wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  btGeneric6DofConstraintDoubleData2 *result = 0 ;
  btGeneric6DofConstraintDoubleData2 *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (btGeneric6DofConstraintDoubleData2 *)& ((arg1)->m_6dofData);
  *(btGeneric6DofConstraintDoubleData2 **)&_swig_go_result = (btGeneric6DofConstraintDoubleData2 *)result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0, intgo *_swig_go_1) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->m_springEnabled;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->m_springEnabled);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0, double *_swig_go_1) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_equilibriumPoint;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_equilibriumPoint);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0, double *_swig_go_1) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_springStiffness;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_springStiffness);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_set_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0, double *_swig_go_1) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->m_springDamping;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_get_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->m_springDamping);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


btGeneric6DofSpringConstraintDoubleData2 *_wrap_new_btGeneric6DofSpringConstraintDoubleData2_bt_e001408c92acdfd7() {
  btGeneric6DofSpringConstraintDoubleData2 *result = 0 ;
  btGeneric6DofSpringConstraintDoubleData2 *_swig_go_result;
  
  
  result = (btGeneric6DofSpringConstraintDoubleData2 *)new btGeneric6DofSpringConstraintDoubleData2();
  *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_result = (btGeneric6DofSpringConstraintDoubleData2 *)result; 
  return _swig_go_result;
}


void _wrap_delete_btGeneric6DofSpringConstraintDoubleData2_bt_e001408c92acdfd7(btGeneric6DofSpringConstraintDoubleData2 *_swig_go_0) {
  btGeneric6DofSpringConstraintDoubleData2 *arg1 = (btGeneric6DofSpringConstraintDoubleData2 *) 0 ;
  
  arg1 = *(btGeneric6DofSpringConstraintDoubleData2 **)&_swig_go_0; 
  
  delete arg1;
  
}


btMDefaultColors *_wrap_new_btMDefaultColors_bt_e001408c92acdfd7(btVector3 *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6) {
  btVector3 arg1 ;
  btVector3 arg2 ;
  btVector3 arg3 ;
  btVector3 arg4 ;
  btVector3 arg5 ;
  btVector3 arg6 ;
  btVector3 arg7 ;
  btVector3 *argp1 ;
  btVector3 *argp2 ;
  btVector3 *argp3 ;
  btVector3 *argp4 ;
  btVector3 *argp5 ;
  btVector3 *argp6 ;
  btVector3 *argp7 ;
  btMDefaultColors *result = 0 ;
  btMDefaultColors *_swig_go_result;
  
  
  argp1 = (btVector3 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg1 = (btVector3)*argp1;
  
  
  argp2 = (btVector3 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg2 = (btVector3)*argp2;
  
  
  argp3 = (btVector3 *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg3 = (btVector3)*argp3;
  
  
  argp4 = (btVector3 *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg4 = (btVector3)*argp4;
  
  
  argp5 = (btVector3 *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg5 = (btVector3)*argp5;
  
  
  argp6 = (btVector3 *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg6 = (btVector3)*argp6;
  
  
  argp7 = (btVector3 *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null btVector3");
  }
  arg7 = (btVector3)*argp7;
  
  
  result = (btMDefaultColors *)new btMDefaultColors(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(btMDefaultColors **)&_swig_go_result = (btMDefaultColors *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMDefaultColors_bt_e001408c92acdfd7(btMDefaultColors *_swig_go_0) {
  btMDefaultColors *arg1 = (btMDefaultColors *) 0 ;
  
  arg1 = *(btMDefaultColors **)&_swig_go_0; 
  
  delete arg1;
  
}


btMDebugDrawLiner *_wrap__swig_NewDirectorBtMDebugDrawLinerBtMDebugDrawLiner_bt_e001408c92acdfd7(intgo _swig_go_0) {
  int arg1 ;
  btMDebugDrawLiner *result = 0 ;
  btMDebugDrawLiner *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = new SwigDirector_btMDebugDrawLiner(arg1);
  *(btMDebugDrawLiner **)&_swig_go_result = (btMDebugDrawLiner *)result; 
  return _swig_go_result;
}


void _wrap_DeleteDirectorBtMDebugDrawLiner_bt_e001408c92acdfd7(btMDebugDrawLiner *_swig_go_0) {
  btMDebugDrawLiner *arg1 = (btMDebugDrawLiner *) 0 ;
  
  arg1 = *(btMDebugDrawLiner **)&_swig_go_0; 
  
  delete arg1;
  
}


btMDebugDrawLiner *_wrap_new_btMDebugDrawLiner_bt_e001408c92acdfd7() {
  btMDebugDrawLiner *result = 0 ;
  btMDebugDrawLiner *_swig_go_result;
  
  
  _swig_gopanic("accessing abstract class or protected constructor");
  *(btMDebugDrawLiner **)&_swig_go_result = (btMDebugDrawLiner *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMDebugDrawLiner_bt_e001408c92acdfd7(btMDebugDrawLiner *_swig_go_0) {
  btMDebugDrawLiner *arg1 = (btMDebugDrawLiner *) 0 ;
  
  arg1 = *(btMDebugDrawLiner **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMDebugDrawLiner_drawLine_bt_e001408c92acdfd7(btMDebugDrawLiner *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDrawLiner *arg1 = (btMDebugDrawLiner *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDrawLiner **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawLine((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


btMDebugDraw *_wrap_new_btMDebugDraw_bt_e001408c92acdfd7() {
  btMDebugDraw *result = 0 ;
  btMDebugDraw *_swig_go_result;
  
  
  result = (btMDebugDraw *)new btMDebugDraw();
  *(btMDebugDraw **)&_swig_go_result = (btMDebugDraw *)result; 
  return _swig_go_result;
}


void _wrap_delete_btMDebugDraw_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_btMDebugDraw_drawLine__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawLine((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btMDebugDraw_drawSphere__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, float _swig_go_1, btTransform *_swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btScalar arg2 ;
  btTransform *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = *(btTransform **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawSphere(arg2,(btTransform const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btMDebugDraw_drawSphere__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawSphere((btVector3 const &)*arg2,arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btMDebugDraw_drawTriangle__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, btVector3 *_swig_go_5, btVector3 *_swig_go_6, btVector3 *_swig_go_7, float _swig_go_8) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  btVector3 *arg7 = 0 ;
  btVector3 *arg8 = 0 ;
  btScalar arg9 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  arg7 = *(btVector3 **)&_swig_go_6; 
  arg8 = *(btVector3 **)&_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  
  (arg1)->drawTriangle((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,(btVector3 const &)*arg6,(btVector3 const &)*arg7,(btVector3 const &)*arg8,arg9);
  
}


void _wrap_btMDebugDraw_drawTriangle__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, btVector3 *_swig_go_4, float _swig_go_5) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  btScalar arg6 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  
  (arg1)->drawTriangle((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,(btVector3 const &)*arg5,arg6);
  
}


void _wrap_btMDebugDraw_drawAabb_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawAabb((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btMDebugDraw_drawTransform_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btTransform *_swig_go_1, float _swig_go_2) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btTransform *arg2 = 0 ;
  btScalar arg3 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btTransform **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  
  (arg1)->drawTransform((btTransform const &)*arg2,arg3);
  
}


void _wrap_btMDebugDraw_drawArc__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, btVector3 *_swig_go_8, bool _swig_go_9, float _swig_go_10) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btVector3 *arg9 = 0 ;
  bool arg10 ;
  btScalar arg11 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  
  (arg1)->drawArc((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,(btVector3 const &)*arg9,arg10,arg11);
  
}


void _wrap_btMDebugDraw_drawArc__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, btVector3 *_swig_go_8, bool _swig_go_9) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btVector3 *arg9 = 0 ;
  bool arg10 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = *(btVector3 **)&_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  (arg1)->drawArc((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,(btVector3 const &)*arg9,arg10);
  
}


void _wrap_btMDebugDraw_drawSpherePatch__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9, float _swig_go_10, bool _swig_go_11) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  btScalar arg11 ;
  bool arg12 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  arg12 = (bool)_swig_go_11; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10,arg11,arg12);
  
}


void _wrap_btMDebugDraw_drawSpherePatch__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9, float _swig_go_10) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  btScalar arg11 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  arg11 = (btScalar)_swig_go_10; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10,arg11);
  
}


void _wrap_btMDebugDraw_drawSpherePatch__SWIG_2_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, btVector3 *_swig_go_9) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  btScalar arg5 ;
  btScalar arg6 ;
  btScalar arg7 ;
  btScalar arg8 ;
  btScalar arg9 ;
  btVector3 *arg10 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  arg5 = (btScalar)_swig_go_4; 
  arg6 = (btScalar)_swig_go_5; 
  arg7 = (btScalar)_swig_go_6; 
  arg8 = (btScalar)_swig_go_7; 
  arg9 = (btScalar)_swig_go_8; 
  arg10 = *(btVector3 **)&_swig_go_9; 
  
  (arg1)->drawSpherePatch((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4,arg5,arg6,arg7,arg8,arg9,(btVector3 const &)*arg10);
  
}


void _wrap_btMDebugDraw_drawBox__SWIG_0_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawBox((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btMDebugDraw_drawBox__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawBox((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btMDebugDraw_drawCapsule_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCapsule(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btMDebugDraw_drawCylinder_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCylinder(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btMDebugDraw_drawCone_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, float _swig_go_1, float _swig_go_2, intgo _swig_go_3, btTransform *_swig_go_4, btVector3 *_swig_go_5) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btScalar arg2 ;
  btScalar arg3 ;
  int arg4 ;
  btTransform *arg5 = 0 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = (btScalar)_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(btTransform **)&_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawCone(arg2,arg3,arg4,(btTransform const &)*arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btMDebugDraw_drawPlane_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, float _swig_go_2, btTransform *_swig_go_3, btVector3 *_swig_go_4) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btScalar arg3 ;
  btTransform *arg4 = 0 ;
  btVector3 *arg5 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = (btScalar)_swig_go_2; 
  arg4 = *(btTransform **)&_swig_go_3; 
  arg5 = *(btVector3 **)&_swig_go_4; 
  
  (arg1)->drawPlane((btVector3 const &)*arg2,arg3,(btTransform const &)*arg4,(btVector3 const &)*arg5);
  
}


void _wrap_btMDebugDraw_clearLines_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  (arg1)->clearLines();
  
}


void _wrap_btMDebugDraw_flushLines_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  (arg1)->flushLines();
  
}


btIDebugDraw::DefaultColors *_wrap_btMDebugDraw_getDefaultColors_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btIDebugDraw::DefaultColors result;
  btIDebugDraw::DefaultColors *_swig_go_result;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  result = ((btMDebugDraw const *)arg1)->getDefaultColors();
  *(btIDebugDraw::DefaultColors **)&_swig_go_result = new btIDebugDraw::DefaultColors(result); 
  return _swig_go_result;
}


void _wrap_btMDebugDraw_setMDefaultColors_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btMDefaultColors *_swig_go_1) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btMDefaultColors *arg2 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btMDefaultColors **)&_swig_go_1; 
  
  (arg1)->setMDefaultColors((btMDefaultColors const &)*arg2);
  
}


void _wrap_btMDebugDraw_setLiner_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btMDebugDrawLiner *_swig_go_1) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btMDebugDrawLiner *arg2 = (btMDebugDrawLiner *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btMDebugDrawLiner **)&_swig_go_1; 
  
  (arg1)->setLiner(arg2);
  
}


btMDebugDrawLiner *_wrap_btMDebugDraw_getLiner_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btMDebugDrawLiner *result = 0 ;
  btMDebugDrawLiner *_swig_go_result;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  result = (btMDebugDrawLiner *)(arg1)->getLiner();
  *(btMDebugDrawLiner **)&_swig_go_result = (btMDebugDrawLiner *)result; 
  return _swig_go_result;
}


void _wrap_btMDebugDraw_setDebugMode_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, intgo _swig_go_1) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  int arg2 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->setDebugMode(arg2);
  
}


intgo _wrap_btMDebugDraw_getDebugMode_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  result = (int)((btMDebugDraw const *)arg1)->getDebugMode();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_btMDebugDraw_drawLine__SWIG_1_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, btVector3 *_swig_go_3) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btVector3 *arg4 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = *(btVector3 **)&_swig_go_3; 
  
  (arg1)->drawLine((btVector3 const &)*arg2,(btVector3 const &)*arg3,(btVector3 const &)*arg4);
  
}


void _wrap_btMDebugDraw_drawContactPoint_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, btVector3 *_swig_go_2, float _swig_go_3, intgo _swig_go_4, btVector3 *_swig_go_5) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  btVector3 *arg3 = 0 ;
  btScalar arg4 ;
  int arg5 ;
  btVector3 *arg6 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  arg3 = *(btVector3 **)&_swig_go_2; 
  arg4 = (btScalar)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(btVector3 **)&_swig_go_5; 
  
  (arg1)->drawContactPoint((btVector3 const &)*arg2,(btVector3 const &)*arg3,arg4,arg5,(btVector3 const &)*arg6);
  
}


void _wrap_btMDebugDraw_reportErrorWarning_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, _gostring_ _swig_go_1) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->reportErrorWarning((char const *)arg2);
  
  free(arg2); 
}


void _wrap_btMDebugDraw_draw3dText_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btVector3 *_swig_go_1, _gostring_ _swig_go_2) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btVector3 *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btVector3 **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->draw3dText((btVector3 const &)*arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_btMDebugDraw_setDefaultColors_bt_e001408c92acdfd7(btMDebugDraw *_swig_go_0, btIDebugDraw::DefaultColors *_swig_go_1) {
  btMDebugDraw *arg1 = (btMDebugDraw *) 0 ;
  btIDebugDraw::DefaultColors *arg2 = 0 ;
  
  arg1 = *(btMDebugDraw **)&_swig_go_0; 
  arg2 = *(btIDebugDraw::DefaultColors **)&_swig_go_1; 
  
  btIDebugDraw *swig_b0 = (btIDebugDraw *)arg1;
  (swig_b0)->setDefaultColors((btIDebugDraw::DefaultColors const &)*arg2);
  
}


#ifdef __cplusplus
}
#endif

